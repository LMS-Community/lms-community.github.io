{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#lyrion-music-server","title":"Lyrion Music Server","text":"<p>Lyrion Music Server (formerly Logitech Media Server) is open-source server software which controls a wide range of Squeezebox audio players. Lyrion can stream your local music collection, internet radio stations, and content from many streaming services (with and without subscriptions).</p>"},{"location":"#lms-ecosystem","title":"LMS ecosystem","text":"<p>Squeezebox players hit the market in 2000 as hardware and software developed by Slim Devices, later acquired by Logitech. A wide array of hardware and software solutions make up the LMS ecosystem to support Squeezebox devices and OS.</p> <p>For a LMS system, there will need to be server software running on a controlling computer or device. This provides connections, settings, and customizations to one or more music players. The peer user community is committed to developing the Lyrion software for a wide variety of common and easily obtained devices such as a Windows or Mac computer, tablets and phones, and Raspberry Pi. Because of its scalability, all of these services can be distributed across separate devices to support libraries of hundreds of thousands of tracks and numerous players distributing music throughout an entire house and even across multiple locations.</p> <p>With Lyrion, you have greater control and customization of your music - how the server works, how you interact with it, and what it looks like.  You have the ability to use the same interface to access your music on almost any device, and to select the appropriate player for every need. There is wide support by the LMS community to add new functionality, fix issues, integrate with other products, and help support users to get the most enjoyment from their music.</p> <p>If you're new to Lyrion, click on Getting Started with LMS to learn more.</p>"},{"location":"contact/","title":"Contact Information","text":""},{"location":"contact/#support","title":"Support","text":"<p>We don't provide formal support. Lyrion is a community effort. Please reach out to the developers on forums.lyrion.org if you need help or further information.</p>"},{"location":"contact/#bug-reports","title":"Bug reports","text":"<p>If you've found a bug in Lyrion Music Server or some related project, please reach out to forums.lyrion.org. Once an issue has been confirmed, submit a bug report on github.com/LMS-Community.</p>"},{"location":"contact/#coordination","title":"Coordination","text":"<p>Most of the Lyrion activities is coordinated by Michael Herger (michael@herger.net). Please note that you can not get support from that address directly.</p> <p>Privacy related questions can be sent to privacy@lyrion.org.</p>"},{"location":"dco/","title":"Developer Certificate of Origin (DCO)","text":"<pre><code>Developer Certificate of Origin\nVersion 1.1\n\nCopyright (C) 2004, 2006 The Linux Foundation and its contributors.\n\nEveryone is permitted to copy and distribute verbatim copies of this\nlicense document, but changing it is not allowed.\n\n\nDeveloper's Certificate of Origin 1.1\n\nBy making a contribution to this project, I certify that:\n\n(a) The contribution was created in whole or in part by me and I\n    have the right to submit it under the open source license\n    indicated in the file; or\n\n(b) The contribution is based upon previous work that, to the best\n    of my knowledge, is covered under an appropriate open source\n    license and I have the right under that license to submit that\n    work with modifications, whether created in whole or in part\n    by me, under the same open source license (unless I am\n    permitted to submit under a different license), as indicated\n    in the file; or\n\n(c) The contribution was provided directly to me by some other\n    person who certified (a), (b) or (c) and I have not modified\n    it.\n\n(d) I understand and agree that this project and the contribution\n    are public and that a record of the contribution (including all\n    personal information I submit with it, including my sign-off) is\n    maintained indefinitely and may be redistributed consistent with\n    this project or the open source license(s) involved.\n</code></pre> <p>This copy is here for your convenience. The original version is available on https://developercertificate.org.</p>"},{"location":"privacy/","title":"Lyrion Privacy Policy","text":"<p>Our team promises to never sell your data and to protect your privacy at all times.</p> <p>This Privacy Policy is designed to help you understand what information we collect, how we use it, and under what circumstances, if any, we share it.</p> <ul> <li> <p>We may update this Privacy Policy and other service-specific policies (1) to reflect changes to our products, services or operations, (2) to comply with relevant regulations and reflect new practices, or (3) to improve readability and make clarifications that our users request.</p> </li> <li> <p>We may provide a more prominent notice (including email notifications) when we make material changes that all of our users should know about. This information was last updated on January 3, 2025.</p> </li> </ul>"},{"location":"privacy/#scope-and-audience","title":"Scope and Audience","text":"<p>(a) We at the Lyrion community (\"Lyrion\", \"we\" or \"us\") want this policy to be easy for everyone to understand. For this reason, the examples we provide are not exhaustive technical specifications, and we use general terms where possible.</p> <p>(b) Most of our source code is publicly available on GitHub at https://github.com/LMS-Community, where it can be viewed at any time by anyone interested in implementation details and recent changes.</p> <p>(c) Given the complexity of today's Internet infrastructure and the pace of technical innovation, it is impossible to provide a complete list of data types and field names for every conceivable use case. The data we can actually see (and theoretically store) largely depends on what external services and our users make available to us, as well as on the underlying protocols and libraries.</p>"},{"location":"privacy/#guidelines-for-the-processing-of-personal-data","title":"Guidelines for the Processing of Personal Data","text":"<p>(a) Protecting our users' privacy is part of our mission.</p> <p>(b) We will always process your personal data confidentially, fairly, and in accordance with the law.</p> <p>(c) We will avoid keeping personal data longer than necessary.</p> <p>(d) Your personal data may only be used and disclosed when necessary to: * respond to your requests, validate and verify service requests, and provide the requested services * let you know about upcoming changes or improvements to our services * notify you of suspicious activity, quota limits, or other issues related to your account * protect our rights, property or safety, our users and the public * comply with applicable laws, regulations, legal process, or governmental requests * enforce our Privacy Policy and\u00a0Terms of Service, including investigating potential violations * detect, prevent, or otherwise address fraud, security, or technical issues, including prevention of spam/malware</p> <p>(e) When we share your information with external service providers\u00a0or other business partners, we will ensure that they agree to obligations consistent with these guidelines and other appropriate confidentiality and security measures.</p>"},{"location":"privacy/#your-rights-and-choices","title":"Your Rights and Choices","text":"<p>(a) You understand that by using the software and services we provide, you agree to the collection and use of this information, including the transfer of this information to the United States of America and/or other countries for storage, processing and use by us.</p> <p>(b) If you agree not as an individual, but on behalf of your company, government, or other entity for which you are acting (e.g., as an employee or government official), then \"you\" or \"Customer\" means your entity and you bind your entity to this Privacy Policy and our Terms of Service. You warrant that you have the legal power and authority to do so.</p> <p>(c) You can access much of our website without authentication and use basic features of our Software offline and/or without signing up, which limits the amount and type of information we collect.</p> <p>(d) If you have signed up to our forums and/or receive newsletters and/or general product notifications, you can unsubscribe at any time. To do so, click the \"unsubscribe\" or \"opt-out\" link in the emails you receive, or go to your forum profile\u2019s \"Privacy\" section to delete your account. Even if you opt out, we may continue to contact you if there are problems with your customer account, such as failed transactions, and to provide the services you have requested, help you resolve problems, answer questions, comply with applicable laws and regulations, and for similar purposes.</p>"},{"location":"privacy/#third-party-products","title":"Third-Party Products","text":"<p>You may choose to use or procure third-party products or services in connection with Lyrion's Software. Lyrion is not responsible for any acts or omissions of third parties, including third party access to or use of your data.</p>"},{"location":"privacy/#information-not-collected","title":"Information Not Collected","text":""},{"location":"privacy/#privately-hosted-data","title":"Privately Hosted Data","text":"<p>(a) Self-hosting is the easiest way to stay in control and protect your privacy. Data that never leaves your private network cannot be collected by anyone, including us.</p> <p>(b) Do not install our software on a public server outside your home network or expose it to the internet. Your files and passwords will otherwise be transmitted in clear text and can be intercepted by anyone, including your provider, hackers, and governments.</p> <p>(c) It is your personal responsibility to make backup copies of your private data and ensure that they are kept secure. Do not upload unencrypted backup copies of your private data to the cloud.</p> <p>(d) Using certain features requires\u00a0communication with external services to retrieve the necessary data, such as music files, which are not included in the downloadable app due to high maintenance and system requirements as well as licensing restrictions.</p>"},{"location":"privacy/#information-collected-and-stored","title":"Information Collected and Stored","text":""},{"location":"privacy/#1-service-accounts","title":"1. Service Accounts","text":"<p>This applies only to user and customer accounts stored on our servers, not to your private servers. It is your decision whether you want to sign up to enjoy additional benefits. (a) In order to provide the requested products and services, we may collect personal information, potentially personally identifying information, and other confidential information (stored as a hash that cannot be reversed, if possible). This data may be provided by you, our partners or automatically generated by our backend services. It can include your full name, email addresses, phone numbers, home and billing address, handles and social media links, usernames, language preferences, registration date, date of last authentication, date of last data change, hashed passwords, unique IDs, IP addresses, and cryptographic tokens.</p> <p>Use case example:</p> <p>(1) Personal, request, and authentication data, including browser type, language preference, IP address, time, country, email, username, the URL of your GitHub profile, and cryptographic tokens may be collected when you authenticate with your GitHub account to prove that you are an existing sponsor.</p> <p>(2) When a new service account is created in our backend database, it will generate one or more unique IDs that can be used to identify such account and related data in the future.</p> <p>(3) After you assign such information to your private Lyrion instance, it can start retrieving missing location details from our backend services. Such backend requests consist of a body part (the location for which you want the details) and a header part containing the public IP address of your private server instance (can be the same as your public home IP address if you host it at home). HTTP request header data is usually stored for at least a short period of time, unless the request fails and your server cannot reach our backend. This is common to protect our infrastructure from denial-of-service attacks, to implement load balancing, or to limit the request rate. See the following sections to learn more about related use cases involving the same, similar, and other data.</p>"},{"location":"privacy/#2-third-party-subprocessors","title":"2. Third-Party Subprocessors","text":""},{"location":"privacy/#21-payment-processors","title":"2.1 Payment Processors","text":"<p>We have or have had business relationships with the following companies and service providers to process payments for\u00a0or to manage our funds: * OpenCollective.com</p> <p>If you would like to learn more about the data they collect and how it is processed, you can click on the corresponding link to view their privacy policy.</p> <p>In general, the following applies:</p> <p>(a) When you visit their website, the \u00a0same basic information\u00a0as described in Section 9 may be collected, including your IP address for at least a limited time in order to (i) provide the requested services, (ii) perform load balancing or enforce rate limits, (iii) comply with applicable laws, and (iv) detect, prevent, or respond to fraud, security, or technical issues, including the prevention of spam/malware.</p> <p>(b) When you sign up, you will be asked for your credit card and billing information, which may include your business name and contact information in addition to your personal name, address, birthday, email address, and phone number. Some of this information may be shared with us, specifically to set up your account, verify payment, and generate tax reports.</p>"},{"location":"privacy/#22-email-processors","title":"2.2 Email Processors","text":"<p>The following providers may process emails that we send and/or receive:</p> <ul> <li>vBulletin</li> </ul> <p>If you would like to learn more about the data they collect and how it is processed, you can click on the corresponding link to view their privacy policy.</p> <p>In general, email messages are not end-to-end encrypted, and the following applies:</p> <p>(a) Your provider, our providers, and any provider in between, in the case of forwarding, logs transactions for at least a short period of time.</p> <p>(b) This data, which includes your email address and potentially personally identifiable information such as\u00a0Internet Protocol (IP) addresses, is used to provide the service and may also be used to comply with applicable laws and to detect, prevent or address fraud, security or technical issues, including the prevention of spam/malware.</p>"},{"location":"privacy/#23-hosting-community-chat-and-forums","title":"2.3 Hosting, Community Chat and Forums","text":"<p>We use the following providers to host our documentation, chats, demo instances, source code, installation packages, and Docker images:</p> <ul> <li>GitHub</li> <li>Docker Hub</li> <li>vBulletin</li> </ul> <p>If you would like to learn more about the data they collect and how it is processed, you can click on the corresponding link to view their privacy policy.</p>"},{"location":"privacy/#24-content-delivery-networks-cdn","title":"2.4 Content Delivery Networks (CDN)","text":"<p>(1) Our primary CDN provider is CloudFlare Inc. (https://cloudflare.com), which is based in the US and fully complies with the\u00a0Visit\u00a0https://www.cloudflare.com/trust-hub/gdpr/\u00a0to learn more about their privacy policy.</p>"},{"location":"privacy/#3-communications-and-feedback","title":"3. Communications and Feedback","text":"<p>When you contact us, we store your request to help you resolve issues, answer questions, or notify you when you request it:</p> <p>(a) The information we collect includes personal information such as name, company name, country, language, telephone numbers and email addresses so that we can communicate directly with you even if you are not a customer.</p> <p>(b) Depending on how you contact us, the data may include additional personal or potentially personally identifying information as described in Sections 2 and 7.</p>"},{"location":"privacy/#4-newsletters-and-product-notifications","title":"4. Newsletters and Product Notifications","text":"<p>(a) The registration for newsletters and product notifications takes place in a so-called double opt-in process. This means that after registration you will receive an email asking you to confirm your registration.</p> <p>(b) This confirmation is necessary so that no one can register with foreign email addresses. The registration for the newsletter is logged to be able to prove the registration process according to the legal requirements. This includes the storage of the login and the confirmation time, as well as the IP address.</p> <p>(c) You should expect all requests to our email server as well as those of our service partners to be logged for security reasons and to prevent abuse.</p>"},{"location":"privacy/#5-uploads-public-forums-referrals-and-testimonials","title":"5. Uploads, Public Forums, Referrals and Testimonials","text":"<p>This section ONLY APPLIES TO DATA THAT YOU INTENTIONALLY DISCLOSE to provide it to others, communicate with them, or make it available with your consent. To avoid misunderstandings, please read these terms carefully.</p> <p>(a)\u00a0Content Uploads.\u00a0You are responsible for your use of our Services and for all content you provide, share, sync or upload, including compliance with applicable laws, rules and regulations. Please respect the rights and privacy of others as we respect them. By uploading your content to any of our Services, which can be accessed by anyone without a password, you grant us permission to use (e.g. host, display, or convert) that content in accordance with our\u00a0Terms of Service.</p> <p>(b)\u00a0Content Removal.\u00a0If you remove your content from our Services, our systems will no longer make that content publicly available within a reasonable period, unless you have already shared copies of your content with others before you removed it. If your content was publicly available, it is possible that search engines such as Google will continue to find your content and display it as part of their search results.</p> <p>(c)\u00a0Public Forums.\u00a0We may link to discussion forums, blogs, social media sites, or chat rooms (collectively, \"Forums\") on our website, app and/or docs. Any personal information you provide in such Forums may be read, collected or used by other visitors to those forums and may be used to send you unsolicited messages. We are not responsible for the personal information you provide in these Forums.</p> <p>(d)\u00a0Testimonials.\u00a0We may publish a list of users and testimonials on our website, app and/or docs that include personal information such as names and titles. We will obtain each user's consent before publishing any information in such list or testimonials.</p>"},{"location":"privacy/#6-developer-tools","title":"6. Developer Tools","text":"<p>Lyrion developers might ask for log files or other information about your installation.</p> <p>(a) Log file can contain personal information (IP addresses, access tokens, usernames). Be careful with whom you share those files. Prefer sharing privately, rather than in a public forum.</p> <p>(b) We do not store such information any longer than needed to investigate a problem.</p>"},{"location":"privacy/#7-web-analytics-request-logs-and-statistics","title":"7. Web Analytics, Request Logs and Statistics","text":"<p>This section covers data that is submitted to us in the standardized HTTP request headers that Browsers and other HTTP clients automatically send as part of the protocol. You can use a VPN provider and host apps like ours outside your home network to avoid the request IP being personally identifiable.</p>"},{"location":"privacy/#71-basic-information","title":"7.1 Basic Information","text":"<p>This is the basic information that may be collected from anyone, regardless of whether they have an account with us:</p> <ul> <li>the service requested</li> <li>the date and time of the request</li> <li>browser and operating system vendor</li> <li>language preferences as configured in your Browser</li> <li>referring website, if any</li> </ul>"},{"location":"privacy/#72-internet-protocol-ip-addresses","title":"7.2 Internet Protocol (IP) Addresses","text":"<p>Information collected may also contain potentially personally identifying information such as Internet Protocol (IP) addresses:</p> <p>(a) Your IP address may be stored, at least for a limited time, in memory and logs automatically created by Docker, Traefik or other applications and services that are part of our infrastructure. Unless otherwise stated, we do not routinely analyze it and use it only to (i) provide the requested services, (ii) perform load balancing or enforce rate limits, (iii) comply with applicable laws, and (iv) detect, prevent, or address fraud, security, or technical issues, including the prevention of spam/malware.</p> <p>(b) The\u00a0Third-Party Subprocessors\u00a0listed in Section 2 may also collect and analyze information about each request. They generally store the IP address in memory or logs for at least a limited time in order to (i) provide the requested services, (ii) perform load balancing or enforce rate limits, (iii) comply with applicable laws, and (iv) detect, prevent, or respond to fraud, security, or technical issues, including the prevention of spam/malware.</p>"},{"location":"privacy/#8-debug-information","title":"8. Debug Information","text":"<p>Our apps and backend services may store information in case of software errors. This information is for internal use only and will not be shared with third parties under any circumstances. Your personal information will be removed from bug reports before they are submitted and will only contain technical details or an anonymous identifier.</p>"},{"location":"privacy/#questions","title":"Questions?","text":"<p>You may contact us at\u00a0privacy@lyrion.org\u00a0if you have any questions about this Privacy Policy, our practices, or other privacy-related topics. Visit lyrion.org/contact to view our full contact information. We do our best to respond within five business days or less.</p>"},{"location":"terms/","title":"Lyrion Terms of Service","text":"<p>Learn how we work, what you can expect from us, and what we expect from you.</p> <p>By using the Software and Services\u00a0Lyrion\u00a0(\"Lyrion\", \"we\" or \"us\") provides, you agree to these Terms, including our\u00a0Privacy Policy. Visit\u00a0lyrion.org/contact\u00a0to view our full contact information as required by law.</p> <ul> <li>We may update these Terms (1) to reflect changes in our products, services or business operations, (2) for legal, regulatory or security reasons, (3) to prevent abuse or harm, or (4) to improve readability and make clarifications that our users request.</li> <li>We may provide a more prominent notice (including email notifications) when we make material changes that all of our users should know about.</li> </ul> <p>These Terms were last updated on January 3, 2025.</p>"},{"location":"terms/#0-definitions","title":"0. Definitions","text":"<p>Software\u00a0means any software published and distributed by Lyrion, either self-hosted, installed on a device, managed, or as a service.</p> <p>Open Source Software\u00a0is any software component or software application, including third-party software, distributed under a Public License.</p> <p>Evaluation Software\u00a0means versions of the Software that are not released and labeled as production-ready, such as our development previews, test builds, and any Software that is expressly provided for evaluation and not for production.</p> <p>Services\u00a0means any backend services, world maps, hosted documentation, remote access, cloud storage, software as a service, support forums, member benefits and/or other services offered by Lyrion that are based on or complementary to the Software.</p> <p>Documentation\u00a0means all instructions, diagrams, screenshots, manuals, guides, references and/or other written documents related to the Software and the Services.</p> <p>Digital Assets\u00a0means icons, fonts, illustrations, graphics, background images, videos, sounds, models, and sample files related to or accompanying the Software and/or Documentation, such as those provided on GitHub, distributed on downloads.lyrion.org, and used on\u00a0lyrion.org.</p> <p>Brand Assets\u00a0means trademarks, logos, icons, fonts, corporate designs, product and service names, and any other brand features and elements, whether registered or unregistered.</p> <p>Affiliate(s)\u00a0means any entity that controls, is controlled by, or is under common control with a party, where \"control\" means the ability to direct the management and policies of an entity.</p> <p>Intellectual Property Rights\u00a0means all intellectual property rights, including but not limited to patents, copyrights, trademarks, goodwill, moral rights, trade secrets and all other intellectual and industrial property rights and proprietary rights, including registrations, applications, renewals and extensions of such rights worldwide.</p> <p>License Agreement\u00a0means the agreement between Lyrion (or a Lyrion) and Customer under which Customer has acquired or will acquire license rights to use the Software.</p> <p>Public License\u00a0means any license that conforms to the Open-Source Definition (as promulgated by the Open-Source Initiative) or the Free Software Definition (as promulgated by the Free Software Foundation) or a substantially similar license, including any license approved by the Open Source Initiative or a Creative Commons license. \"Open-Source Licenses\" include copyleft licenses.</p>"},{"location":"terms/#1-your-rights-and-choices","title":"1. Your Rights and Choices","text":"<p>(a) By law, you have certain rights that cannot be limited by a contract. These Terms are in no way intended to limit those rights.</p> <p>(b) If you agree to these Terms not as an individual, but on behalf of an entity for which you are acting (e.g., as an employee or government official), then \"you\" means your entity and you bind your entity to these Terms. You warrant that you have the legal power and authority to enter into these Terms.</p> <p>(c) All rights not expressly licensed by Lyrion under a License Agreement or provided under a Public License are reserved. For the avoidance of doubt, this also applies to promotional materials, legal documents, and any other Intellectual Property Rights. The use, reproduction, and distribution of Open-Source Software is subject to the terms of the applicable Public License.</p> <p>(d) Our\u00a0Privacy Policy explains what information we collect, how we use it, and under what circumstances we may share it. </p>"},{"location":"terms/#2-disclaimer-of-warranty","title":"2. Disclaimer of Warranty","text":"<p>OUR SOFTWARE, SERVICES AND DOCUMENTATION ARE PROVIDED \"AS-IS\" AND WITHOUT WARRANTY OF ANY KIND. TO THE FULLEST EXTENT PERMITTED BY LAW, WE DISCLAIM ALL WARRANTIES, EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, ACCURACY, QUIET ENJOYMENT, TITLE, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE.</p> <p>LYRION DOES NOT WARRANT THAT THE SOFTWARE, SERVICES OR DOCUMENTATION WILL BE UNINTERRUPTED OR ERROR-FREE OR THAT ALL ERRORS WILL BE CORRECTED. WE DISCLAIM ALL LIABILITY AND RESPONSIBILITY FOR ANY THIRD-PARTY PRODUCTS OR SERVICES OR FOR ANY ACTS OR OMISSIONS OF ANY THIRD-PARTY SUPPLIERS, VENDORS OR SERVICE PROVIDERS.</p>"},{"location":"terms/#3-limitation-of-liability","title":"3. Limitation of Liability","text":"<p>TO THE FULLEST EXTENT PERMITTED BY LAW, WE WILL NOT BE LIABLE FOR ANY DAMAGES ASSOCIATED WITH OUR SOFTWARE, SERVICES OR DOCUMENTATION, INCLUDING WITHOUT LIMITATION, ORDINARY, INCIDENTAL, INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND, SUCH AS LOSS OF DATA, LOSS OF OPPORTUNITY OR LOSS OF PROFITS, EVEN IF WE HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.</p> <p>IN NO EVENT WILL LYRION BE LIABLE TO ANY THIRD-PARTY VENDOR, SUPPLIER, SERVICE PROVIDER, OR FOR ANY AMOUNT IN EXCESS OF THE TOTAL FEES PAID BY YOU TO LYRION IN THE 12 MONTHS PRIOR TO THE EVENT GIVING RISE TO SUCH LIABILITY. NOTWITHSTANDING ANY OTHER PROVISION IN THESE TERMS, OUR MAXIMUM AGGREGATE LIABILITY FOR EVALUATION SOFTWARE IS 100 EUR.</p>"},{"location":"terms/#4-third-party-products","title":"4. Third-Party Products","text":"<p>You may choose to use or procure other third-party products, services, including plug-ins, customization, hosting, and training, in connection with Lyrion's Software. Lyrion is not responsible for any acts or omissions of third parties, including third party access to or use of your data or performance of the Software in combination with any such third-party product or service.</p>"},{"location":"terms/#5-feedback-contributions-and-future-functionality","title":"5. Feedback, Contributions and Future Functionality","text":"<p>(a)\u00a0Feedback.\u00a0We welcome suggestions, enhancement requests or other feedback (collectively, \"Feedback\") from our users, customers, partners and the developer community. You may, in your sole discretion, provide Feedback relating to the Software, Services or Documentation.</p> <p>(b)\u00a0Use of Feedback.\u00a0We may use your Feedback for any purpose without notice, restriction or compensation of any kind. You hereby grant Lyrion a royalty-free, worldwide, transferable, sublicensable, irrevocable, perpetual license to use or incorporate any Feedback relating to the Software, Services or Documentation that is provided by you or your contractors or Affiliates.</p> <p>(c)\u00a0Developer Certificate of Origin.\u00a0This project uses the Developers Certificate of Origin (DCO) to validate that you own the rights to the code you want to contribute.</p> <p>(d)\u00a0Future Functionality.\u00a0You may request that new features, enhancements, or other changes be implemented in the Software, Services or Documentation. Our team will consider your requests, but is not obligated to implement such features, enhancements, or other changes requested by you.</p>"},{"location":"terms/#6-documentation-and-digital-assets","title":"6. Documentation and Digital Assets","text":"<p>(a)\u00a0lyrion.org maintained in public repositories is available under the terms of the CC BY-NC-SA 4.0 License. Other terms may apply to Digital Assets \u2014 in particular illustrations, graphics, and videos \u2014 embedded in the documentation if they are licensed to us solely for direct distribution. When in doubt, please ask before distributing or using them for other works.</p> <p>(b) We hereby grant you a non-exclusive, royalty-free, worldwide, non-sublicensable, non-transferable right to use the Digital Assets in combination with the Software and Services, unless otherwise noted.</p> <p>(c) Because some Digital Assets are licensed to us solely for direct distribution, we cannot redistribute them under a more permissive license for other purposes. If the author or copyright holder has not released them under a permissive license, you must obtain a license before using them in your own work, whether commercial or non-commercial in nature.</p>"},{"location":"terms/#7-trademark-and-brand-assets","title":"7. Trademark and Brand Assets","text":"<p>(a) Lyrion\u2019s Brand Assets are proprietary assets owned exclusively by Lyrion. We reserve the right to object to any use or misuse in any jurisdiction worldwide.</p> <p>(b) Contributors, licensees, business partners, and other third parties may never claim ownership of Lyrion's Brand Assets or brands confusingly similar to Lyrion's Brand Assets in any way, including, without limitation, as a trademark, service mark, company name or designation, domain name, social media profile/handle, or in any other manner.</p> <p>(c) You may not include the Lyrion trademark in the name of your app, product, or service, whether commercial or non-commercial in nature. This includes online services such as e-commerce, community, blog, information, advertising, and personal home pages, as well as apps, app stores, client apps, or third-party apps that interact with Lyrion.</p>"},{"location":"terms/#8-hosting-and-removal-of-content","title":"8. Hosting and Removal of Content","text":"<p>Self-hosting is the easiest way to stay in control and\u00a0protect your privacy. Data that never leaves your private network cannot be seen or used by anyone, not us or anyone else. This section ONLY APPLIES TO DATA THAT YOU INTENTIONALLY DISCLOSE in order to provide it to others, communicate with them, or make it available with your consent, for example to test our software. To avoid misunderstandings, please read these terms carefully.</p> <p>(a)\u00a0Property and Privacy Rights.\u00a0Your content remains your property, which means that you retain all intellectual property rights in your content. You are responsible for your use of our Services and for all content you provide, share, sync, or upload, including compliance with applicable laws, rules, and regulations. You are only permitted to share another person's content if they have given you their permission. Please respect the rights and privacy of others as we respect them.</p> <p>(b)\u00a0Content Uploads.\u00a0If you upload your content to any of our Services, such as our github repository, which is accessible to anyone without a password, or to a hosted Service that you have requested to prevent others from accessing your self-hosted server at home, you grant us (1) a worldwide, non-exclusive, royalty-free license to use (for example, host, display, or convert) your content for technical purposes, (2) to make your content publicly available if and to the extent you have made it visible to others, (3) sublicense these rights to other users to enable the Services to function as intended, for example to enable you to share the content as intended including tests of our software. This license will continue for as long as your content is protected by intellectual property rights, unless you remove your content from our Services before.</p> <p>(c)\u00a0Content Removal.\u00a0If you remove your content from our Services, our systems will no longer make that content publicly available within a reasonable time unless you have already shared copies of your content with others before you removed it. If your content was publicly available, it is possible that search engines such as Google will continue to find your content and display it as part of their search results.</p> <p>(d)\u00a0Unlawful Content.\u00a0We reserve the right to remove content that violates these Terms, such as copyright or trademark infringement or other forms of intellectual property appropriation, impersonation, unlawful conduct, or harassment.</p>"},{"location":"terms/#9-account-and-communications","title":"9. Account and Communications","text":"<p>(a)\u00a0Account.\u00a0You may need to create an account to use some of our services. You are responsible for safeguarding your account. Please use a strong password and limit its use to this account. We cannot and will not be liable for any loss or damage arising from your failure to comply with the above.</p> <p>(b)\u00a0Communications.\u00a0You can control most of the communications you receive from us. If you have signed up to receive newsletters and/or general product notifications, you can unsubscribe at any time. To do so, click on the \"unsubscribe\" or \"opt-out\" link in the emails you receive. Even if you opt out, we may continue to contact you if there are problems with your user account, such as failed transactions, and to provide the services you have requested, help you resolve problems, answer questions, comply with applicable laws and regulations, and for similar purposes as described in our\u00a0Privacy Policy.</p>"},{"location":"terms/#10-payments-subscriptions-and-memberships","title":"10. Payments, Subscriptions and Memberships","text":"<p>(a)\u00a0All amounts payable are non-refundable. The payment process is handled by third parties. There may be fees applied, which are not the responsibility of Lyrion.</p>"},{"location":"terms/#11-proprietary-information","title":"11. Proprietary Information","text":"<p>(a) The term \"Proprietary Information\" shall mean any trade secret or confidential or proprietary information designated as such in writing by the Disclosing Party, whether by letter or by the use of an appropriate proprietary stamp or legend, prior to or at the time such trade secret or confidential or proprietary information is disclosed by the Disclosing Party to the Recipient.</p> <p>(b) The Recipient and its Representatives shall use the Proprietary Information of the Disclosing Party only for the purpose of negotiating, concluding, and conducting business transactions (together, the \"Purposes\") and such Proprietary Information shall not be used for any other purpose without the prior written consent of the Disclosing Party, which may be given or withheld by the Disclosing Party in its sole and absolute discretion. The Recipient and its Representatives shall hold in confidence, and shall not disclose, any Proprietary Information of the Disclosing Party; provided, however, that (i) the Recipient may make any disclosure of such information to which the Disclosing Party gives its prior written consent; and (ii) any of the Proprietary Information may be disclosed by the Recipient to its Representatives or prospective investors, lenders or acquirors as part of their due diligence investigations who need to know such information in connection with the Purposes and who are bound by confidentiality obligations with respect to that Proprietary Information that are substantially similar to those set forth in these Terms. In any event, the Recipient agrees, at its sole expense, to use its best efforts to restrain its Representatives from prohibited or unauthorized disclosure or use of the Proprietary Information.</p> <p>(c) In the event that the Recipient becomes legally compelled (such as by order of court, administrative agency, or other governmental body) to disclose any portion of the Disclosing Party\u2019s Proprietary Information, only that portion of the Disclosing Party\u2019s Proprietary Information that is legally required to be disclosed shall be disclosed.</p> <p>(d) The Recipient shall, upon the written request of the Disclosing Party, return to the Disclosing Party all Proprietary Information received by the Recipient or its Representatives from the Disclosing Party (and all copies and reproductions thereof). In addition, the Recipient shall destroy any notes, reports, or other documents prepared by the Recipient which contain Proprietary Information of the Disclosing Party.</p> <p>(e) As between the Parties, Lyrion will retain all ownership rights in and to its Software, Services, Documentation, and all derivative works thereof, however made, and all Intellectual Property Rights incorporated into or related to the foregoing. All rights not expressly licensed to Customer by Lyrion under a License Agreement or provided under a Public License are reserved. Customer hereby grants to Lyrion a royalty-free, worldwide, transferable, sublicenseable, irrevocable, perpetual license to use or incorporate any suggestions, enhancement requests, or other feedback related to the Software, Services, or Documentation that is provided by Customer or its contractors or Affiliates.</p>"},{"location":"terms/#12-final-provisions","title":"12. Final Provisions","text":"<p>(a)\u00a0Waiver.\u00a0In the event that you breach these Terms and we do not take any action, we will still be entitled to use our rights and remedies in any other situation where you breach these Terms.</p> <p>(b)\u00a0Applicable Law and Jurisdiction.\u00a0These Terms and any action related thereto shall be governed by the laws of Switzerland to the exclusion of IPR (International Law) and the United Nations Convention on Contracts for the International Sale of Goods (CISG). All claims, legal proceedings or litigation arising in connection with our Software, Services, or Documentation will be brought solely in the courts located in Aarau (Switzerland), and you consent to the jurisdiction of and venue in such courts and waive any objection as to inconvenient forum.</p> <p>If you are a\u00a0consumer, we agree to submit to the non-exclusive jurisdiction of the courts in Aarau (Switzerland), which means that you may bring an action to enforce your consumer protection rights in connection with these Terms in Switzerland or in the EU country in which you live. The European Commission provides an online dispute resolution platform that you can access at\u00a0https://ec.europa.eu/consumers/odr/. We prefer to resolve any issues in direct contact with you and therefore do not participate in alternative consumer dispute resolution procedures. If you wish to bring a matter to our attention, please\u00a0contact us.</p> <p>If you are a\u00a0federal, state, or local government agency in the United States\u00a0using our Software, Services, or Documentation in your official capacity and are legally unable to accept the above applicable law, jurisdiction or venue clauses, then these clauses do not apply to you. For such U.S. federal entities, these Terms and all related actions will be governed by the laws of the United States of America (without reference to conflict of laws) and, in the absence of federal law and to the extent permitted by federal law, the laws of the State of Delaware (excluding choice of law).</p> <p>(c)\u00a0Severability Clause.\u00a0If a provision of these Terms is or becomes legally invalid or if there is any gap that needs to be filled, the validity of the remainder of these Terms shall not be affected thereby. Invalid provisions shall be replaced by common consent with such provisions which come as close as possible to the intended result of the invalid provision. In the event of gaps, such provisions shall come into force by common consent which comes as close as possible to the intended result of these Terms, should the matter have been considered in advance.</p> <p>(d)\u00a0Changes Must Be in Writing.\u00a0Any changes of or amendments to these Terms must be in writing to become effective.</p>"},{"location":"analytics/","title":"Some numbers about LMS Installations","text":"<p>Lyrion Music Server encourages users to share their usage data with the LMS community. It is used to steer and influence Lyrion Music Server development priorities. The plugin responsible for the data collection is part of LMS since version 8.5.1.</p> <p>Learn more about how this data is gathered</p> <p> {   \"$schema\": \"https://vega.github.io/schema/vega-lite/v6.json\",   \"title\": \"Number of LMS installations\",   \"description\": \"Time series chart of LMS installations by version\",   \"data\": {     \"url\": \"/analytics/stats.json\",     \"format\": {\"property\": \"versions\"}   },   \"encoding\": {     \"x\": {\"field\": \"d\", \"type\": \"temporal\", \"title\": \"Date\", \"timeUnit\": \"yearmonthdate\"},     \"y\": {\"field\": \"c\", \"type\": \"quantitative\", \"title\": \"Installations\"},     \"color\": {\"field\": \"v\", \"type\": \"nominal\", \"title\": \"Version\"}   },   \"layer\": [     {         \"mark\": {             \"type\": \"line\",             \"point\": {                 \"filled\": true,                 \"size\": 15             }         }     },     {         \"params\": [{             \"name\": \"hover\",             \"select\": {\"type\": \"point\", \"on\": \"pointerover\", \"clear\": \"pointerout\"}         }],         \"mark\": {\"type\": \"circle\", \"tooltip\": true},         \"encoding\": {             \"opacity\": {                 \"condition\": {\"test\": {\"param\": \"hover\", \"empty\": false}, \"value\": 1},                 \"value\": 0             },             \"size\": {                 \"condition\": {\"test\": {\"param\": \"hover\", \"empty\": false}, \"value\": 48},                 \"value\": 100             }         }     }] } </p> <p> {   \"$schema\": \"https://vega.github.io/schema/vega-lite/v6.json\",   \"title\": \"Number of connected players\",   \"description\": \"Time series chart of number of connected players\",   \"data\": {     \"url\": \"/analytics/stats.json\",     \"format\": {\"property\": \"players\"}   },   \"encoding\": {     \"x\": {\"field\": \"d\", \"type\": \"temporal\", \"title\": \"Date\", \"timeUnit\": \"yearmonthdate\"},     \"y\": {\"field\": \"p\", \"type\": \"quantitative\", \"title\": \"Connected Players\"}   },   \"layer\": [     {         \"mark\": {             \"type\": \"line\",             \"point\": {                 \"filled\": true,                 \"size\": 15             }         }     },     {         \"params\": [{             \"name\": \"hover\",             \"select\": {\"type\": \"point\", \"on\": \"pointerover\", \"clear\": \"pointerout\"}         }],         \"mark\": {\"type\": \"circle\", \"tooltip\": true},         \"encoding\": {             \"opacity\": {                 \"condition\": {\"test\": {\"param\": \"hover\", \"empty\": false}, \"value\": 1},                 \"value\": 0             },             \"size\": {                 \"condition\": {\"test\": {\"param\": \"hover\", \"empty\": false}, \"value\": 48},                 \"value\": 100             }         }     }] } </p> <p>{   \"$schema\": \"https://vega.github.io/schema/vega-lite/v6.json\",   \"title\": \"Connected players per LMS installation\",   \"description\": \"Histogram which shows how many players are connected per LMS installation\",   \"data\": {     \"url\": \"/analytics/stats.json\",     \"format\": {       \"property\": \"connectedPlayers\",       \"parse\": {           \"p\": \"number\"       }   }   },   \"mark\": {\"type\": \"bar\", \"tooltip\": true},   \"encoding\": {     \"x\": {       \"field\": \"p\",       \"type\": \"ordinal\",       \"title\": \"Connected players per installation\"     },     \"y\": {\"field\": \"c\", \"type\": \"quantitative\", \"title\": \"Count of installations\"}   } }</p> <p>{   \"$schema\": \"https://vega.github.io/schema/vega-lite/v6.json\",   \"title\": \"Number of tracks in library\",   \"description\": \"Histogram which shows how many tracks (about) are in a LMS installation\",   \"data\": {     \"url\": \"/analytics/stats.json\",     \"format\": {\"property\": \"tracks\"}   },   \"mark\": {\"type\": \"bar\", \"tooltip\": true},   \"transform\": [     {       \"lookup\": \"t\",       \"from\": {         \"key\": \"t\",         \"fields\": [\"l\"],         \"data\": {           \"values\": [             { \"t\": \"0\", \"l\": \"0\" },             { \"t\": \"1\", \"l\": \"1-500\" },             { \"t\": \"500\", \"l\": \"501-1,000\" },             { \"t\": \"1000\", \"l\": \"1,001-5,000\" },             { \"t\": \"5000\", \"l\": \"5,001-10,000\" },             { \"t\": \"10000\", \"l\": \"10,001-20,000\" },             { \"t\": \"20000\", \"l\": \"20,001-50,000\" },             { \"t\": \"50000\", \"l\": \"50,001-100,000\" },             { \"t\": \"100000\", \"l\": \"100,001-500,000\" },             { \"t\": \"500000\", \"l\": \"500,001-1,000,000\" },             { \"t\": \"1000000\", \"l\": \"&gt;1,000,001\" }           ]         }       }     }   ],   \"encoding\": {     \"y\": {       \"field\": \"l\",       \"type\": \"ordinal\",       \"title\": \"Tracks in Library\",       \"sort\": [\"0\",\"1\",\"500\",\"1000\",\"5000\",\"10000\",\"20000\",\"50000\",\"100000\",\"500000\",\"1000000\"]     },     \"x\": {\"field\": \"c\", \"type\": \"quantitative\", \"title\": \"Count of installations\"}   } }</p> <p> {   \"$schema\": \"https://vega.github.io/schema/vega-lite/v6.json\",   \"width\": \"container\",   \"height\": 420,   \"title\": \"Player types\",   \"description\": \"Pie chart with player types\",   \"data\": {     \"url\": \"/analytics/stats.json\",     \"format\": {\"property\": \"playerTypes\"}   },   \"mark\": {\"type\": \"arc\", \"tooltip\": true},   \"encoding\": {     \"theta\": {\"field\": \"c\", \"type\": \"quantitative\", \"stack\": \"normalize\", \"title\": \"Percentage\"},     \"color\": {\"field\": \"p\", \"type\": \"nominal\", \"title\": \"Player type\", \"sort\": \"c\"},     \"order\": {\"field\": \"c\", \"type\": \"quantitative\", \"sort\": \"descending\", \"title\": \"Count\"}   } } </p> <p> {   \"$schema\": \"https://vega.github.io/schema/vega-lite/v6.json\",   \"width\": \"container\",   \"height\": 420,   \"title\": \"Operating systems and architectures\",   \"description\": \"Pie chart with operating systems and architectures\",   \"data\": {     \"url\": \"/analytics/stats.json\",     \"format\": {\"property\": \"os\"}   },   \"mark\": {\"type\": \"arc\", \"tooltip\": true},   \"encoding\": {     \"theta\": {\"field\": \"c\", \"type\": \"quantitative\", \"stack\": \"normalize\", \"title\": \"Percentage\"},     \"color\": {\"field\": \"o\", \"type\": \"nominal\", \"title\": \"Operating System\", \"sort\": \"c\"},     \"order\": {\"field\": \"c\", \"type\": \"quantitative\", \"sort\": \"descending\", \"title\": \"Count\"}   } } </p> <p>{   \"$schema\": \"https://vega.github.io/schema/vega-lite/v6.json\",   \"width\": \"container\",   \"height\": 450,   \"title\": \"LMS installations worldwide\",   \"description\": \"Map of LMS installations worldwide\",   \"data\": {     \"url\": \"/analytics/world_map.json\",     \"format\": {\"property\": \"features\"}   },   \"projection\": {\"type\": \"naturalEarth1\"},   \"transform\": [     {       \"lookup\": \"properties.iso_a2_eh\",       \"from\": {         \"key\": \"c\",         \"fields\": [\"i\"],         \"data\": {           \"url\": \"/analytics/stats.json\",           \"format\": {\"property\": \"countries\"}         }       }     }   ],   \"mark\": {     \"type\": \"geoshape\",     \"stroke\": \"#141010\",     \"strokeWidth\": 0.5   },   \"encoding\": {     \"color\": {       \"field\": \"i\",       \"type\": \"quantitative\",       \"scale\": {\"scheme\": \"greens\"},       \"title\": \"Installations\"     },     \"tooltip\": [       {\"field\": \"properties.name\", \"title\": \"Country\"},       {         \"field\": \"i\",         \"type\": \"quantitative\",         \"title\": \"Installations\"       }     ]   },   \"config\": {\"mark\": {\"invalid\": null}} }</p>"},{"location":"analytics/learn-more/","title":"Learn more about how this data is gathered","text":"<p>Bundled in LMS versions 8.5.1 and later is the \"Report Analytics Data\" plugin. This plugin doesn't collect personal data. It can be disabled like any plugin, but users are encouraged to keep it enabled. Reports will be sent a few minutes after the system start, and then every other day. The analytics data is sent to stats.lms-community.org, for which the code is maintained on Github.</p> <p>The following data is gathered:</p> <ul> <li>Hashed UUID of server</li> <li>LMS version and revision</li> <li>Operating System</li> <li>Perl version</li> <li>Hardware platform</li> <li>Number and types of connected players</li> <li>List of installed plugins</li> <li>Selected skin</li> <li>Number of tracks</li> <li>Country (a lookup is done based on the IP address of the LMS-server which is then discarded)</li> </ul> <p>You can enable debug logging for <code>plugin.analytics</code> to see what is being reported:</p> <pre><code>Slim::Plugin::Analytics::Plugin::_reportStats (53) nIj.............YhF8: {\n  os          =&gt; \"linux\",\n  osname      =&gt; \"Debian (Docker)\",\n  perl        =&gt; \"5.32.1\",\n  platform    =&gt; \"x86_64-linux\",\n  playerTypes =&gt; { baby =&gt; 1, fab4 =&gt; 1, receiver =&gt; 1 },\n  players     =&gt; 3,\n  plugins     =&gt; [\n                   \"1001Albums\",\n                   \"AudioScrobbler\",\n                   \"Bandcamp\",\n                   .........\n                   \"TIDAL\",\n                   \"ViewTags\",\n                 ],\n  revision    =&gt; \"1712965357\",\n  skin        =&gt; \"Default\",\n  tracks      =&gt; 441,\n  version     =&gt; \"9.0.0\",\n}\n</code></pre>"},{"location":"analytics/learn-more/#how-to-disable-the-data-collection","title":"How to disable the data collection","text":"<p>If you want to disable the data collection you can inactivate the plugin \"Report Analytics Data\" within LMS.</p> <ol> <li>Launch your web browser (eg. Edge, Firefox) and type: http://[ip address of LMS server]:9000. Then, press Enter.</li> <li>Go to \"Settings\" (on the bottom right of the page).</li> <li>Go to the \"Manage plugins\" tab.</li> <li>Search for the \"Report Analytics Data\" plugin and deselect the checkbox in front of it.</li> <li>Press Apply (on the bottom right).</li> <li>You will be prompted to reboot LMS, after restart the data collection has been disabled.</li> </ol>"},{"location":"analytics/os/","title":"Some numbers about LMS Installations - operating system historical view","text":"<p>Lyrion Music Server encourages users to share their usage data with the LMS community. It is used to steer and influence Lyrion Music Server development priorities. The plugin responsible for the data collection is part of LMS since version 8.5.1.</p> <p>Learn more about how this data is gathered</p> <p>{     \"$schema\": \"https://vega.github.io/schema/vega-lite/v6.json\",     \"title\": \"Number of installations by OS\",     \"description\": \"Time series chart of LMS installations by operating system\",     \"data\": {         \"url\": \"/analytics/stats.json\",         \"format\": {             \"property\": \"osHistory\"         }     },     \"height\": 800,     \"encoding\": {         \"x\": {             \"field\": \"d\",             \"type\": \"temporal\",             \"title\": \"Date\",             \"timeUnit\": \"yearmonthdate\"         },         \"y\": {             \"field\": \"c\",             \"type\": \"quantitative\",             \"title\": \"Installations\",             \"scale\": {                 \"domainMin\": 500             }         },         \"color\": {             \"field\": \"o\",             \"type\": \"nominal\",             \"title\": \"OS\"         }     },     \"transform\": [         {             \"filter\": {                 \"field\": \"c\",                 \"range\": [                     500,                     29500                 ]             }         }     ],     \"layer\": [         {             \"mark\": {                 \"type\": \"line\",                 \"point\": {                     \"filled\": true,                     \"size\": 15                 }             }         },         {             \"params\": [                 {                     \"name\": \"hover\",                     \"select\": {                         \"type\": \"point\",                         \"on\": \"pointerover\",                         \"clear\": \"pointerout\"                     }                 }             ],             \"mark\": {                 \"type\": \"circle\",                 \"tooltip\": true             },             \"encoding\": {                 \"opacity\": {                     \"condition\": {                         \"test\": {                             \"param\": \"hover\",                             \"empty\": false                         },                         \"value\": 1                     },                     \"value\": 0                 },                 \"size\": {                     \"condition\": {                         \"test\": {                             \"param\": \"hover\",                             \"empty\": false                         },                         \"value\": 48                     },                     \"value\": 100                 }             }         }     ] }</p>"},{"location":"analytics/players/","title":"Some numbers about LMS Installations - player types historical view","text":"<p>Lyrion Music Server encourages users to share their usage data with the LMS community. It is used to steer and influence Lyrion Music Server development priorities. The plugin responsible for the data collection is part of LMS since version 8.5.1.</p> <p>Learn more about how this data is gathered</p> <p>{     \"$schema\": \"https://vega.github.io/schema/vega-lite/v6.json\",     \"title\": \"Number of player types\",     \"description\": \"Time series chart of LMS player types\",     \"data\": {         \"url\": \"/analytics/stats.json\",         \"format\": {             \"property\": \"playerHistory\"         }     },     \"height\": 800,     \"encoding\": {         \"x\": {             \"field\": \"d\",             \"type\": \"temporal\",             \"title\": \"Date\",             \"timeUnit\": \"yearmonthdate\"         },         \"y\": {             \"field\": \"c\",             \"type\": \"quantitative\",             \"title\": \"Installations\",             \"scale\": {                 \"domainMin\": 150             }         },         \"color\": {             \"field\": \"p\",             \"type\": \"nominal\",             \"title\": \"OS\"         }     },     \"transform\": [         {             \"filter\": {                 \"field\": \"c\",                 \"range\": [                     400,                     99000                 ]             }         }     ],     \"layer\": [         {             \"mark\": {                 \"type\": \"line\",                 \"point\": {                     \"filled\": true,                     \"size\": 15                 }             }         },         {             \"params\": [                 {                     \"name\": \"hover\",                     \"select\": {                         \"type\": \"point\",                         \"on\": \"pointerover\",                         \"clear\": \"pointerout\"                     }                 }             ],             \"mark\": {                 \"type\": \"circle\",                 \"tooltip\": true             },             \"encoding\": {                 \"opacity\": {                     \"condition\": {                         \"test\": {                             \"param\": \"hover\",                             \"empty\": false                         },                         \"value\": 1                     },                     \"value\": 0                 },                 \"size\": {                     \"condition\": {                         \"test\": {                             \"param\": \"hover\",                             \"empty\": false                         },                         \"value\": 48                     },                     \"value\": 100                 }             }         }     ] }</p>"},{"location":"analytics/versions/","title":"Some numbers about LMS Installations - detailed version historical view","text":"<p>Lyrion Music Server encourages users to share their usage data with the LMS community. It is used to steer and influence Lyrion Music Server development priorities. The plugin responsible for the data collection is part of LMS since version 8.5.1.</p> <p>Learn more about how this data is gathered</p> <p>{     \"$schema\": \"https://vega.github.io/schema/vega-lite/v6.json\",     \"title\": \"Number of LMS installations\",     \"description\": \"Time series chart of LMS installations by version\",     \"data\": {         \"url\": \"/analytics/stats.json\",         \"format\": {\"property\": \"versions\"}     },     \"height\": 800,     \"encoding\": {         \"x\": {\"field\": \"d\", \"type\": \"temporal\", \"title\": \"Date\", \"timeUnit\": \"yearmonthdate\"},         \"y\": {\"field\": \"c\", \"type\": \"quantitative\", \"title\": \"Installations\"},         \"color\": {\"field\": \"v\", \"type\": \"nominal\", \"title\": \"Version\"}     },     \"transform\": [         {             \"filter\": { \"and\": [                 \"datum.v != 'All'\",                 \"datum.v &gt; '8.4.1'\"             ]}         }     ],     \"layer\": [         {             \"mark\": {                 \"type\": \"line\",                 \"point\": {                     \"filled\": true,                     \"size\": 15                 }             }         },         {             \"params\": [                 {                     \"name\": \"hover\",                     \"select\": {                         \"type\": \"point\",                         \"on\": \"pointerover\",                         \"clear\": \"pointerout\"                     }                 }             ],             \"mark\": {                 \"type\": \"circle\",                 \"tooltip\": true             },             \"encoding\": {                 \"opacity\": {                     \"condition\": {                         \"test\": {                             \"param\": \"hover\",                             \"empty\": false                         },                         \"value\": 1                     },                     \"value\": 0                 },                 \"size\": {                     \"condition\": {                         \"test\": {                             \"param\": \"hover\",                             \"empty\": false                         },                         \"value\": 48                     },                     \"value\": 100                 }             }         }     ] }</p>"},{"location":"communication/forum-migration-de/","title":"Forumsmigration","text":"<p>(English | Fran\u00e7ais)</p> <p>Lieber Squeezebox/Logitech Media Server/Lyrion Music Server Benutzer</p> <p>Sie haben sich bei der LMS-Community (forums.lyrion.org) angemeldet. Dieses Forum wurde von Logitech f\u00fcr viele Jahre nach dem Ende der Squeezebox-Entwicklung als Gef\u00e4lligkeit f\u00fcr seine bestehenden Kunden zur Verf\u00fcgung gestellt. Daf\u00fcr sind wir sehr dankbar!</p> <p>Aber wie Sie vielleicht wissen, hat Logitech vor etwa einem Jahr alle Aktivit\u00e4ten im Zusammenhang mit Squeezebox eingestellt. Infolgedessen hat die Community ein neues Zuhause unter dem Dach von Lyrion.org gefunden. Wir wollen diese Gemeinschaft am Leben erhalten. Um dies zu erreichen, planen wir, alle Foren von forums.lyrion.org nach forums.lyrion.org zu migrieren. Dies schlie\u00dft Ihre bestehenden Konten und Beitr\u00e4ge usw. ein.</p> <p>Wenn Sie kein Interesse mehr an Squeezebox und Lyrion Music Server (fr\u00fcher auch bekannt als Logitech Media Server, Squeezebox Server) haben, m\u00f6chte ich Sie bitten, Ihr Konto vor dem 13. Januar 2025 zu l\u00f6schen. Melden Sie sich auf https://forums.lyrion.org bei Ihrem Konto an, gehen Sie zu Benutzereinstellungen -&gt; Datenschutz und folgen Sie dem Ablauf \"Konto l\u00f6schen\". Vielen Dank im Voraus!</p> <p>Wenn Sie sich entscheiden, hier zu bleiben - ausgezeichnet! Die gr\u00f6\u00dfte \u00c4nderung wird sein, dass sich die URL des Forums \u00e4ndern muss. Wir k\u00f6nnen nicht mehr die Logitech-eigene Domain slimdevices.com verwenden. Aber ansonsten werden Sie sich sofort wie zu Hause f\u00fchlen, da wir uns bem\u00fchen werden, den \u00dcbergang v\u00f6llig transparent zu gestalten.</p> <p>Bitte beachten Sie, dass es w\u00e4hrend des Umstellungsprozesses, der f\u00fcr Mitte Januar geplant ist, zu einer gewissen Ausfallzeit kommen kann, w\u00e4hrend der beide Foren nicht erreichbar sein werden. Aber keine Sorge: Wir kommen wieder.</p> <p>Vielen Dank f\u00fcr Ihr Interesse an Squeezebox und Lyrion.org.</p> <p>Bis bald!</p> <p>Michael</p>"},{"location":"communication/forum-migration-fr/","title":"Migration du forum","text":"<p>(Deutsch | English)</p> <p>Cher utilisateur de Squeezebox/Logitech Media Server/Lyrion Music Server</p> <p>Vous \u00eates un membre abonn\u00e9 de la communaut\u00e9 LMS (forums.lyrion.org). Ce forum a \u00e9t\u00e9 mis \u00e0 disposition par Logitech par courtoisie pour ses clients existants pendant de nombreuses ann\u00e9es apr\u00e8s la fin du d\u00e9veloppement de la Squeezebox. Nous en sommes tr\u00e8s reconnaissants !</p> <p>Mais comme vous le savez peut-\u00eatre, Logitech a mis fin \u00e0 toute activit\u00e9 li\u00e9e \u00e0 la Squeezebox il y a environ un an. En cons\u00e9quence, la communaut\u00e9 a trouv\u00e9 un nouveau foyer sous l'\u00e9gide de Lyrion.org. Nous voulons maintenir cette communaut\u00e9 en vie. Pour ce faire, nous pr\u00e9voyons de migrer l'ensemble de forums.lyrion.org vers forums.lyrion.org. Cela inclut vos comptes existants, vos messages, etc.</p> <p>Si vous n'\u00eates plus int\u00e9ress\u00e9 par tout ce qui concerne Squeezebox et Lyrion Music Server (pr\u00e9c\u00e9demment connu sous le nom de Logitech Media Server, Squeezebox Server), puis-je vous demander de supprimer votre compte avant le 13 janvier 2025 ? Connectez-vous \u00e0 votre compte sur https://forums.lyrion.org, allez dans Param\u00e8tres utilisateur -&gt; Confidentialit\u00e9, et suivez le processus de suppression de compte. Merci d'avance !</p> <p>Si vous d\u00e9cidez de rester, c'est excellent ! Le changement le plus important sera la modification de l'URL du forum. Nous ne pouvons plus utiliser le domaine slimdevices.com appartenant \u00e0 Logitech. Mais \u00e0 part cela, vous vous sentirez imm\u00e9diatement chez vous, car nous nous efforcerons de rendre la transition totalement transparente.</p> <p>Veuillez noter que pendant le processus de migration, qui est pr\u00e9vu pour la mi-janvier, il peut y avoir des temps d'arr\u00eat pendant lesquels aucun des deux forums ne sera accessible. Mais ne vous inqui\u00e9tez pas : nous reviendrons.</p> <p>Nous vous remercions de l'int\u00e9r\u00eat que vous portez \u00e0 Squeezebox et \u00e0 Lyrion.org.</p> <p>A bient\u00f4t,</p> <p>Michael</p>"},{"location":"communication/forum-migration/","title":"Forum Migration","text":"<p>(Deutsch | Fran\u00e7ais)</p> <p>Dear Squeezebox/Logitech Media Server/Lyrion Music Server user</p> <p>You are a subscribed member of the LMS community (forums.lyrion.org). This forum was provided by Logitech as a courtesy to its existing customers for many years after the end of Squeezebox development. We are very grateful for that!</p> <p>But as you might know Logitech has ended all Squeezebox related activity about a year ago. As a consequence the community has found a new home under the Lyrion.org umbrella. We want to keep this community alive. And in order to achieve this we plan to migrate all of forums.lyrion.org to forums.lyrion.org. This includes your existing accounts and postings etc.</p> <p>If you\u2019re no longer interested in all things Squeezebox and Lyrion Music Server (previously also known as Logitech Media Server, Squeezebox Server), may I kindly ask you to delete your account before January 13th 2025? Sign in to your account on https://forums.lyrion.org, head to User Settings -&gt; Privacy, and follow the Delete Account flow. Thanks in advance!</p> <p>If you decide to stay around - excellent! The biggest change will be that the forum URL has to change. We can no longer use the Logitech owned slimdevices.com domain. But other than that you\u2019ll instantly feel at home, as we will work hard to make the transition completely transparent.</p> <p>Please note that during the migration process, which is scheduled for mid January, there can be some downtime during which neither forum will be accessible. But worry not: we\u2019ll be back.</p> <p>Thank you very much for your interest in Squeezebox and Lyrion.org.</p> <p>Cheers,</p> <p>Michael</p>"},{"location":"contributing/","title":"Contributing","text":"<p>There are many ways that you can contribute to the LMS project with contributions of your time and effort:</p> <ul> <li>Engage in our community on our forums</li> <li>Develop code to add new features or fix bugs</li> <li>Develop plugins or applets</li> <li>Write documentation</li> <li>Report bugs</li> <li>Adding translations</li> </ul> <p>Financial contributions to support hosting and other related expenses for the Lyrion community should be made at Open Collective.</p>"},{"location":"contributing/adding-translations/","title":"Adding translations","text":"<p>With the help of more than 30 volunteers LMS has already been translated into more than 17 languages!</p> <p>If you would like to help us to make LMS even more globally accessible and have noticed a missing translation in your language, or would like to add a new language, you can help us by creating a pull request on Github for your changes in the file <code>strings.txt</code>. More <code>strings.txt</code> files can be found for each of the plugins in the <code>Slim/Plugin</code> folder of the project.</p> <p>These files contain translations of text strings which are used in LMS and is pretty self-explanatory.</p> <pre><code>STRING_TOKEN\n\u2192 DE \u2192 Dies ist ein Text\n\u2192 EN \u2192 This is some text\n</code></pre> <p>Note</p> <p>The one important thing to keep in mind is to always single use tabs (<code>\u2192</code>) rather than spaces to indent the strings, and to separate tokens from the actual content.</p> <p>Every string must be available in English (<code>EN</code>), as that's what LMS would fall back to if a translation was missing. But if your translation is identical to the English version, then there's no need to add one. LMS will always fall back to <code>EN</code> if it can't find a localization.</p> <p>But that's not all of them... there are more phrases to be found in various other places, some of which follow the same file structure, some of which are JSON or other formats (depending on the needs):</p> <ul> <li>The first time installation wizard</li> <li>The macOS Menubar item</li> <li>The Windows installer</li> <li>Docker Migration Information</li> </ul>"},{"location":"contributing/adding-translations/#current-coverage-of-translations","title":"Current coverage of translations","text":"<p>The data below can be skewed towards English, as there's no need to define terms for your language when the translation is identical to the English version.</p> <p>Tip</p> <p>If your translation would be identical to the English version, there's no need to redefine it for your language, as LMS would automatically fall back to English. Therefore there's no need to try to achieve 100% coverage!</p> <p>{   \"$schema\": \"https://vega.github.io/schema/vega-lite/v6.json\",   \"title\": \"Coverage in %\",   \"data\": {\"url\": \"/contributing/strings-coverage.json\"},   \"mark\": \"bar\",   \"encoding\": {     \"x\": {\"field\": \"Coverage\", \"type\": \"quantitative\"},     \"y\": {\"field\": \"Language\", \"type\": \"nominal\", \"sort\": \"-x\"}   } }</p>"},{"location":"contributing/dco-signoff/","title":"Developer Certificate of Origin (DCO) Sign Off","text":""},{"location":"contributing/dco-signoff/#basics","title":"Basics","text":"<p>All contributors to Lyrion retain copyright to their work, but must only submit work which they have the rights to submit. See the Developer Certificate of Origin.</p> <p>We require all contributors to acknowledge that they have the rights to the code they're contributing by signing their commits in git using a \"DCO Sign Off\".</p> <p>To sign your work, pass the <code>--signoff</code> option to <code>git commit</code>:</p> <pre><code>git commit --signoff -m\"my commit\"\n</code></pre> <p>Or short:</p> <pre><code>git commit -s -m\"my commit\"\n</code></pre> <p>Similarly you can sign-off a <code>git rebase</code>:</p> <pre><code>git rebase --signoff master\n</code></pre> <p>This will add a line similar to the following at the end of your commit:</p> <pre><code>Signed-off-by: Jimi Bendix &lt;jimib@example.com&gt;\n</code></pre> <p>By signing off a commit you're stating that you confirm the Developer Certificate of Origin.</p>"},{"location":"contributing/dco-signoff/#github-checks","title":"Github checks","text":"<p>When you submit a pull request on Github, there will be a check for the sign-off message. If you forget to add the message, the pull request will be blocked. You can amend the situation using the following command, followed by a force push:</p> <pre><code>git commit --amend --signoff\n</code></pre>"},{"location":"contributing/dco-signoff/#commit-message-template","title":"Commit message template","text":"<p>If you are too lazy to have to add the <code>-s</code> parameter on each and every commit, you can create a commit message template which includes the sign-off line. Create a simple text file, eg. <code>~/.gitmessage</code> or <code>[project's root].git/commitmessage</code> with the following content:</p> <pre><code>Signed-off-by: Jimi Bendix &lt;jimib@example.com&gt;\n</code></pre> <p>If you want to enable this template for all your git activity, register it globally:</p> <pre><code>git config --global commit.template ~/.gitmessage\n</code></pre> <p>If you prefer to have individual versions per repository, or if you only want it in some repo, do similarly at the root of your repository clone:</p> <pre><code>git config commit.template .git/commitmessage\n</code></pre>"},{"location":"contributing/reporting-a-bug/","title":"Reporting a bug","text":"<p>If you think you have discovered a bug, you can help us by submitting an issue in our public issue tracker.</p>"},{"location":"contributing/reporting-a-bug/#before-you-create-a-bug","title":"Before you create a bug","text":"<p>Please do the following things before creating an issue:</p>"},{"location":"contributing/reporting-a-bug/#update-to-latest-version","title":"Update to latest version","text":"<p>Chances are that the bug you discovered was already fixed in a subsequent version. Thus, before reporting an issue, ensure that you're running the latest version of LMS. Please follow the installation guide to install the latest version.</p>"},{"location":"contributing/reporting-a-bug/#search-for-solutions","title":"Search for solutions","text":"<p>Please search the issue tracker and discussion board if someone else already submitted your bug. Also check if there is also a discussion going on the forums.</p>"},{"location":"contributing/reporting-a-bug/#submitting-an-issue","title":"Submitting an issue","text":"<p>If you did not find a previous report of your issue you can submit your report to the public issue tracker. Please include the following in your report:</p> <ul> <li>descriptive title</li> <li>context from Settings/Information in LMS: LMS version!, operating system, hardware used, Perl version</li> <li>description of the issue</li> <li>steps to reproduce the bug</li> <li>browser used (if relevant)</li> </ul>"},{"location":"contributing/reporting-a-bug/#slimdevices-bugzilla-archive","title":"SlimDevices Bugzilla Archive","text":"<p>We have a static copy of the former bugs.slimdevices.com bugzilla site.</p> <p>https://bugs-archive.lyrion.org</p> <p>Use it for reference, or archeology. Or just for fun!</p> <p>Thanks @gregklanderman who took the effort of archiving the site when it was still available.</p>"},{"location":"downloads/","title":"LMS Downloads","text":"<p>Hint</p> <p>If you\u2019re looking for the Docker image of Lyrion Music Server, please head over to the  Docker Hub Page or the  Github Container Registry.</p>"},{"location":"downloads/#v903-latest-release","title":"v9.0.3 - Latest Release","text":"<p>This is the released version. Please see Getting Started for more information. (Changelog - Git Commit Log)</p> <p>Hint</p> <p>Mac users please note: we no longer ship a preference pane, but a menu bar item. Please see How to uninstall the legacy Mac Settings Pane Item for instructions how to uninstall it.</p> <p>Hint</p> <p>Windows 32-bit users please note: your beloved Windows 32-bit build is no longer available due to hardware failure on the build system. You will have to migrate to the new 64-bit version. Please read How to migrate from Windows 32-bit build to 64-bit.</p> Name Size Creation Date Description LyrionMusicServer-9.0.3-win64.exe 17 MB Fri Oct  3 04:49:25 2025  Windows 64-bit LyrionMusicServer-9.0.3.dmg 45 MB Fri Oct  3 04:49:25 2025  Apple macOS lyrionmusicserver_9.0.3_amd64.deb 25 MB Fri Oct  3 04:49:25 2025  Debian /  Ubuntu x86_64 lyrionmusicserver_9.0.3_arm.deb 35 MB Fri Oct  3 04:49:25 2025  Debian /  Ubuntu - ARM lyrionmusicserver_9.0.3_i386.deb 18 MB Fri Oct  3 04:49:25 2025  Debian /  Ubuntu - i386 lyrionmusicserver_9.0.3_all.deb 62 MB Fri Oct  3 04:49:25 2025  Debian /  Ubuntu - i386, x86_64, ARM lyrionmusicserver-9.0.3-1.noarch.rpm 94 MB Fri Oct  3 04:49:25 2025  Red Hat /  Fedora /  other RPM-based distribution lyrionmusicserver-9.0.3-noCPAN.tgz 17 MB Fri Oct  3 04:49:25 2025  Linux/Unix Tarball - No CPAN Libraries lyrionmusicserver-9.0.3-arm-linux.tgz 60 MB Fri Oct  3 04:49:25 2025  ARM Linux Tarball lyrionmusicserver-9.0.3-MusicalFidelity.tgz 19 MB Fri Oct  3 04:49:25 2025  Musical Fidelity lyrionmusicserver-9.0.3.tgz 126 MB Fri Oct  3 04:49:25 2025  Linux/Unix Tarball - i386, x86_64, i386 FreeBSD, ARM"},{"location":"downloads/#v904-stable-nightly-build","title":"v9.0.4 - Stable Nightly Build","text":"<p>The stable branch is like the officially released latest version, with some additional bug fixes. Use this if you want to use a reliable system, but need an important fix. (Changelog - Git Commit Log)</p> Name Size Creation Date Description LyrionMusicServer-9.0.4-1760847989-win64.exe 17 MB Sun Oct 19 04:26:29 2025  Windows 64-bit LyrionMusicServer-9.0.4-1760847989.dmg 45 MB Sun Oct 19 04:26:29 2025  Apple macOS lyrionmusicserver_9.0.4~1760847989_amd64.deb 25 MB Sun Oct 19 04:26:29 2025  Debian /  Ubuntu x86_64 lyrionmusicserver_9.0.4~1760847989_arm.deb 35 MB Sun Oct 19 04:26:29 2025  Debian /  Ubuntu - ARM lyrionmusicserver_9.0.4~1760847989_i386.deb 18 MB Sun Oct 19 04:26:29 2025  Debian /  Ubuntu - i386 lyrionmusicserver_9.0.4~1760847989_all.deb 62 MB Sun Oct 19 04:26:29 2025  Debian /  Ubuntu - i386, x86_64, ARM lyrionmusicserver-9.0.4-0.1.1760847989.noarch.rpm 94 MB Sun Oct 19 04:26:29 2025  Red Hat /  Fedora /  other RPM-based distribution lyrionmusicserver-9.0.4-1760847989-noCPAN.tgz 17 MB Sun Oct 19 04:26:29 2025  Linux/Unix Tarball - No CPAN Libraries lyrionmusicserver-9.0.4-1760847989-arm-linux.tgz 60 MB Sun Oct 19 04:26:29 2025  ARM Linux Tarball lyrionmusicserver-9.0.4-1760847989-MusicalFidelity.tgz 19 MB Sun Oct 19 04:26:29 2025  Musical Fidelity lyrionmusicserver-9.0.4-1760847989.tgz 126 MB Sun Oct 19 04:26:29 2025  Linux/Unix Tarball - i386, x86_64, i386 FreeBSD, ARM"},{"location":"downloads/#v910-development-build","title":"v9.1.0 - Development Build","text":"<p>The development version is where you\u2019ll find all the latest and greatest features. But as it\u2019s under development you might encounter bugs, or changing behaviour. (Changelog - Git Commit Log)</p> <p>Danger</p> <p>Please only use this build if you\u2019re willing to deal with the occasional broken revision!</p> Name Size Creation Date Description LyrionMusicServer-9.1.0-1761117107-win64.exe 16 MB Wed Oct 22 07:11:47 2025  Windows 64-bit LyrionMusicServer-9.1.0-1761117107.dmg 46 MB Wed Oct 22 07:11:47 2025  Apple macOS lyrionmusicserver_9.1.0~1761117107_amd64.deb 21 MB Wed Oct 22 07:11:47 2025  Debian /  Ubuntu x86_64 lyrionmusicserver_9.1.0~1761117107_arm.deb 28 MB Wed Oct 22 07:11:47 2025  Debian /  Ubuntu - ARM {{ no such element: None['name'] }} {{ no such element: None['size'] }} {{ no such element: None['timestamp'] }} {{ no such element: None['desc'] }} lyrionmusicserver_9.1.0~1761117107_all.deb 61 MB Wed Oct 22 07:11:47 2025  Debian /  Ubuntu - i386, x86_64, ARM lyrionmusicserver-9.1.0-0.1.1761117107.noarch.rpm 81 MB Wed Oct 22 07:11:47 2025  Red Hat /  Fedora /  other RPM-based distribution lyrionmusicserver-9.1.0-1761117107-noCPAN.tgz 17 MB Wed Oct 22 07:11:47 2025  Linux/Unix Tarball - No CPAN Libraries lyrionmusicserver-9.1.0-1761117107-arm-linux.tgz 61 MB Wed Oct 22 07:11:47 2025  ARM Linux Tarball lyrionmusicserver-9.1.0-1761117107-MusicalFidelity.tgz 19 MB Wed Oct 22 07:11:47 2025  Musical Fidelity lyrionmusicserver-9.1.0-1761117107.tgz 117 MB Wed Oct 22 07:11:47 2025  Linux/Unix Tarball - i386, x86_64, i386 FreeBSD, ARM"},{"location":"downloads/#downloads-museum","title":"Downloads Museum","text":"<p>If you're interested in older releases, feel free to visit the download museum.</p>"},{"location":"downloads/#squeezebox-firmware","title":"Squeezebox Firmware","text":"<p>And here are the last official Squeezebox Firmware images available for you.</p> <p>More recent firmware images for Squeezebox Touch, Radio, and Controller are available through the \"Community Firmware\" plugin. See the Plugins section for details about how to install plugins..</p>"},{"location":"downloads/archive/","title":"Downloads Archive","text":"<p>For the archeologists among you. Or those who believe that SlimServer v6.3.1 provided the best sound ever: here you go.</p> <p>Warning</p> <p>These releases are unsupported. Many probably don't work any more. Use at your own risk.</p> <p>Go back to safety, get the latest release.</p>"},{"location":"downloads/archive/#lyrion-music-server-90","title":"Lyrion Music Server (9.0.*)","text":"<ul> <li>LyrionMusicServer_v9.0.3</li> <li>LyrionMusicServer_v9.0.2</li> <li>LyrionMusicServer_v9.0.1</li> <li>LyrionMusicServer_v9.0.0</li> </ul>"},{"location":"downloads/archive/#logitech-media-server-770-85x","title":"Logitech Media Server (7.7.0 - 8.5.x)","text":"<ul> <li>LogitechMediaServer_v8.5.3_unreleased</li> <li>LogitechMediaServer_v8.5.2</li> <li>LogitechMediaServer_v8.5.1</li> <li>LogitechMediaServer_v8.5.0</li> <li>LogitechMediaServer_v8.4.1_unreleased</li> <li>LogitechMediaServer_v8.4.0</li> <li>LogitechMediaServer_v8.3.2_unreleased</li> <li>LogitechMediaServer_v8.3.1</li> <li>LogitechMediaServer_v8.3.0</li> <li>LogitechMediaServer_v8.2.1_unreleased</li> <li>LogitechMediaServer_v8.2.0</li> <li>LogitechMediaServer_v8.1.1</li> <li>LogitechMediaServer_v8.1.0</li> <li>LogitechMediaServer_v8.0.0</li> <li>LogitechMediaServer_v7.9.4_unreleased</li> <li>LogitechMediaServer_v7.9.3</li> <li>LogitechMediaServer_v7.9.2</li> <li>LogitechMediaServer_v7.9.1</li> <li>LogitechMediaServer_v7.9.0</li> <li>LogitechMediaServer_v7.8.1_unreleased</li> <li>LogitechMediaServer_v7.8.0</li> <li>LogitechMediaServer_v7.7.6</li> <li>LogitechMediaServer_v7.7.5</li> <li>LogitechMediaServer_v7.7.4</li> <li>LogitechMediaServer_v7.7.3</li> <li>LogitechMediaServer_v7.7.2</li> <li>LogitechMediaServer_v7.7.1</li> <li>LogitechMediaServer_v7.7.0</li> </ul>"},{"location":"downloads/archive/#squeezebox-server-740-762","title":"Squeezebox Server (7.4.0-7.6.2)","text":"<ul> <li>SqueezeboxServer_v7.6.2_unreleased</li> <li>SqueezeboxServer_v7.6.1</li> <li>SqueezeboxServer_v7.6.0</li> <li>SqueezeboxServer_v7.5.6_unreleased</li> <li>SqueezeboxServer_v7.5.5</li> <li>SqueezeboxServer_v7.5.4</li> <li>SqueezeboxServer_v7.5.3</li> <li>SqueezeboxServer_v7.5.2</li> <li>SqueezeboxServer_v7.5.1</li> <li>SqueezeboxServer_v7.5.0</li> <li>SqueezeboxServer_v7.4.2</li> <li>SqueezeboxServer_v7.4.1</li> <li>SqueezeboxServer_v7.4.0</li> </ul>"},{"location":"downloads/archive/#squeezecenter-700-734","title":"SqueezeCenter (7.0.0-7.3.4)","text":"<ul> <li>SqueezeCenter_v7.3.4</li> <li>SqueezeCenter_v7.3.3</li> <li>SqueezeCenter_v7.3.2</li> <li>SqueezeCenter_v7.3.1</li> <li>SqueezeCenter_v7.3.0</li> <li>SqueezeCenter_v7.2.1</li> <li>SqueezeCenter_v7.2.0</li> <li>SqueezeCenter_v7.1.0</li> <li>SqueezeCenter_v7.0.1</li> <li>SqueezeCenter_v7.0.0</li> </ul>"},{"location":"downloads/archive/#slimserver-500-654","title":"SlimServer (5.0.0-6.5.4)","text":"<ul> <li>SlimServer_v6.5.4</li> <li>SlimServer_v6.5.3</li> <li>SlimServer_v6.5.2</li> <li>SlimServer_v6.5.1</li> <li>SlimServer_v6.5.0</li> <li>SlimServer_v6.3.1</li> <li>SlimServer_v6.3.0</li> <li>SlimServer_v6.2.2</li> <li>SlimServer_v6.2.1</li> <li>SlimServer_v6.2.0</li> <li>SlimServer_v6.1.1</li> <li>SlimServer_v6.0.2</li> <li>SlimServer_v5.4.1</li> <li>SlimServer_v5.4.0</li> <li>SlimServer_v5.3.1</li> <li>SlimServer_v5.3.0</li> <li>SlimServer_v5.2.1</li> <li>SlimServer_v5.2.0</li> <li>SlimServer_v5.1</li> <li>SlimServer_v5.1.5</li> <li>SlimServer_v5.1.4</li> <li>SlimServer_v5.1.3</li> <li>SlimServer_v5.1.1</li> <li>SlimServer_v5.0.1</li> <li>SlimServer_v5.0.0</li> </ul>"},{"location":"downloads/archive/#slimp3-server-31-426","title":"SliMP3 Server (3.1-4.2.6)","text":"<ul> <li>SLIMP3_Server_v4.2</li> <li>SLIMP3_Server_v4.2.6</li> <li>SLIMP3_Server_v4.2.4</li> <li>SLIMP3_Server_v4.2.3</li> <li>SLIMP3_Server_v4.2.2</li> <li>SLIMP3_Server_v4.2.1</li> <li>SLIMP3_Server_v4.1b1</li> <li>SLIMP3_Server_v4.0</li> <li>SLIMP3_Server_v3.1b5</li> <li>SLIMP3_Server_v3.1b4</li> <li>SLIMP3_Server_v3.1b3</li> <li>SLIMP3_Server_v3.1b2</li> <li>SLIMP3_Server_v3.1b1</li> </ul>"},{"location":"downloads/listing/","title":"Downloads Archive","text":"<p>Warning</p> <p>These files are unsupported. Many documents are outdated, software packages might not work any more. Use at your own risk.</p> <p>Go back to safety, get the latest release.</p> Name Size Description <p> </p>"},{"location":"extensions/applications/","title":"Applications","text":""},{"location":"extensions/applications/#controller","title":"Controller","text":"<ul> <li>Cursebox (Terminal): An interactive utility that allows you to control your players from the terminal.</li> <li>iPeng (iOS): The Music Remote for LMS and compatible music players.</li> <li>LMS TUI  (Terminal): An application with a text-based user interface to remotely control LMS.</li> <li>Lyrion (Android): Simple webview wrapper for MaterialSkin on an LMS server.</li> <li>melodeon (Desktop): Simple QWebEngine wrapper for MaterialSkin on LMS.</li> <li>ncsb (Terminal): A ncurses Squeezebox controller for LMS.</li> <li>Open Squeeze (Android):  An Android app that can be used to control LMS devices.</li> <li>Squeeze Client (Android): An Android client/controller application for LMS with Material Design 3 UI.</li> <li>Squeeze Ctrl (Android): Remote control app for the Squeezebox system.</li> <li>Squeezelite-X (Windows): Combines the Squeezelite player with Lyrion with easy access to LMS' user interface.</li> <li>Squeezer (Android): Control your Lyrion Music Server and players from your Android phone.</li> <li>Ultralight LMS skin (Browser): A responsive skin for Lyrion Music Server that works well on desktop and mobile browsers.</li> </ul>"},{"location":"extensions/applications/#voice-control","title":"Voice Control","text":"<ul> <li>MediaServer (Alexa) A custom Alexa skill to fully control LMS and also stream LMS-audio via Amazon Echo devices.</li> <li>LMS-Lite (Alexa) A smart-home Alexa skill to add LMS players to Alexa routines.</li> </ul>"},{"location":"extensions/applications/#display","title":"Display","text":"<ul> <li>LMSMonitor: OLED information display control program for piCorePlayer or other Raspberry Pi and LMS based audio device.</li> <li>OLED Control for PCP 7.x, 8.X &amp; 9.X: Display information from LMS on an OLED display.</li> </ul>"},{"location":"extensions/applications/#music-visualizer","title":"Music Visualizer","text":"<ul> <li>CAVA: Cross-platform Audio Visualizer with support for squeezelite.</li> <li>cli-visualizer: Command line visualizer with support for squeezelite.</li> <li>Jivelite visualisation</li> <li>projectMSDL: projectM visualizations for squeezelite.</li> </ul>"},{"location":"extensions/applications/#integration","title":"Integration","text":"<ul> <li>Domoticz: allow Domoticz to control your Squeezebox and compatible players.</li> <li>Home Assistant: The Squeezebox integration allows you to control music players from the LMS ecosystem.</li> <li>openHAB: Squeezebox binding, integrates the LMS and compatible Squeezebox players.</li> <li>slimpris2: slimpris2 provides MPRIS 2 remote control of LMS, allowing it to be controlled using the user interface integrated into your Linux desktop.</li> <li>Squeezelite player for Kodi: Transform Kodi in a Squeezebox player.</li> </ul>"},{"location":"extensions/applications/#platforms","title":"Platforms","text":"<ul> <li>Home Assistant Add-on: LMS: A complete and easy way to run LMS</li> <li>LMS on Android: Run LMS on an Android device using Termux.</li> </ul>"},{"location":"extensions/applications/#automatic-playlist-mix-creation","title":"Automatic Playlist / Mix Creation","text":"<ul> <li>AudioMuse-AI: Leverages Librosa and TensorFlow for sonic analysis of your local library, powering similar song discovery and smart playlists creation.</li> <li>LMS Recommender: A system to create music recommendations for local music based on positive and negative tracks. Results can be further refined by using filters (inferred track classifications (moods, genres, \u2026) or track metadata (ratings, \u2026).</li> <li>MusicIP: Analyses your local music library to try to understand the makeup of each music track, then, based on a selected track, generates a playlist of tracks that blend together.</li> </ul>"},{"location":"extensions/applications/#library-info-exporter","title":"Library Info Exporter","text":"<ul> <li>Album list: A Python script which creates a html document listing all albums in the LMS library.</li> <li>LMS Documentor: Creates a PDF or HTML document of the contents of a given LMS library.</li> </ul>"},{"location":"extensions/applications/#configuration","title":"Configuration","text":"<ul> <li>Net-UDAP: Net::UDAP is a Perl module to configure the Logitech SqueezeBox Receiver (SBR) from a PC</li> <li>sbconfig: Utility for configuring Logitech Squeezebox devices from your computer</li> </ul>"},{"location":"extensions/applications/#other","title":"Other","text":"<ul> <li>LMS Event Subscriber: A stand-alone application for executing external commands triggered by LMS server events.</li> <li>LMS Image Handler: Replaces LMS' built-in image processing with an stand-alone server running outside of LMS.</li> <li>SqeezeButtonPi Daemon: A controller tool to use buttons and rotary encoders to control an instance of SqueezeLite or SqueezePlay.</li> </ul>"},{"location":"faq/lms/","title":"Lyrion Music Server FAQ","text":""},{"location":"faq/lms/#what-are-logs","title":"What are logs?","text":"<p>Logs are records written by software modules. They generally record significant events and, in particular, problems They are often plain text files (and in the case of LMS and related applications, they are almost always plain text).</p> <p>The level of detail held within the log records is often configurable - with the default level usually only showing detected errors. Increasing the log level usually results in more details being reccorded. The highest level of logging tends to be very verbose and is typically only used for short periods due to the amount of space conmsumed to store the data.</p> <p>Log data is usually automatically \"rolled over\" with the result that old information is discarded. This is to try to prevent storage space becoming full.</p> <p>Warning</p> <p>Log entries can contain personal information such as user account names and possibly passwords and personal application access keys. So do not simply upload a full log file or copy/paste into a forum post without first checking the content and possibly replacing such material first.</p>"},{"location":"faq/lms/#how-can-logs-be-accessed","title":"How can logs be accessed?","text":"Each software application has its own way of recording and presenting log information. The individual log file entries can be very wide so viewing on a device with a small screen is not recommended. <ul> <li> <p>LMS:</p> <p>Log data is stored in server.log and scanner.log The location of these files is not the same for all installations, however, the location does not usually matter because LMS includes a log file viewer. For example: From the LMS \"Default\" web interface - Choose Settings (bottom right) then Information then links to the log files are shown at the bottom of the page. The built-in log viewer will automatically update the view as new entries are added. If this means that what you were studing suddently scrolls off the page then you can turn off the refresh function with a checkbox towards the top of the page.</p> <p>From the LMS \"Material\" web interface go to the \"burger\" menu in the top left, Settings / Server / Logging.</p> </li> <li> <p>piCorePlayer:</p> <p>If you are using piCorePlayer (pCP) then you can use the log viewer that is included in its web interface. From the \"Main\" tab select \"Diagnostics\" and then the \"Logs\" tab. There is a drop down menu on that page that you can use to select a particular log type. server/server is the LMS server.log, server/scanner is the LMS scanner log. Note - these logs can be very long.</p> </li> </ul>"},{"location":"faq/lms/#how-should-i-provide-a-full-log-file-if-requested","title":"How should I provide a full log file if requested?","text":"Sometimes a full version of the LMS log is requested to help diagnose an issue. The LMS web-based log viewer interface includes (certainly in the \"Default\" view) a \"Download\" link. Selecting this will download a zip file of the log to the browser download location. You can then provide that zip file to the requester - but note the privacy warning above."},{"location":"faq/lms/#how-should-i-paste-log-file-information-into-the-lyrion-forum","title":"How should I paste log file information into the Lyrion forum?","text":"<p>Providing an extract from the logs as part of a discussion in the forum can be useful. It is best to enclose the log data inside code tags. This can be done from the forum editor by pressing the # symbol that is in the top bar of the editor window. The result in the editor will look something like:</p> <pre><code>[CODE]\n[25-05-29 10:30:40.5277] Plugins::APluginName::Plugin:: (1234) problem with data source - 404\n[25-05-29 10:30:40.8888] Plugins::APluginName::Plugin:: (1238) Access problem\n[25-05-29 10:30:40.9321] Plugins::APluginName::Plugin:: (1238) giving up\n[/CODE]\n</code></pre> <p>There are a number of benefits when using this style:</p> <ul> <li>monospaced font makes it easier to view since the columns line up</li> <li>scrollable window if a long extract is pasted in it does not dominate the fourm page which would makw the rest of the post difficult to read</li> <li>raw text prevents the conversion of certain text sequences into emojis</li> </ul>"},{"location":"faq/lms/#how-is-the-level-of-detail-in-the-logs-adjusted","title":"How is the level of detail in the logs adjusted?","text":"Changing the level of detail in the logs is usually done following guidance of someone who is helping to resolve a problem. Including a lot of diagnostic detail in the log can sometimes generate so much information that it is difficult to read and understand. Changing the logging level often requires a restart of the application - although not in the case of LMS. <ul> <li> <p>LMS:     From the LMS web interface you can change the loging level for many different components.     To access the log level settings go to:     \"Default\" interface: bottom right Settings / Advanced / Logging     \"Material\" interface: top left menu selector (hamburger) / Server (bottom of list) / Logging</p> <p>Each item has a setting with an ascending level of detail - Fatal, Error, Warn, Info, Debug Setting to Warn will include Fatal, Error and Warn levels</p> <p>There is an additional setting shown at the top of the page that can be useful. \"Save logging settings for use at next application restart\" If this is selected then changes made to the logging settings will be remembered for the next restart. This helps when the problem that is being researched is something that happens during the restart process.</p> <p>Do not forget to reset the log levels after diagnosing an issue otherwise you risk filling up the storage if running on a system with limited capacity.</p> </li> </ul>"},{"location":"faq/lms/#why-is-my-frequently-asked-question-not-answered-here","title":"Why is my frequently asked question not answered here?","text":"<p>That is a good question. Probably this is because people who know the answer have answered it somewhere else many times over and did not think of adding it to a FAQ and answering by linking to the FAQ entry.</p> <p>It might also be because your question is too hard to answer and despite everyone and their dogs asking it, no-one has worked it out yet.</p>"},{"location":"faq/lms/#why-does-this-faq-contain-mildly-humorous-comments","title":"Why does this FAQ contain mildly humorous comments?","text":"<p>FAQ contents are often written by people who would rather be doing something else. Injecting a bit of humour lightens the load when creating the entries and might make it more fun for the reader who has probably been struggling for some time before finally arriving at the FAQ.</p> <p>Some readers might find it condescending but it is not the intention. If you do then you could either lighten up or submit edits.</p>"},{"location":"getting-started/","title":"Getting Started","text":"<p>Lyrion Music Server is a fully open source server software to power a wide range of audio players. With the help of many plugins, Lyrion Music Server can stream not only your local music collection, but content from many music services and internet radio stations to your players.</p>"},{"location":"getting-started/#download-and-install-lyrion-music-server-v903","title":"Download and install Lyrion Music Server v9.0.3","text":"Windows Raspberry Pi Linux Apple macOS Docker Other Downloads <p>Note</p> <p>Lyrion Music Server now comes as a 64-bit application. An existing 32-bit version must be uninstalled before installing the 64-bit version (The LMS 9 installer will do this automatically). Please note that there's no Control Panel app any more, nor a tray icon. Tools like eg. ServiceTray allow you to easily start/stop the LMS service. See this document if you have to migrate.</p> <p> Windows 64-bit (17 MB)</p> <p>Then double click the downloaded package to launch the installation process in a familiar installation assistant.</p> <p>Easy install using piCorePlayer</p> <p>If you want to have an easily installed LMS on a Raspberry Pi and don't want to go the full Linux route as outlined below, you can use piCorePlayer. See the \"Beginner's guide...\".</p> <p>Installation on Raspberry Pi OS</p> <p>If you prefer to run your LMS on a full Linux system, or in parallel to other applications, use this method.</p> <p> Raspberry Pi OS (35 MB)</p> <p>Download the above package, then install it with its depencencies using the operating system's package manager <code>apt</code>:</p> <pre><code>sudo apt install /path/to/lyrionmusicserver_9.0.3_*.deb\n</code></pre> <p> Debian /  Ubuntu x86_64 (25 MB)  Debian /  Ubuntu - ARM (35 MB)</p> <p>Download the package, then install it with its depencencies using the operating system's package manager <code>apt</code>:</p> <pre><code>sudo apt install /path/to/lyrionmusicserver_9.0.3_*.deb\n</code></pre> <p> Red Hat /  Fedora /  other RPM-based distribution (94 MB)</p> <p>Install on Fedora/Red Hat Enterprise Linux/CentOS, etc.:</p> <pre><code>sudo dnf install https://downloads.lms-community.org/LyrionMusicServer_v9.0.3/lyrionmusicserver-9.0.3-1.noarch.rpm\n</code></pre> <p>Install on openSUSE and derivatives:</p> <pre><code>sudo zypper install https://downloads.lms-community.org/LyrionMusicServer_v9.0.3/lyrionmusicserver-9.0.3-1.noarch.rpm\n</code></pre> <p> Apple macOS (45 MB)</p> <p>Then double click the downloaded image. Drag the application to the Applications folder. Launch Lyrion Music Server from the Applications folder, then check the menu bar item for Start/Stop options. See Getting started on macOS for Details.</p> <p>See lmscommunity/lyrionmusicserver on Docker hub, or lms-community/lyrionmusicserver in the Github Container Registry.</p> <p>For Docker on Synology NAS see the Beginner's Docker Guide on Synology.</p> <p>You can find more packages for more platforms on https://lyrion.org/downloads.</p>"},{"location":"getting-started/#configure","title":"Configure","text":"<p>Now you should be able to browse to http://yourserver:9000 (replace \"yourserver\" with localhost if you are at the same system as your new installation or with the hostname or IP address of that system if using a different device) and begin configuring the Lyrion Music Server.</p> <p>Congrats, you're ready to Free your Music!</p>"},{"location":"getting-started/advanced-guide-openvpn/","title":"Advanced guide to OpenVPN on SB Radio/Touch","text":"<p>This guide describes the procedure to install OpenVPN on your Squeezebox Radio (<code>baby</code>) or Squeezebox Touch (<code>fab4</code>). You can use this to connect your Squeezebox player to your remote home network using OpenVPN. This guide assumes you have a functioning OpenVPN setup on your network. Also this guide assumes basic knowledge of *nix administration (especially for the usage of <code>vi</code>).</p>"},{"location":"getting-started/advanced-guide-openvpn/#openvpn-installation","title":"OpenVPN installation","text":"<p>We need the <code>openvpn</code> binary and the <code>tun</code> kernel module for the SB Radio/Touch and your <code>ovpn.config</code> as text.</p> <p>Download the latest <code>baby-openvpn-x.y.z.zip</code> or <code>fab4-openvpn-x.y.z.zip</code> from Ralphy's repository and then copy it into the SB Radio/Touch:</p> RadioTouch <pre><code>scp -O /path/to/baby-openvpn-x.y.z.zip root@RADIO-IP:/dev\n</code></pre> <pre><code>scp -O /path/to/fab4-openvpn-x.y.z.zip root@TOUCH-IP:/dev\n</code></pre> <p>Then we <code>ssh</code> into the SB Radio/Touch and enter the following commands:</p> RadioTouch <pre><code>ssh root@RADIO-IP\ncd /dev\nunzip baby-openvpn-x.y.z.zip\nmv /dev/openvpn /usr/sbin\nchmod 755 /usr/sbin/openvpn\nmv /dev/tun.ko /lib/modules/2.6.26.8-rt16\nmkdir -p /etc/openvpn\n</code></pre> <pre><code>ssh root@TOUCH-IP\ncd /dev\nunzip fab4-openvpn-x.y.z.zip\nmv /dev/openvpn /usr/sbin\nchmod 755 /usr/sbin/openvpn\nmv /dev/tun.ko /lib/modules/2.6.26.8-rt16-332-g5849bfa\nmkdir -p /etc/openvpn\n</code></pre> <p>Next we create the file with <code>vi</code> and there you enter the text of your ovpn.config. Make sure you insert <code>auth-user-pass /etc/openvpn/up</code> into the config: <pre><code>vi /etc/openvpn/TUN.ovpn\n</code></pre></p> <p>Next create the file <code>up</code> and enter your vpn username in first line and password in second line: <pre><code>vi /etc/openvpn/up\n</code></pre></p> <p>Next is the <code>rcS.local</code> file which runs the stuff at boot: <pre><code>vi /etc/init.d/rcS.local\n</code></pre></p> <p>We paste these two commands into that file:</p> RadioTouch <pre><code># Load the tunnel kernel module.\ninsmod /lib/modules/2.6.26.8-rt16-332-g5849bfa/tun.ko\n# Start openvpn\n/usr/sbin/openvpn --config /etc/openvpn/TUN.ovpn --daemon\n</code></pre> <pre><code># Load the tunnel kernel module.\ninsmod /lib/modules/2.6.26.8-rt16/tun.ko\n# Start openvpn\n/usr/sbin/openvpn --config /etc/openvpn/TUN.ovpn --daemon\n</code></pre> <p>Then <code>chmod</code> that file: <pre><code>chmod 755 /etc/init.d/rcS.local\n</code></pre></p> <p>Then we put a script which gets NTP time when network is up. We need this to get the right time to connect to vpn. <pre><code>vi /etc/network/if-up.d/settime\n</code></pre></p> <p>Put the following contents into that file: <pre><code>#!/bin/sh\n# /etc/network/if-up.d/settime\n# Sets the hardware clock from an NTP server on reboot\n# Replace this with the address of your local time server\n# or with a public NTP server like pool.ntp.org or time.google.com\nNTP_SERVER=pool.ntp.org\n# Log file with system time before and after synchronisation\nLOG_FILE=\"/var/log/settime.log\"\nif [ \"$METHOD\" != \"loopback\" ]; then\ndate &gt;&gt; $LOG_FILE\necho \"Synchronizing time with $NTP_SERVER via $IFACE\" &gt;&gt; $LOG_FILE\nmsntp -r -P no $NTP_SERVER &amp;&amp; hwclock -w -u\ndate &gt;&gt; $LOG_FILE\nfi\n</code></pre></p> <p>Then we <code>chmod</code> that file: <pre><code>chmod +x /etc/network/if-up.d/settime\n</code></pre></p> <p>That\u2019s it, we are done, hope it is running fine. We can now reboot: <pre><code>reboot\n</code></pre></p>"},{"location":"getting-started/beginners-guide-full-featured-lms-on-raspberry-pi/","title":"Beginner's Guide for a full-featured LMS on Raspberry Pi","text":"<p>Note</p> <p>If you are looking for the most simple and cheap LMS setup (comparable to the now defunct MySqueezebox.com service) and just want to use internet streaming services, please follow this guide.</p> <p>This guide will not only make it possible to use internet streaming services on your Squeezeboxes, but you can also play your local music collection with your Squeezeboxes. The hardware mentioned in this guide is a bit more expensive than the hardware you need for internet-streaming-only LMS, but you are a lot more flexible into the future.</p>"},{"location":"getting-started/beginners-guide-full-featured-lms-on-raspberry-pi/#getting-the-hardware","title":"Getting the hardware","text":"<p>These five parts are enough for your own powerful but energy-saving and long-lasting LMS music &amp; radio server.</p> <ul> <li>Raspberry Pi 4B</li> <li>Enclosure (make sure to choose one specifically for your Raspberry model)</li> <li>Micro SD memory card, 8GB or higher</li> <li>Power Adapter 5V 3A</li> <li>Ethernet cable</li> </ul> <p>Here you can find a store in your area which sells these items. Some stores also sell these items as a bundle for your convenience. You can also use rpilocator.com to check if local stores have the model you are looking for in stock.</p> <p>There are other options than the 4B that will also work, such as the Raspberry Pi 3B+ or the Raspberry Pi 5. Please make sure you buy an enclosure and a power adapter that suits your model (2.5A power supply for the 3B+ and a 5A power supply for the Raspberry Pi 5).</p>"},{"location":"getting-started/beginners-guide-full-featured-lms-on-raspberry-pi/#installing-and-configuring-the-software","title":"Installing and configuring the software","text":"<p>For new users to Raspberry Pi and LMS the easiest way to LMS is to install piCorePlayer (pCP). There is already great guide for pCP, but for clarity, below are the steps for this particular combination of hardware:</p> <ol> <li>Download piCorePlayer (use the 64-bits variant)</li> <li>Burn pCP to the SD card</li> <li>Eject the SD card and insert into the Raspberry Pi</li> <li>Connect the Raspberry Pi with an Ethernet cable to your router</li> <li>Connect the power adapter to the Raspberry Pi</li> </ol> <p>Congrats, piCorePlayer is now booting!</p>"},{"location":"getting-started/beginners-guide-full-featured-lms-on-raspberry-pi/#after-boot","title":"After boot","text":"<p>After your new piCorePlayer has finished booting up, there are a few steps left to install and configure LMS:</p> <ol> <li>First determine the IP-address of the new piCorePlayer. This IP-address is needed in the steps below.</li> <li>Launch your web browser (eg. Edge, Firefox) and type: <code>http://[ip address from the previous step]</code>. Then, press Enter. The piCorePlayer web interface will open.</li> <li>Go to the Main Page tab, then to <code>Resize FS</code> in <code>Additional functions</code>.</li> <li>Enter the value 2000 MB and click on <code>Resize</code>. Wait until the operation is complete (pCP may restart).</li> <li>At the bottom left of the page, click on <code>Player/server</code>.</li> <li>Go to the <code>LMS</code> tab, then click on <code>Install</code>.</li> <li>In the <code>LMS</code> tab, click on <code>Start LMS</code> and wait for the operation to finish (pCP may restart). The <code>LMS is running</code> signal is ticked in green.</li> <li>Confirm that the first line <code>Set Autostart</code> is set to <code>Yes</code>.</li> <li>Go to the <code>Tweaks</code> tab and give a name (Host name) to the LMS server (for instance <code>lyrion</code>). This name will be used to connect the Squeezebox to the server.</li> </ol> <p>If you need any help with the steps above, please check this guide for more pointers.</p>"},{"location":"getting-started/beginners-guide-full-featured-lms-on-raspberry-pi/#connecting-your-squeezebox-to-lms","title":"Connecting your Squeezebox to LMS","text":"<p>The last step is to switch your Squeezebox device from MySqueezebox.com to your LMS instance. Turn on your Squeezebox, go to \"My Music\", then select \"Switch library...\", click on the server name defined above, and... that's it, your Squeezebox is connected to your LMS 24/7 !</p>"},{"location":"getting-started/beginners-guide-full-featured-lms-on-raspberry-pi/#add-your-local-music-collection","title":"Add your local music collection","text":"<p>Your Lyrion Music Server is able to serve your local music collection to your Squeezebox players. You can attach an external hard drive which contains all your music to the Raspberry Pi or, if you already have all your music available via a network share, you can add this network share to the piCorePlayer.</p>"},{"location":"getting-started/beginners-guide-full-featured-lms-on-raspberry-pi/#external-hard-drive","title":"External hard drive","text":"<p>Before connection your external drive to the Raspberry, please make sure that the Raspberry is capable of supplying enough power to the external drive, or use an external power supply for the drive. Next, follow this guide to configure the drive on your piCorePlayer.</p>"},{"location":"getting-started/beginners-guide-full-featured-lms-on-raspberry-pi/#add-network-share","title":"Add network share","text":"<p>If you have your music collection already available on a file share (for instance on a NAS), you can follow this guide to add the network share to your piCorePlayer.</p>"},{"location":"getting-started/beginners-guide-full-featured-lms-on-raspberry-pi/#troubleshooting","title":"Troubleshooting","text":"<p>In case you encounter some problems please head over to the forums for assistance. See also this thread which specifically deals with helping newcomers installing LMS on a Raspberry Pi.</p>"},{"location":"getting-started/beginners-guide-lms-on-raspberry-pi/","title":"Beginner's Guide for LMS on Raspberry Pi","text":"<p>Note</p> <p>This guide is primarily targeted at users that just use their Squeezeboxes for internet streaming. If you are looking for a more capable music system which can also serve local music, the Raspberry Pi model specified below is underpowered. If you want to serve local music, please use a Raspberry Pi 3B+ or better.</p> <p>Were you an user of the now defunct MySqueezebox.com service and do you just want to continue listening to internet radio? Maybe a few podcasts too? You're not interested in having your own digital music collection at your fingertips? Just follow the steps below!</p>"},{"location":"getting-started/beginners-guide-lms-on-raspberry-pi/#getting-the-hardware","title":"Getting the hardware","text":"<p>These four parts are enough for your own inexpensive, energy-saving and long-lasting LMS Little Music &amp; Radio Server.</p> <ul> <li>Raspberry Pi Zero 2 W</li> <li>Enclosure (make sure to choose one specifically for the Raspberry Pi Zero)</li> <li>Micro SD memory card, 8GB or higher</li> <li>Power Adapter 5V 2A</li> </ul> <p>Here you can find a store in your area which sells these items. Some stores also sell these items as a bundle.</p> <p></p> <p>Other Raspberry Pi models are suited as well (such as 3B+, 4B, 5), but please make sure you buy an enclosure and a power adapter that suits your model. The advantage of these models over the \"Raspberry Pi Zero 2 W\" is that they feature an Ethernet port, which might suit your personal situation better (do not forget to also order an Ethernet cable).</p>"},{"location":"getting-started/beginners-guide-lms-on-raspberry-pi/#installing-and-configuring-the-software","title":"Installing and configuring the software","text":"<p>For new users to Raspberry Pi and LMS the easiest way to LMS is to install piCorePlayer (pCP). There is already great guide for pCP, but for clarity, below are the steps for this particular combination of hardware:</p> <ol> <li>Download piCorePlayer (use the 32-bits variant)</li> <li>Burn pCP to the SD card</li> <li>Setup WiFi</li> <li>Eject the SD card and insert into the Raspberry Pi</li> <li>Connect the power adapter to the Raspberry Pi</li> </ol> <p>Congrats, piCorePlayer is now booting!</p>"},{"location":"getting-started/beginners-guide-lms-on-raspberry-pi/#after-boot","title":"After boot","text":"<p>After your new piCorePlayer has finished booting up, there are a few steps left to install and configure LMS:</p> <ol> <li>First determine the IP-address of the new piCorePlayer. This IP-address is needed in the steps below.</li> <li>Launch your web browser (eg. Edge, Firefox) and type: <code>http://[ip address from the previous step]</code>. Then, press Enter. The piCorePlayer web interface will open.</li> <li>Go to the Main Page tab, then to <code>Resize FS</code> in <code>Additional functions</code>.</li> <li>Enter the value 2000 MB and click on <code>Resize</code>. Wait until the operation is complete (pCP may restart).</li> <li>At the bottom left of the page, click on <code>Player/server</code>.</li> <li>Go to the <code>LMS</code> tab, then click on <code>Install</code>.</li> <li>In the <code>LMS</code> tab, click on <code>Start LMS</code> and wait for the operation to finish (pCP may restart). The <code>LMS is running</code> signal is ticked in green.</li> <li>Confirm that the first line <code>Set Autostart</code> is set to <code>Yes</code>.</li> <li>Go to the <code>Tweaks</code> tab and give a name (Host name) to the LMS server (for instance <code>lyrion</code>). This name will be used to connect the Squeezebox to the server.</li> </ol> <p>If you need any help with the steps above, please check this guide for more pointers.</p>"},{"location":"getting-started/beginners-guide-lms-on-raspberry-pi/#connecting-your-squeezebox-to-lms","title":"Connecting your Squeezebox to LMS","text":"<p>The last step is to switch your Squeezebox device from MySqueezebox.com to your LMS instance. Turn on your Squeezebox, go to \"My Music\", then select \"Switch library...\", click on the server name defined above, and... that's it, your Squeezebox is connected to your LMS 24/7 !</p>"},{"location":"getting-started/beginners-guide-lms-on-raspberry-pi/#troubleshooting","title":"Troubleshooting","text":"<p>In case you encounter some problems please head over to the forums for assistance. See also this thread  which specifically deals with helping newcomers installing LMS on a Raspberry Pi.</p>"},{"location":"getting-started/beginners-guide-omv-docker/","title":"Beginner's Docker Guide on Open Media Vault","text":"<p>Note</p> <p>In case you have any difficulties following this guide or have found some errors, please leave a note on the forums. Thanks!</p> <p>If you have a Open Media Vault NAS which can run Docker containers aka. \"Compose\", you are in luck!</p> <p>This guide uses our \"official\" Docker image. Source and the dockerfile of the image can be found here.</p>"},{"location":"getting-started/beginners-guide-omv-docker/#assumptions","title":"Assumptions","text":"<p>In this guide the following assumptions apply:</p> <ul> <li>Your music is stored in a folder in a storage pool, <code>/pool0/media</code></li> <li>Configuration will be stored in <code>/pool0/lyrion_config</code></li> <li>You run your LMS in \"host\" mode meaning that the 9000 port needs to be free on you NAS</li> </ul>"},{"location":"getting-started/beginners-guide-omv-docker/#add-an-lms-application-to-compose-files","title":"Add an LMS application to Compose Files","text":"<ol> <li>Open \"Service / Composer / Files\"</li> <li>Click \"+\" to create a new container</li> <li>Set an \"Name\", i.e. \"lms\". It must be between 1 and 32 characters.</li> <li>Paste the Docker Compose configuration, adapting it to your needs :     <pre><code>services:\n    lms:\n        container_name: lms\n        image: lmscommunity/lyrionmusicserver\n        volumes:\n            - /pool0/lyrion_config:/config:rw\n            - /pool0/media:/music:ro\n            - /pool0/media:/playlist:rw\n            - /etc/localtime:/etc/localtime:ro\n            - /etc/timezone:/etc/timezone:ro\n        network_mode: host\n        environment:\n            - HTTP_PORT=9000\n        restart: always\n</code></pre></li> <li>Click \"Save\" to save the container</li> <li>Once created you should see your application in the list</li> <li>Select the file from the list and </li> <li>Click the up button</li> </ol>"},{"location":"getting-started/beginners-guide-omv-docker/#open-lms","title":"Open LMS","text":"<ol> <li>Launch your web browser and type: <code>http://[ip address you noted previously]:9000</code>. Then, press Enter. The Lyrion Music Server web interface will open.</li> <li>Configure LMS as desired</li> </ol>"},{"location":"getting-started/beginners-guide-omv-docker/#updating-the-docker-image","title":"Updating the Docker image","text":"<p>It is always advisable to regularly update your software, and with Docker on Synology it is made very easy.</p> <ol> <li>Open \"Compose / Files\" and select the \"LMS\" file</li> <li>Click the pull button</li> </ol>"},{"location":"getting-started/beginners-guide-qnap-docker/","title":"Beginner's Docker Guide on QNAP","text":"<p>Note</p> <p>In case you have any difficulties following this guide or have found some errors, please leave a note on the forums. Thanks!</p> <p>If you have a QNAP NAS which can run Docker containers (aka \"Container Station\"), you are in luck!</p> <p>If you're still running the QNAP AppCenter version of \"LogitechMediaServer\", you must know that it hasn't been updated since 2012 (v7.7.2). Upgrading using this method is recommended.</p> <p>This guide uses our \"official\" Docker image (or from the Github Container Registry). Our examples assume you are pulling from Docker Hub. Source and the dockerfile of the image can be found here.</p>"},{"location":"getting-started/beginners-guide-qnap-docker/#assumptions","title":"Assumptions","text":"<p>In this guide the following assumptions apply:</p> <ul> <li>You have Container Station installed (available from the QNAP Store in the AppCenter)</li> <li>Your music is stored in the <code>Music</code> folder of your <code>Multimedia</code> share (<code>/share/Multimedia/Music</code>).</li> <li>The state of the docker image is saved in the folder <code>/share/Container/app-data/lms-config/</code>. The path can be anything, but it is advisable to restrict write access for other users to this folder.</li> <li>(Optional) You have a shared folder where LMS can store playlists (i.e. : <code>/share/Multimedia/Playlists/LMS</code>).</li> <li>(If applicable) You have disabled or uninstalled the \"LogitechMediaServer\" application installed via the QNAP AppCenter. This will free up the LMS network ports so the container can use them.</li> </ul>"},{"location":"getting-started/beginners-guide-qnap-docker/#add-an-lms-application-to-your-container-station","title":"Add an LMS application to your Container Station","text":"<ol> <li>Open \"Container Station\"</li> <li>Open the \"Applications\" tab</li> <li>Click \"Create\"</li> <li>Set an \"Application name\", i.e. \"lms\". It must be between 1 and 32 characters. Valid characters: letters (a-z), numbers (0-9), hyphen (-), underscore (_)</li> <li>Paste the Docker Compose configuration, adapting it to your needs :     <pre><code>version: '3.9'\nservices:\n    lms:\n        image: lmscommunity/lyrionmusicserver\n        volumes:\n            - /share/Container/app-data/lms-config/:/config:rw\n            - /share/Multimedia/Music/:/music:ro\n            - /share/Multimedia/Playlists/LMS/:/playlist:rw\n        ports:\n            - \"9000:9000\"\n            - \"9090:9090\"\n            - \"3483:3483/udp\"\n            - \"3483:3483/tcp\"\n</code></pre></li> <li>Click \"Validate\" to ensure your syntax is correct</li> <li>Click \"Create\"</li> <li>Once created you should see your new application in the list</li> <li>By default, Container Station exposes only one port per application in a NAT configuration. As we need multi ports, we'll switch to \"bridge mode\" :</li> <li>Click you application in the list (i.e. \"lms\")</li> <li>You'll see one container running (usually something like \"lms-lms-1\")</li> <li>Click the action cog wheel \"\u2699\ufe0f\" at the right of the container, and select \"Edit\"</li> <li>Click the \"Network\" tab</li> <li>Delete de default network using the bin icon \"\ud83d\uddd1\ufe0f\"</li> <li>Click \"Add\" to create a new network</li> <li>Choose \"Bridge\", select the wanted interface</li> <li>(Optional) Set a static IP address, by ticking \"Use a static IP address\" and filling Address, Mask, and Gateway</li> <li>Click \"Connect\" to add the Network</li> <li>Click \"Apply\" to update your container</li> <li>Take note of the IP address of your container</li> </ol>"},{"location":"getting-started/beginners-guide-qnap-docker/#open-lms","title":"Open LMS","text":"<ol> <li>Launch your web browser and type: <code>http://[ip address you noted previously]:9000</code>. Then, press Enter. The Lyrion Music Server web interface will open.</li> <li>Configure LMS as desired</li> </ol>"},{"location":"getting-started/beginners-guide-qnap-docker/#updating-the-docker-image","title":"Updating the Docker image","text":"<p>It is always advisable to regularly update your software, and with Container Station on QNAP it is made very easy.</p> <ol> <li>Open \"Container Station\"</li> <li>Go to \"Images\" and click on the cog wheel \"\u2699\ufe0f\" next to \"lmscommunity/lyrionmusicserver\".</li> <li>In the drop-down menu choose \"Pull\". It will download the latest version.</li> <li>Go to \"Applications\"</li> <li>Click the cog wheel next to the application (i.e. \"lms\"), and in the drop-down menu chose \"Recreate\"</li> <li>The application will be undeployed and recreated, but all configurations are kept as it is mounted in a bind volume</li> <li>\u26a0\ufe0f You'll need to set the network configuration again, see step 9 of \"Add an LMS application to your Container Station\" section</li> <li>Done, and enjoy all new features and fixes!</li> </ol>"},{"location":"getting-started/beginners-guide-synology-docker/","title":"Beginner's Docker Guide on Synology","text":"<p>Note</p> <p>In case you have any difficulties following this guide or have found some errors, please leave a note on the forums. Thanks!</p> <p>If you have a Synology NAS which can run Docker containers, you are in luck! Look here to check if your Synology NAS is able to run Docker containers.</p> <p>This guide uses our \"official\" Docker image (or from the Github Container Registry). Our examples assume you are pulling from Docker Hub. Source and the dockerfile of the image can be found here.</p>"},{"location":"getting-started/beginners-guide-synology-docker/#assumptions","title":"Assumptions","text":"<p>In this guide the following assumptions apply:</p> <ul> <li>If you already have the Synology LMS packaged installed, uninstall it first. This will free up the LMS network ports so the container can use them.</li> <li>This docker container runs as your user. Note, you can also create a specific user for running the container, in that case replace the UID/PUID with the correct identifier.</li> <li>Your music is stored in the shared folder <code>music</code>.</li> <li>(Optional) you have a shared folder called playlist where LMS can store playlists.</li> <li>Your user has read-only or read-write access to the music folder. If you also have a playlist folder, your user needs read-write access to this folder.</li> <li>The state of the docker image is saved in the folder <code>/docker/lyrionmusicserver</code>. The path can be anything, but it is advisable to restrict write access for other users to this folder.</li> </ul>"},{"location":"getting-started/beginners-guide-synology-docker/#preparation-if-migrating-from-previous-lms-package","title":"Preparation (if migrating from previous LMS package)","text":"<ul> <li>Do not forget to copy your favorites. You would find the file stored under <code>/volume1/@appstore/SqueezeCenter/prefs/favorites.opml</code>. Synology doesn't allow access to root directories using a normal browser. Use WinSCP instead to copy the file to a save place on your computer.</li> <li>Update your Synology Diskstation to the latest DSM. Note that in order to run \"Container Manager\" you need DMS 7.x.</li> </ul>"},{"location":"getting-started/beginners-guide-synology-docker/#find-out-the-uid-and-gid-of-your-user","title":"Find out the UID and GID of your user","text":"<p>The UID and GID values for the default user on Synlogy NAS are usually 1026 and 100. There is a very simple way to check the values as follows:</p> <ol> <li>Create a new Scheduled task as an User-defined script</li> <li>Name the script whatever you see fit</li> <li>Set it to be not repeating</li> <li>Set it to send run details to your email</li> <li> <p>Write the script:</p> <pre><code>id\n</code></pre> </li> <li> <p>Run it and soon enough, you will receive an email containing the UID and GID values.</p> </li> </ol>"},{"location":"getting-started/beginners-guide-synology-docker/#download-the-docker-image","title":"Download the Docker image","text":"<ol> <li>In the Synology GUI start up the app Container Manager.</li> <li>Go to Register.</li> <li>Search for <code>lyrionmusicserver</code> and download the <code>lmscommunity/lyrionmusicserver</code> image.</li> <li>Select the <code>latest</code> tag. The image will now download.</li> </ol>"},{"location":"getting-started/beginners-guide-synology-docker/#configure-the-docker-container","title":"Configure the Docker container","text":"<p>Now the correct image has been downloaded, it is time to start and configure the container.</p> <ol> <li>In the \"Container Manager\" app, go to \"Image\", select the <code>lmscommunity/lyrionmusicserver</code> image and press \"Run\".</li> <li>Choose a suitable name, e.g. <code>lyrionmusicserver</code>, and press \"Next\".</li> <li> <p>In the \"Port Settings\" section, add the following ports :</p> Local port Container port Protocol 9000 9000 tcp 9090 9090 tcp 3483 3483 tcp 3483 3483 udp </li> <li> <p>In the \"Volume Settings\" section, add the following volumes:</p> Local folder Container folder Mode /docker/lyrionmusicserver /config rw /music /music ro /playlist /playlist rw </li> <li> <p>Add the UID and GID from the step above, and the appropriate TZ (timezone) to the \"Enviroment\" section:</p> Variable Value PUID for example <code>1026</code> (see the UID/GID step above) PGID for example <code>100</code> (see the UID/GID step above) TZ for example <code>Europe/Zurich</code> EXTRA_ARGS <code>\"--advertiseaddr=192.168.0.100\"</code> (your Synology's IP address) <p>Note</p> <p>Please note that the <code>EXTRA_ARGS</code> entry is only required if you use the default <code>bridge</code> networking mode. If you decide to expose all of the container's services to the local network using the <code>host</code> mode, then defining the <code>advertiseaddr</code> is not required.</p> </li> <li> <p>Select \"Next\" and \"Done\". The container will automatically start.</p> </li> </ol>"},{"location":"getting-started/beginners-guide-synology-docker/#configure-lms","title":"Configure LMS","text":"<ol> <li>Launch your web browser (eg. Edge, Firefox) and type: <code>http://[hostname or ip address of your nas]:9000</code>. Then, press Enter. The Lyrion Music Server web interface will open.</li> <li>Choose the recommended plugins you want to install, click \"Next\".</li> <li>Browse to your music folder location (<code>/music</code>), highlight the directory, and click \"Next\".</li> <li>(Optional) browse to your playlists folder location (<code>/playlist</code>), highlight the directory, and click \"Next\".</li> <li>You'll see the Summary page for your Lyrion Music Server install. Click \"Finish\" to complete the installation.</li> <li>Use WinSCP to replace the <code>favorites.opml</code> in the newly created data folder with the old <code>favorites.opml</code> you saved at the start of your move. Congrats, you're done!</li> </ol>"},{"location":"getting-started/beginners-guide-synology-docker/#updating-the-docker-image","title":"Updating the Docker image","text":"<p>It is always advisable to regularly update your software, and with Docker on Synology it is made very easy.</p> <ol> <li>In the \"Container Manager\" app, go to \"Image\", and check if the <code>lmscommunity/lyrionmusicserver</code> image has any updates available.</li> <li>If there are updates, click \"Update available\" and press \"Update\" twice.</li> <li>Now the image is updated, refreshed and automatically restarted. If you followed the guide above all important data is saved and stored in Docker volumes, so this update will not overwrite anything in your configuration.</li> <li>Done, and enjoy all new features and fixes!</li> </ol> <p>Note</p> <p>If you use a tag other than <code>latest</code> then Synology does not automatically check for updates. To update go to \"Container\" and stop the LMS container. Then go to \"Registry\", search the <code>lmscommunity/lyrionmusicserver</code> image and select the tag you are using. Once the updated image had been downloaded, go to \"Container\", select the LMS container and press \"Reset\". You get a warning that all data in the container will be lost, but that does not matter since all your configuration is in Docker volumes so you can press \"Yes\"! When that's done you can start the container again.</p>"},{"location":"getting-started/beginners-guide-synology-docker/#migrating-from-lmscommunitylogitechmediaserver-to-lmscommunitylyrionmusicserver","title":"Migrating from <code>lmscommunity/logitechmediaserver</code> to <code>lmscommunity/lyrionmusicserver</code>","text":"<p>With the release of LMS9 the image <code>lmscommunity/logitechmediaserver</code> is deprecated and the image <code>lmscommunity/lyrionmusicserver</code> is used from now on. To migrate to the new image while retaining all settings, all you need to do is the following:</p> <ol> <li>In the \"Container Manager\" app, go to \"Container\" and click on your current LMS container. Then press \"Action\" and choose \"Export\". Choose \"Export container settings\" and \"Export to local computer\". Click on \"Export\".</li> <li>You now have downloaded a json file which contains all the configuration of your LMS container. Use your favorite text editor and open the json file.</li> <li> <p>Now find the following line in the json file:</p> <pre><code>\"image\" : \"lmscommunity/logitechmediaserver:stable\",\n</code></pre> <p>It could be that you used another tag, such as <code>dev</code>, in that case the line looks like this:</p> <pre><code>\"image\" : \"lmscommunity/logitechmediaserver:dev\",\n</code></pre> <p>Change this line to:</p> <pre><code>\"image\" : \"lmscommunity/lyrionmusicserver:stable\",\n</code></pre> <p>It is recommended to use the <code>stable</code> tag, more information about which tag is most suitable for you is described here. Please also make sure that all the quotation marks and the trailing comma stays intact.</p> </li> <li> <p>Next step is to download the new image. Go to \"Registry\" and download the <code>lmscommunity/lyrionmusicserver</code> image. Choose the same tag you have specified in the json file.</p> </li> <li>Before we recreate the container using the updated configuration we need to remove the current container (nothing important will be removed, as the data is stored in volumes and the container configuration is saved in the json file). Select the LMS container, choose \"Action\" &gt; \"Stop\", and subsequently \"Delete\".</li> <li>Last step is to recreate the container using the freshly downloaded image and the edited json file. First, go to the \"Container\" screen. If you do not have any containers running, press the \"Import\" button, else click \"Action\" and press \"Import\" &gt; \"From local device\". In the \"Import Container\" screen, browse to the just edited file and enter a suitable \"Container name\" (for instance <code>lyrionmusicserver</code>). Press \"Import\".</li> <li>Start the new container and you are all set!</li> </ol>"},{"location":"getting-started/beginners-guide-to-classical-music-on-lms/","title":"Beginner's Guide to classical music on LMS","text":"<p>LMS 9.0 offers comprehensive functionality aimed at the classical music listener. It allows you to browse and search for classical works in your music collection, and much more.</p>"},{"location":"getting-started/beginners-guide-to-classical-music-on-lms/#basic-tagging","title":"Basic Tagging","text":"<p>First of all, you need to tag your classical music for LMS.</p> <p>All you need to get started are for your classical tracks to contain tags for Composer and Work:</p> <ul> <li>Flac or ogg files: the tags you need to add are COMPOSER and WORK</li> <li>MP3 files: the tags you need to add are TCOM for Composer and TIT1 for Work. Your tagging software will almost certainly show these tags with the friendly names of Composer and Work. But note that there is some confusion in the MP3 world over the WORK tag. Your tagging software might create a tag other than TIT1 for what is called \"Work\" in its user interface. If this happens, LMS will not recognise the Work you have tagged. You can view the raw tag names through LMS by browsing to the track via the album and then going to More/More Info/View Tags (after importing to LMS, of course). If the Work does not appear in a TIT1 tag, look for an \"iTunes Compatible\" (or similar) setting in your tagging software.</li> </ul> <p>Note that WORK should not contain the composer name. LMS uses the Composer and Work together to identify works, so works called, for example, \"Symphony No. 9\" will be kept separate if the composer is different.</p> <p>You can also add a COMPOSERSORT tag to ensure that composer names are listed in surname-first sequence:</p> <ul> <li>Flac or ogg files: the tag name is COMPOSERSORT</li> <li>MP3 files: the tag name is TSOC (again, tagging software will hopefully give this a friendly name of Composer Sort)</li> </ul>"},{"location":"getting-started/beginners-guide-to-classical-music-on-lms/#further-tagging-suggestions","title":"Further Tagging Suggestions","text":"<p>The LMS implementation for classical works will work best with other tags set up like this:</p> <ul> <li>Title can be either the movement name only, eg \"I. Allegro\" or include the work name, eg  \"Symphony No. 1: I. Allegro\". Your choice. The movement name alone is all that is needed for LMS.</li> <li>Artist should not contain the composer's name. It should be set to either the soloist or soloists (eg \"Martha Argerich\"), or the Ensemble name (eg \"Schubert Quartet\"). If neither of these apply, for example a symphony, put in the Orchestra name.</li> <li>Conductor should contain the name of the conductor, if any.</li> <li>Band should contain the name of the orchestra, if any (yes, this might be a repeat of what you've got in Artist, but that's fine, and LMS really does want at least one Artist for a track).</li> </ul> <p>Note: You may need to compromise on this tagging scheme if your music tags need to make sense on clients/players/servers other than LMS. That's fine, but it may lead to some duplication in LMS library search results.</p>"},{"location":"getting-started/beginners-guide-to-classical-music-on-lms/#browsing-classical-music-in-lms","title":"Browsing classical music in LMS","text":"<p>Note</p> <p>The screenshots below are all using Material Skin, which is installed by default in new LMS 9.0 installations.</p> <p>If you don't have it, you can install the Material Skin plugin from the \"3rd Party Plugins\" section in Settings/Manage Plugins. You can then use Material Skin by appending \"/material\" to the LMS URL address in your browser, or set it as the default in Server/Interface.</p> <p>All the functionality exists also in Default Skin, but may look different and not so pretty!</p> <p>Note</p> <p>Some of these menus and displays may be slightly different depending on your LMS Server Settings. That's something that deserves its own page, but see the \"Support\" section below if something seems wrong or doesn't make sense to you.</p> <p>Once you have tagged your music and done a full rescan of your library in LMS, you can start exploring the new features.</p> <p>The first thing you will see is a new Works item in the \"My Music\" menu:</p> <p></p> <p>Selecting this will show you the Works sub-menu:</p> <p></p> <p>Select, for example, \"All Works\" which will show you all works, in composer groups. Notice that when you have multiple versions of a work on different albums (Beethoven's 5th, here), the image shows a \"stack\" of album covers. You can, at this point, add, for example, all your Beethoven works to your playlist (this option is available at every level as shown below):</p> <p></p> <p>Select a particular work. You will see here the albums which contain the selected work:</p> <p></p> <p>Select One of the albums. You will see the track listing, restricted to the Work you are browsing:</p> <p></p>"},{"location":"getting-started/beginners-guide-to-classical-music-on-lms/#searching","title":"Searching","text":"<p>You can use the live search facility on the Material Skin home page or the My Music list. Start typing search criteria, any combination of artist, composer, work, album, title, etc and results will appear for artists, releases, works and tracks.:</p> <p></p> <p>You can also use the advanced search to search on specific criteria: while the live search entry field is open, click the search icon again, fill in the form and then hit \"search\". Results will be shown categorised as before:</p> <p></p>"},{"location":"getting-started/beginners-guide-to-classical-music-on-lms/#managing-and-browsing-large-collections","title":"Managing and browsing large collections","text":"<p>to do</p>"},{"location":"getting-started/beginners-guide-to-classical-music-on-lms/#advanced-tagging-for-operas-ballets-etc","title":"Advanced tagging for operas, ballets, etc","text":"<p>to do</p>"},{"location":"getting-started/beginners-guide-to-classical-music-on-lms/#advanced-tagging-for-box-sets","title":"Advanced tagging for box sets","text":"<p>to do</p>"},{"location":"getting-started/beginners-guide-to-classical-music-on-lms/#support","title":"Support","text":"<p>In case you encounter some problems, have some questions or suggestions for improvements, please head over to the forums for assistance,  specifically this thread</p>"},{"location":"getting-started/changelog-lms8/","title":"LMS 8 changelog","text":""},{"location":"getting-started/changelog-lms8/#version-853","title":"Version 8.5.3","text":"<ul> <li> <p>New Features:</p> </li> <li> <p>Server Changes:</p> </li> <li> <p>Platform Support:</p> <ul> <li>Add Windows Start menu item to run LMS interactively when not using as a background service (64-bit version).</li> <li>On Debian based systems we need to add `squeezeboxuser` to `audio` group or plugins like LocalPlayer to work.</li> </ul> </li> <li> <p>Bug Fixes:</p> <ul> <li>Sometimes setting a music or playlist folder might lead the server into an infinite recursion.</li> <li>Fix running the scanner from outside LMS on Windows 64-bit.</li> <li>Drag'n'drop a track on the playlist pane sometimes wouldn't work under certain circumstances.</li> <li>Fix CUE sheets scanning which would result in seemingly random album order when ALBUMSORT was defined at the album level only.</li> <li>Fix issue loading the plugins page after an invalid URL got added.</li> <li>Fix \"serverstatus\" subscriptions for prefs changes.</li> </ul> </li> <li> <p>Other:</p> </li> </ul>"},{"location":"getting-started/changelog-lms8/#version-852-2024-05-26-88ba56f2c","title":"Version 8.5.2 - 2024-05-26 (88ba56f2c)","text":"<ul> <li> <p>Server Changes:</p> <ul> <li>Fall back to \"latest\" firmware folder if no server version specific files can be found.</li> <li>Improve Analytics reporting to cover more player types.</li> </ul> </li> <li> <p>Platform Support:</p> <ul> <li>Improve macOS architecture detection</li> </ul> </li> <li> <p>Bug Fixes:</p> <ul> <li>#1056 - Fix playback of certain mp4 files (thanks philippe44!)</li> <li>#1047 - Fix sort collation when requesting artists</li> <li>#1083 - Fixes for playlist add via Release Type groups (thanks darrel-k!)</li> <li>Fix /music/current/cover artwork handler for certain cases where resizing would fail (eg. Podcasts)</li> <li>Fix RandomPlay when overriding a selected library view with \"all music\" (see when using Material skin)</li> <li>Use ORIGINALYEAR, ORIGINALDATE, or DATE to parse the year from Ogg files.</li> </ul> </li> </ul>"},{"location":"getting-started/changelog-lms8/#version-851-2024-04-15-3b46196aa","title":"Version 8.5.1 - 2024-04-15 (3b46196aa)","text":"<ul> <li> <p>New Features:</p> <ul> <li>Add plugin to report data about your LMS installation - see forum discussion.</li> </ul> </li> <li> <p>Server Changes:</p> <ul> <li>Add links to the settings of the AudioAddict based services.</li> <li>Add support for \"DELETE\" HTTP verb to SimpleAsyncHTTP.</li> </ul> </li> <li> <p>Bug Fixes:</p> <ul> <li>Fix definition of track-level favorites' artwork.</li> <li>Correctly prefix settings links from Plugins page with the web root.</li> <li>#1020 - Add icon to favorites in Default web UI et al. (thanks philippe44 &amp;&amp; darrell-k)</li> <li>#1029 - Fix incorrect HTTP skipping (thanks philippe44 &amp;&amp; bpa!)</li> <li>#1045 - \"shufflemode\" is missing from \"alarms\" query (thanks @CDrummond!)</li> </ul> </li> </ul>"},{"location":"getting-started/changelog-lms8/#version-850-2024-03-14-8762186a4","title":"Version 8.5.0 - 2024-03-14 (8762186a4)","text":"<ul> <li> <p>Upstream fixes from Logitech Media Server 8.4.x</p> </li> <li> <p>Server Changes:</p> <ul> <li>Remove all dependency on MySqueezebox.com.</li> <li>Remove warning about \"incompatible\" Radio firmware version 7.*.</li> <li>#1003 - Add alarm information to player \"status\" query.</li> </ul> </li> <li> <p>Bug Fixes:</p> <ul> <li>#998 - Fix Sounds &amp; Effects playback when password protection is enabled.</li> <li>#1007 - Fix track favorite links in album listings (thanks darrell-k!).</li> </ul> </li> </ul>"},{"location":"getting-started/changelog-lms8/#version-841","title":"Version 8.4.1","text":"<ul> <li> <p>Server Changes:</p> <ul> <li>Improve Release Type readout in Ogg and WMA files.</li> </ul> </li> <li> <p>Bug Fixes:</p> <ul> <li>Don't fail http caching due to extended characters in the URL.</li> <li>Playing all items from a genre might fail under certain circumstances.</li> <li>Use valid sorting arguments if sort order \"albums\" is requested when queuing up items.</li> <li>Fix Last.fm scrobbling issue with some streaming service tracks.</li> </ul> </li> </ul>"},{"location":"getting-started/changelog-lms8/#version-840-2024-02-08-e225575dc","title":"Version 8.4.0 - 2024-02-08 (e225575dc)","text":"<ul> <li> <p>Upstream fixes from Logitech Media Server 8.3.x</p> </li> <li> <p>New Features:</p> <ul> <li>#879 - Add support for Release Types (see eg. on MusicBrainz).</li> <li>New \"Advanced Tag View\" plugin allows you to show more information in the Track Info menu, without the need to drill down to \"View Tags\"</li> <li>Allow editing of a favourite's icon.</li> <li>Add plugins for ClassicalRadio.com, DI.fm, JazzRadio.com, RadioTunes.com, RockRadio.com, ZenRadio.com.</li> <li>Add an optional artist albums view which groups albums by release type and contribution. (thanks darrell-k!)</li> <li>Add an option to import playlists from online music services.</li> <li>#987 - Add OggFlac support (thanks philippe44!)</li> </ul> </li> <li> <p>Server Changes:</p> <ul> <li>Improve integration of the external image resizing helper daemon.</li> <li>Improve built-in imageproxy: don't proxy image if original size is requested, re-direct instead; add support for custom headers when using external image proxy.</li> <li>Updated Dutch translation - thanks blackfiction!</li> <li>Updated French translation - thanks thanks Frank-Berry &amp; philippe317!</li> <li>Improve rendering of links in the web UI menus (comments, file download, etc.)</li> <li>Sort tracks in \"title\" sort order by artist and album, too, if they're part of the result set.</li> <li>Add option to check for updates every hour.</li> <li>Optionally don't remove online duplicates from library views.</li> <li>#846 - Improve display of multiline lyrics and comments in the web UI (thanks mw9!)</li> <li>Move persist.db out of the cache folder - it's music data which can't be restored from the music files.</li> <li>Log warning if the server's time seems to be off (only if MySqueezebox integration is enabled).</li> <li>Re-implement Sounds &amp; Effects plugin to not depend on MySqueezebox for the navigation and content selection.</li> <li>Report actual replay gain value for the currently playing track in \"status\" query.</li> <li>Add \"Q\" tag to songinfo, status queries etc. to return lossless flag for tracks (thanks AF-1!).</li> <li>#862 - Make lyrics on Default skin songinfo page collapsible (thanks AF-1!)</li> <li>#868 - Populate the release year ('year') attribute for remote tracks in the player queue (thanks SamInPgh!)</li> <li>#956 - Add raw AAC (ADTS) file support (thanks philippe44!)</li> <li>#964/ #985 - Handle case where user moves/adds/removes tracks in a playlist while the next track is already fully streamed (thanks philippe44!)</li> <li>#986 - Add a 'V' query that will return the maximum seek point in seconds within the current track duration for a 'live' radio stream (thanks expectingtofly &amp; philippe44!)</li> <li>Fix Napster playback on community firmware players</li> </ul> </li> <li> <p>Platform Support:</p> <ul> <li>Tweak Apple OS Architecture discovery: use the \"arm64\" string rather than the CPU's name (eg. \"Apple M1\")</li> <li>Add Perl 5.38 support for Linux x86_64.</li> <li>Add experimental support for Windows 64-bit - requires installation of Strawberry Perl 5.32!</li> <li>Update Windows installer to use latest InnoSetup 6 - dropping support for Windows XP, 2003 Server, and Windows Home Server.</li> </ul> </li> <li> <p>Bug Fixes:</p> <ul> <li>#212 - Unicode sorting for Browse Music Folder broken (thanks kimmot!)</li> <li>#622 - __requestRE should only match words provided to Slim::Control::Request::subscribe. (thanks earlchew!)</li> <li>#799 - Update IO::String to latest, fixing some odd Perl version check.</li> <li>#829 - Don't override a content type set by a page handler.</li> <li>#905 - Browsing in to playlists is extremely slow.</li> <li>#911 - Don't shut down the server on \"restartserver\" when we actually can't restart it.</li> <li>#939 - Player can't be switched from MySqueezebox.com to LMS</li> <li>#962 - Fix album_contributor updates in New &amp; Changed scan (thanks darrell!)</li> <li>#979 - New and changed contributor scanning improvements (thanks darrell!)</li> <li>Respect a contributor's Musicbrainz ID to separate artists of the same name.</li> <li>#969 - Add utf-8 guess decoding on Ogg metadata - thanks philippe44!</li> <li>Try harder to avoid duplicate (but empty) album entries on singles.</li> <li>Clear the Various Artists ID when a scan has finished.</li> <li>Don't remove online libraries from library views unless there really is a local copy of the same album.</li> <li>Fix Deezer SmartRadio track duration calculation.</li> <li>Allow pausing Deezer Flow.</li> <li>Fix resizing with a defined background color.</li> </ul> </li> <li> <p>Other:</p> <ul> <li>Simplify plugin and server update repository handling.</li> </ul> </li> </ul>"},{"location":"getting-started/changelog-lms8/#version-832","title":"Version 8.3.2","text":"<ul> <li> <p>Platform Support:</p> <ul> <li>#891 - Add Perl 5.36 support for Linux aarch64, armv7.</li> </ul> </li> <li> <p>Bug Fixes:</p> <ul> <li>#874 - Fix shuffling when starting off with an empty playlist (thanks robho!)</li> <li>#918 - Fix browsing down to album favorites etc.</li> <li>Add CPAN/auto/5.14 to lib search path for Windows builds to include Font::FreeType.</li> <li>Fix another absolute path to a stylesheet in the Default skin.</li> <li>Fix an issue where registering a pre-cache resolution would cause a subsequent LMS start to fail.</li> </ul> </li> </ul>"},{"location":"getting-started/changelog-lms8/#version-831-2023-02-17-026019bb7","title":"Version 8.3.1 - 2023-02-17 (026019bb7)","text":"<ul> <li> <p>Server Changes:</p> <ul> <li>Make log viewer template (log.html) skinnable by including skin.css.</li> </ul> </li> <li> <p>Platform Support:</p> <ul> <li>Update Audio::Scan to 1.06 for certain platforms (thanks ralphy, robho, slartibartfast!)</li> <li>#826 - Add Perl 5.36 support for Linux x86_64.</li> <li>Add Perl 5.34 support for Linux aarch64.</li> <li>Add signed version of our custom Perl build for macOS.</li> </ul> </li> <li> <p>Bug Fixes:</p> <ul> <li>#827 - Fix installation of plugin updates - honour user's choice (thanks mw9!)</li> <li>Don't use our custom Perl build on macOS 10.x - these versions come with a still working Perl 5.18.</li> <li>#834 - Fix no-transcoding playback of m4a audio (thanks philippe44!)</li> <li>#835 - Improve Alarm reliability - prevent accidental/random alarm stops.</li> <li>#843 - HTTPSocks.pm - Binary OR used by mistake - Logical OR needed (thanks mw9!).</li> <li>Remove support for \"deflate\" encoding type in SimpleHTTP requests: it must have been broken for over a decade!</li> <li>#852 - No result return while using Chinese Keyword in Fulltext Search.</li> <li>#857 - Fix changing MySB credentials using the \"setsncredentials\" command.</li> </ul> </li> </ul>"},{"location":"getting-started/changelog-lms8/#version-830-2022-11-04-4e15dbdff","title":"Version 8.3.0 - 2022-11-04 (4e15dbdff)","text":"<ul> <li> <p>Upstream fixes from Logitech Media Server 8.2.x</p> </li> <li> <p>New Features:</p> <ul> <li>Add support for macOS 13 Ventura</li> </ul> </li> <li> <p>Server Changes:</p> <ul> <li>Remove support for media types other than audio (video, pictures). Let's make \"M\" music again.</li> <li>#651 - Updated French translation - thanks Frank-Berry!</li> <li>Added British English translations - thanks expectingtofly!</li> <li>Updated Czech translation - thanks mipa87!</li> <li>Updated Dutch translation - thanks blackfiction!</li> <li>Add support for TIDAL replay gain.</li> <li>Dramatically improve Fulltext Search indexing for large playlists (thousands of tracks).</li> <li>Improve security of LMS &lt;-&gt; mysqueezebox.com communication: don't store credentials, but only a session token.</li> <li>Clean up legacy JavaScript support: update PrototypeJS and Scriptaculous to their latest builds, remove some legacy code.</li> <li>#678 - Fix up character encoding issues in Web UI Scanner progress reporting and Web UI log display (thanks mw9!)</li> <li>#708 - Update to MP3, FLAC, Ogg and WMA Formats to use BPM tags - thanks kwarklabs!</li> <li>#751 - Shuffle tracks added with \"playlist loadtracks\" for a given year (thanks philchillbill!)</li> <li>#758 - Allow selection of regional language (eg. ZH_CH or EN_GB) through JSONRPC (thanks expectingtofly!)</li> <li>#785 - Improve adding albums as favorites: don't rely on the album title alone, but use the artist to identify the album, too.</li> <li>#817 - Fix JavaScript integration in settings pages for Classic/Light (and thus Material) skins.</li> <li>Remove more legacy plugins: Amazon, MP3Tunes, Orange, YALP</li> </ul> </li> <li> <p>Platform Support:</p> <ul> <li>#673 - Add aarch64 Linux and 64-bit macOS binaries for Monkey's Audio (APE) files (thanks ralphy!)</li> <li>#684 - Updated Solaris Binaries for alac, flac, sox, faad, wvunpack, mac (thanks urknall!)</li> <li>#715 - Remove I18N::LangTags - it's outdated and has been part of core Perl since 5.12.</li> <li>Added native support for Apple Silicon</li> <li>Update Audio::Scan to 1.05 for certain platforms (thanks ralphy, slartibartfast!)</li> <li>#773 - Update flac to 1.3.4 (macOS, Linux i386, x86_64, armhf, aarch64)</li> <li>Added custom Perl 5.34 build for macOS 10.15+, in preparation for Apple's removal of Perl from macOS</li> <li>Remove support for the embedded MySQL server. We've been using SQLite for about a decade.</li> <li>Remove support for PowerPC and i386 on macOS.</li> <li>#810 - Remove the 'deprecate' pragma vom CGI::Util to improve compatibility with newer Perl versions.</li> </ul> </li> <li> <p>Bug Fixes:</p> <ul> <li>Allow seeking in mp4 files with samplerates &gt; 65535 (32 bits) on some platforms (thanks philippe44 &amp; ralphy)</li> <li>Improve Deezer metadata lookup when adding albums/playlists through the CLI.</li> <li>(Audio::Scan) #9 - For some WavPack DSD file the song_length_ms is incorrect (thanks aeeq &amp; ralphy!)</li> <li>(Audio::Scan) #12 - ID3: Fix v2.4 extended header handling (thanks mw9 &amp; ralphy!)</li> <li>#406 - Crossfading fails with very short tracks</li> <li>#410 - Rescan button for individual music folders does not work in Classic (and hence Material) skin.</li> <li>#473 - Broken playback functionality in Album/More</li> <li>#535 - some CLI commands duplicate comment tag info</li> <li>#547 - duplicate albums after adding tracks while renaming album</li> <li>#668 - Podcasts: Pre-caching image and more-info data can bring the server to a crawl #668 (thanks mw9!)</li> <li>Fix image transformation if a cover requested using /current/cover is pointing to a local file.</li> <li>#699 - Improve resume behaviour (thanks philippe44, maniac103 &amp; mw9</li> <li>#700/ #718 - High CPU load during playback of certain radio streams (thanks philippe44!)</li> <li>#704 - changed artist names remain in database after quick rescan</li> <li>#705 - changing upper and lower case in file name results in double entries</li> <li>#746 - Windows 11: PreventStandby doesn't prevent standby any more</li> <li>#749 - fix mp4 streams where audio offset comes from STCO (thanks philippe44 &amp;&amp; bpa!)</li> <li>#754 - improve reliability of \"what's new\" podcast search (thanks philippe44!)</li> <li>#767 - fix compatibility with standards compliant cometd libraries (thanks lynniemagoo!)</li> <li>#95 - update faad helper binaries to fix a crash when the decoder call fails (thanks ralphy!)</li> <li>#777 - When syncing with disconnected player through CLI, random player is synced</li> <li>#802 - Log is flodded with callback warnings \"Can't call method \"display\" on an undefined value\"</li> <li>Prevent a server crash while re-building the fulltext search index with huge collections.</li> <li>Don't show online only artists when a virtual library view tells us to do so.</li> <li>Fix IO::Socket::SSL initialization in the scanner's sync http lookup code.</li> <li>#797 - Fix Power off/Power on behaviour - Player would resume playback of stale track when reconnecting, although nothing to be resumed.</li> </ul> </li> </ul>"},{"location":"getting-started/changelog-lms8/#version-821","title":"Version 8.2.1","text":"<ul> <li> <p>Server Changes:</p> </li> <li> <p>Platform Support:</p> <ul> <li>Added Perl 5.34 modules for Linux x86_64</li> </ul> </li> <li> <p>Bug Fixes:</p> <ul> <li>#646 - Fix streaming compatibility with SliMP3 (thanks philippe44!).</li> <li>#647 - Fix podcast \"Play from last position\" and skip back trackinfo item (thanks mw9 and philippe44!).</li> <li>#656 - Correct start time for streams with range offset (thanks philippe44!).</li> <li>Fix resizing images with a dash in the name.</li> <li>Define $::cachedir in the scanner, too, as many parts of the code rely on it.</li> <li>#760 - Fix various XSS possibilities in settings pages etc.</li> </ul> </li> </ul>"},{"location":"getting-started/changelog-lms8/#version-820-2021-08-03-1ec16032b","title":"Version 8.2.0 - 2021-08-03 (1ec16032b)","text":"<ul> <li> <p>Upstream fixes from Logitech Media Server 8.1.x</p> </li> <li> <p>New Features:</p> <ul> <li>Try to group online artists with local artists by ignoring slightly different spelling (eg. \"The Beatles\" vs. \"Beatles\", \"Amy Macdonald\" vs. \"Amy MacDonald\").</li> <li>#510 - Add (optional) \"balanced\" track shuffling method, which is less random, but hopefully more pleasing to the listener.</li> <li>#537 - Add audio option to combine channels to build a mono signal (whether player is synchronized or not).</li> <li>#538 - Add Balance setting for players which support it (thanks philippe44!).</li> <li>#621 - Add Search feature to the Podcasts plugin (thanks philippe44!).</li> <li>#630 - Add parsing of remote OPML list.</li> <li>#627 - Allow explodePlaylist to return an OPML list, not just an array or urls.</li> <li>Enable basic track statistics (play count, last played, ratings) for online tracks imported into the library.</li> <li>#581, #591 - Create new player protocol to buffer http streams to disk or re-establish dropped connections to improve reliability (thanks philippe44!).</li> </ul> </li> <li> <p>Server Changes:</p> <ul> <li>When an online scan doesn't return any track, but previously had some, do not remove tracks from library. The empty new list is likely due to a scan failure.</li> <li>Try to improve backwards compatibility with eg. Erland's plugins, which sometimes struggle with the remote tracks.</li> <li>#411 - Transcoder conversion rules: Support resampling for Ogg/Flac streams (thanks bpa/mw9!)</li> <li>#598 - Shuffle tracks added with \"playlist loadtracks\" and certain search filters (thanks philchillbill!)</li> <li>Added hook for 3rd party plugins to tell DSTM not to kick in.</li> </ul> </li> <li> <p>Platform Support:</p> <ul> <li>#18 - Add a systemd service file for Debian based systems (thanks mw9 &amp; tomscytale).</li> <li>#22 - Add systemd service configuration for RPM based systems (thanks JohanSaaw!)</li> <li>#25 - Add weak dependency on perl IO::Socket:SSL in RPM (thanks JohanSaaw!)</li> <li>#526 - Add Perl 5.32 and 5.30 support for Linux aarch64 platform. (thanks clivem!)</li> <li>Remove Font::FreeType from Linux distributions. It's easy enough to install it using the system's package manager, and it would conflict on system where we don't provide the binary.</li> </ul> </li> <li> <p>Bug Fixes:</p> <ul> <li>#554 - Long current playlist disappears from UI during wipe and rescan.</li> <li>#601 - \"icon\" for URL=\"file://...\" entries does not work in favorites.ompl.</li> <li>#629 - Set SO_KEEPALIVE for cli socket so they auto-close when peer disappears.</li> <li>#632 - Keep shall in foreground when startTime is required and bitrate is missing.</li> <li>#617 - Handle volatile redirected url, retry from original one if failed after resume.</li> <li>#612 - Ask PH if _currentHandler shall be rewritten (HTTP-&gt;HTTPS upgrade).</li> </ul> </li> <li> <p>Other:</p> <ul> <li>#528 - On Unix-like platforms, we now ensure that plugins are installed in such a way that none of their files are writable by users other than the user running LMS, even if they\u02bcre stored that way in the plugin ZIP file.</li> <li>No longer include the firmware images for ip3k based players (Classic, Boom, Receiver, Transporter) with the installation packages. Logitech Media Server can download them when needed. But after about a decade without updates it's unlikely anybody would still have to update anyway.</li> </ul> </li> </ul>"},{"location":"getting-started/changelog-lms8/#version-812","title":"Version 8.1.2","text":"<ul> <li> <p>Server Changes:</p> <ul> <li>#522 - add new --advertiseaddr startup parameter to tell LMS what user facing IP address to use (in case of NATed setups, like with load balancers or Kubernetes etc.) - thanks fuero!</li> <li>Don't sync favorites from mysqueezebox.com when prefs syncing is disabled.</li> </ul> </li> <li> <p>Bug Fixes:</p> <ul> <li>Don't poll the Deezer library if the user doesn't have a premium subscription.</li> <li>Open App Gallery item in new window/tab - fix some regexes where we'd only accept http instead of https.</li> <li>Make sure we get the mysqueezebox.com based app menu even for players which are not registered there.</li> <li>#508 - Don't include the port when using default ports in host header for http requests.</li> <li>#521 - Fix http redirection on HTTPS protocol handlers (thanks philippe44!)</li> <li>#523 - Fix http redirection when redirect URL is missing the protocol (thanks philippe44!)</li> <li>#531 - Player's library view setting and Random Mix preference conflict with each other.</li> <li>#536 - When an album list is filtered by contributor role, the contributor's name sometimes isn't shown with the album.</li> <li>#545 - Under certain circumstances 3rd party plugins could be hidden on non-Squeezeplay based players.</li> <li>#559 - Deleting favourite via CLI using URL deletes others (thanks CDrummond!)</li> <li>#585 - mp4 parser for trailing header must keep original request fields (thanks philippe44!)</li> <li>#593 - Handle redirect with processors (eg. mp4 =&gt; aac) (thanks philippe44!)</li> </ul> </li> </ul>"},{"location":"getting-started/changelog-lms8/#version-811-2021-01-14-dd356a423","title":"Version 8.1.1 - 2021-01-14 (dd356a423)","text":"<ul> <li> <p>Server Changes:</p> <ul> <li>#489 - Enable Deezer flac seeking for ip3k players.</li> <li>#490 - Enable \"Defeat Touch To Play\" for all players.</li> </ul> </li> <li> <p>Platform Support:</p> <ul> <li>Restore Perl 5.18 support in the x86_64 .deb file.</li> </ul> </li> <li> <p>Bug Fixes:</p> <ul> <li>Fix Ogg Opus on Windows.</li> <li>Fix advanced genre replacement in Online Music Library Integration plugin.</li> <li>#485 - HTTP range request is last byte not size.</li> <li>#486 - When using internal transcoding only, the container format must be set.</li> <li>#488 - When resampling FLAC, add targeted $RESAMPLE$,not only the source sample rate.</li> <li>#501 - Fix logging in Deezer and TIDAL importers.</li> <li>#506 - Fix Napster streaming.</li> </ul> </li> </ul>"},{"location":"getting-started/changelog-lms8/#version-810-2020-12-23-effae8494","title":"Version 8.1.0 - 2020-12-23 (effae8494)","text":"<ul> <li> <p>Upstream fixes from Logitech Media Server 8.0.x</p> </li> <li> <p>New Features:</p> <ul> <li>Deezer HiFI! Stream lossless music from Deezer if you have a Deezer HiFi subscription.</li> <li>Add support for lyrics stored in the UNSYNCEDLYRICS tag in FLAC files.</li> <li>Optionally allow installation of plugins which were targeted at Logitech Media Server 7.*.</li> </ul> </li> <li> <p>Server Changes:</p> <ul> <li>Improve transcoding framework to allow protocol handlers to force transcoding (eg. TIDAL)</li> <li>Increase the default maximum playlist length for systems with more memory.</li> </ul> </li> <li> <p>Platform Support:</p> <ul> <li>Improved compatibility with macOS 11 Big Sur and Apple Silicon (M1 CPU).</li> <li>Remove (buggy) support for Perl 5.8 - we broke compatibility already a while back.</li> <li>Remove support for ReadyNAS - we broke compatibility already a while back (using Perl 5.8).</li> </ul> </li> <li> <p>Bug Fixes:</p> <ul> <li>#475 - Socket leaks when pipeline is used.</li> </ul> </li> </ul>"},{"location":"getting-started/changelog-lms8/#version-801","title":"Version 8.0.1","text":"<ul> <li> <p>Bug Fixes:</p> <ul> <li>#437 - New Music doesn't respect the library_id parameter.</li> <li>#459 - Library items like artists (db:contributor.name=...) favorites don't return the URL in the CLI.</li> <li>#460 - Retrieving a genre by ID using the CLI is not possible.</li> <li>PR #474 - Ignore non-compliant CUE sheets (thanks oleg-kuh!)</li> <li>Make sure we only poll music services for changes in the library which we actually have configured.</li> <li>Fix album separation of multi disc sets from online services when grouping is disabled.</li> <li>Don't offer direct firmware download if players can't handle it lack of https support.</li> </ul> </li> </ul>"},{"location":"getting-started/changelog-lms8/#version-800-2020-11-20-e0eee9c29","title":"Version 8.0.0 - 2020-11-20 (e0eee9c29)","text":"<ul> <li> <p>Upstream fixes from Logitech Media Server 7.9.3</p> </li> <li> <p>New Features:</p> <ul> <li>Online music library integration: list your collection of albums vetted in your favorite streaming service as part of your \"My Music\" collection.</li> <li>Improved support for Audio Books: automatically create library views and browse modes dealing with Audio Books and Authors.</li> <li>Paste TIDAL or Deezer weblinks in to the Tune In field to play albums/playlists/tracks (thanks mavit!)</li> <li>Keep track of recently played podcasts (thanks philippe44!)</li> </ul> </li> <li> <p>Server Changes:</p> <ul> <li>PR #367 - Improved parsing of HTTP header allows for new features (eg. AAC transcoding) and fixes some issues with streaming remote files. Thanks a lot philippe44!</li> <li>PR #305 - use ORIGINALYEAR in FLAC files to override YEAR (thanks jcbodnar!)</li> <li>PR #267 - HTTPS certificates are now validated when LMS acts as a client. HTTPS connections to plugin repositories are no-longer retried over HTTP when they fail. The old insecure behaviour can optionally be re-enabled, although, instead, we recommend working out why HTTPS is broken in your environment and fixing that if possible.</li> <li>PR #308 - Update faad binaries to fix several CVE-2017 security issues (thanks ralphy!)</li> <li>PR #324 - Implement documented, but non-functional search in \"favorites\" query.</li> <li>PR #346 - Update Audio::Scan on Windows to 1.02 (thanks ralphy!)</li> <li>PR #355 - Improved metadata handling in the xPL plugin (thanks keynet!)</li> <li>PR #429 - Hide library folders from scanning with a sentinel file (thanks sciurius!)</li> <li>PR #434 - Support for multiple FILE commands in CUE sheets (thanks oleg-kuh!)</li> <li>PR #448 - Add support for TIDAL over HTTPS and seeking (thanks philippe44!)</li> <li>Improved Dutch translation (thanks blackfiction!)</li> <li>Read Conductor tag from m4a etc. files.</li> <li>Persist some web browser side preferences like artwork mode, expanded menus etc. on the server. Safari would regularly \"forget\" them.</li> <li>Improve cache purging to reduce startup time and the risk of locking up other initialization tasks.</li> <li>Updated LWP module and dependencies to improve compatibility with newer Perl versions.</li> <li>Support import of DSD in WavPack files (requires additional DSDPlay 3rd party plugin).</li> <li>Add 'wav wav' rule which keeps headers.</li> <li>Add 'aif pcm' rule and change 'aif aif' rule to keep header except for \"legacy\" SB.</li> <li>Add 'H' tag in convert.conf to strip wav/aiff headers.</li> </ul> </li> <li> <p>Platform Support:</p> <ul> <li>Logitech Media Server now is available as a Docker image lmscommunity/logitechmediaserver (thanks snoopy86, terual, pascalberger!).</li> <li>Added Perl 5.32 modules for Linux x86_64</li> </ul> </li> <li> <p>Bug Fixes:</p> <ul> <li>#277 - add new flac binaries to fix seeking within remote flac streams in some locales (thanks ralphy!).</li> <li>#313 - Advanced Search for albums returns emtpy \"Song Info ()\" link.</li> <li>#327 - \"playlist loadalbum\" command is case sensitive and otherwise fragile.</li> <li>#366 - Fix gapless PCM Playback on Squeezebox1 (thanks michaldie!).</li> <li>#388 - Fix sorting of index bar in the web UI.</li> <li>Always strip BOM from M3U files, not only if the first line is a comment.</li> <li>Support wav/aif remote streams (direct and proxied).</li> <li>Check that destination (not source) codec is supported in direct streaming.</li> <li>Pass all seed tracks, using one API call, to MusicIP mix when used for \"Dont Stop The Music\".</li> <li>Re-build Fulltext Search Index for modified playlists after they've been saved.</li> </ul> </li> <li> <p>Other:</p> <ul> <li>Updated translations: Swedish (thanks Johan!)</li> </ul> </li> </ul>"},{"location":"getting-started/changelog-lms9/","title":"LMS 9 changelog","text":""},{"location":"getting-started/changelog-lms9/#version-910","title":"Version 9.1.0","text":"<ul> <li> <p>Upstream fixes from Lyrion Music Server 9.0.x</p> </li> <li> <p>New Features:</p> <ul> <li>Optionally navigate playlists by folders, allowing you to organise your playlists hierarchically.</li> <li>Implement an artist portrait picture handler. This will read images from folders where you've stored them under the artist's name, or from the artist folder in a typical artist/album/track hierarchy.</li> <li>Add a plugin to try to fetch artwork for radio stations which don't provide track artwork.</li> <li>#1425 - Add playlist drag and drop support to the Classic skin (thanks @oreillymj)</li> <li>#1426 - add support for ListenBrainz to AudioScrobbler plugin (thanks @vysmaty &amp; AI)</li> <li>Allow GETting the JSONRPC.js handler with a \"request\" parameter to simplify access by limited clients.</li> <li>#1294 - Bring back list view in the Manage Plugins section. The view can be toggled between grid an list view.</li> <li>#1422 - Add new sort orders \"playcount\" and \"recentlyplayed\" to \"albums\" query.</li> <li>Provide a hook which would allow a plugin or other to register a method to display track artwork for radio stations which don't provide their own.</li> </ul> </li> <li> <p>Server Changes:</p> <ul> <li>Improve support for 3rd party player icons, add some for piCorePlayer, SqueezeAMP, WiiM players.</li> <li>Update downloader now validates the installers checksum.</li> <li>Updated French translation - thanks @Franck-Berry!</li> <li>Updated Chinese translation - thanks @xdsnet!</li> <li>Improve cache purging reliability to avoid unnecessary growth.</li> <li>Update the custom user agent string: pretending to be iTunes probably caused more problems than it solved.</li> <li>Enable log rotation on Docker based systeme.</li> <li>Don't re-encode lossy streams when bitrate limiting if original stream is of lower or equal bitrate already (thanks @ralphy!)</li> <li>Add prefs folder to search list for custom types/convert/strings files (macOS/Windows).</li> <li>#1216 - Reset playing position to first track once a playlist or album has ended (@ml-1)</li> <li>#1245 - Added a Simple WebSocket client capability for 3rd Party Plugins to support this protocol (@expectingtofly)</li> <li>#1356 - Use ORIGINALDATE tag with Flac (@jbylsma)</li> <li>#1363 - Allow item removal even if playlist has only 1 item (@mw9)</li> <li>#1364 - store/return playqueue entry context flag (\"addedFromWork\")</li> <li>#1377 - Provide new /time/tz endpoint for Squeezeplay to fetch the local timezone (@mw9)</li> <li>#1399 - Use artwork appropriate for a Work if multiple album covers</li> </ul> </li> <li> <p>Platform Support:</p> <ul> <li>Make piCorePlayer a first class citizan: add Slim::Utils::OS::pCP to support it</li> <li>Make Docker a first class citizan: add Slim::Utils::OS::Docker instead of a Custom.pm</li> <li>Remove Win32 legacy support files, code, control panels, build pipeline, etc.</li> <li>Remove legacy Mac installer from build pipeline.</li> <li>Remove code dealing with Perl &lt; 5.10.</li> <li>Remove support for older Perl versions from the RPM (thanks @mavit!) and DEB packages.</li> <li>Stop building i386 DEB package.</li> <li>Updated Audio::Scan to v1.11 on Linux Perl 5.36/5.40, and Windows - thanks @ralphy!</li> <li>Upgrade DBD::SQLite to v1.75 for Perl 5.40 (Linux x86_64, aarch64), 5.38 (Linux x86_64), 5.36 (Linux x86_64, aarch64, armv7), 5.34 (Linux x86_64, aarch64; macOS), 5.32 (Linux x86_64, aarch64, armv7).</li> <li>#73 - Add a note about setting the hostname in a Docker container (thanks @hartzell!)</li> <li>#86 - Add more tags to Docker images to better support automated updates (thanks @stavros-k!)</li> </ul> </li> <li> <p>Bug Fixes:</p> <ul> <li>The AudioScrobbler failed to report tracks from online music services when they were integrated with the local library.</li> <li>#1287 - fix method name for spdr protocol handler.</li> <li>#1359 - Update UPnP ConnectionManager.pm to add checks for Wav and Opus (@BoringName15).</li> <li>#1362 - Update UPnP AVTransport.pm to move LMS event registration (@BoringName15).</li> <li>#1367 - Update UPnP support to fix gapless playback (setNextAVTransport) (@BoringName15).</li> <li>#1414 - Make sure custom image proxy handlers are always called (fixes incompatibility with Radio Now Playing's SVG handler).</li> <li>#1442 - Avoid log flood when player discovery JSON is empty (@mikecappella).</li> <li>#1444 - Fix search using terms with quotes in the Default skin (@darrell-k).</li> <li>#1445 - Fix search result count (@darrell-k).</li> </ul> </li> <li> <p>Other:</p> <ul> <li>Remove more left-overs from removed picture/video scanning.</li> <li>Remove more left-overs from removed MySqueezebox integration.</li> <li>Remove support for MySQL. Existing configurations using it will log an error.</li> </ul> </li> </ul>"},{"location":"getting-started/changelog-lms9/#version-904","title":"Version 9.0.4","text":"<ul> <li> <p>New Features:</p> </li> <li> <p>Server Changes:</p> </li> <li> <p>Platform Support:</p> <ul> <li>#1441 - Install procps package Docker image in support of plugins which need the tools to manage their helper processes.</li> </ul> </li> <li> <p>Bug Fixes:</p> <ul> <li>#1280 - persists current song on last track (thanks @MrC!).</li> </ul> </li> <li> <p>Other:</p> </li> </ul>"},{"location":"getting-started/changelog-lms9/#version-903-2025-10-03-9977737c1","title":"Version 9.0.3 - 2025-10-03 (9977737c1)","text":"<ul> <li> <p>Server Changes:</p> <ul> <li>#1386 - Store the calculated replay gain in the song object when beginning playback (@SamInPgh)</li> </ul> </li> <li> <p>Platform Support:</p> <ul> <li>Add support for Perl 5.40 on aarch64/armv7 Linux.</li> <li>#1339 - Add ghcr.io as an alternative container registry in addition to Docker Hub.</li> <li>Download Strawberry Perl for Windows from our own download site. strawberryperl.com has been unstable recently.</li> </ul> </li> <li> <p>Bug Fixes:</p> <ul> <li>#1373 - Transcoding of some APE files does not work with LMS 9 - upgrade the mac binary to v10 (thanks @ralphy!).</li> <li>#1378 - Rescanning a track with MusicBrainz ID can lead to corrupted ID value in database.</li> <li>#1423 - Fix compatibility with Squeezer app (thanks @darrell-k).</li> <li>#1429 - Make sure work is removed from track if removed in tags (thanks @darrell-k).</li> </ul> </li> </ul>"},{"location":"getting-started/changelog-lms9/#version-902-2025-03-13-1470c9412","title":"Version 9.0.2 - 2025-03-13 (1470c9412)","text":"<ul> <li> <p>New Features:</p> <ul> <li>Add a few more alarm clock sounds to the Sounds &amp; Effects plugin.</li> </ul> </li> <li> <p>Platform Support:</p> <ul> <li>Improve Windows installer to give better feedback on service start failure.</li> <li>#85 - Change permissions of user running LMS in Docker. Use \"squeezeboxserver\" group instead of \"nogroup\" (thanks @osnieh!)</li> </ul> </li> <li> <p>Bug Fixes:</p> <ul> <li>Mitigate an issue with uppercase umlauts and other non-latin characters in the full text search on Windows.</li> <li>#1193 - Don't throw error when fulltext search is being used before the end of a scan.</li> <li>#1214 - If item in queue can't be played, StreamingController leaves player in a bad state, failing further playback.</li> <li>#1288 - Update Carp::Assert to latest to fix compatibility with recent Perl versions.</li> <li>#1303 - Fix an issue where browsing releases would sometimes create thousands of parameters (and more - thanks @darrell-k!).</li> <li>#1306 - Don't run the scanner before we're done with the setup wizard.</li> <li>#1307 - Fix scanner progress information in the web UI.</li> <li>#1309 - Limit works advanced search to discovered albums. (@darrell-k)</li> <li>#1314 - The server would seemingly hang when trying to connect to the Material skin as long as no work has been found.</li> <li>#1319 - Don't filter by release types if user pref is ignoreReleaseTypes (@darrell-k).</li> <li>#1320 - Scanner crashes on unexpected system folders.</li> <li>#1325 - Fix scanning multiple MusicBrainz IDs (@darrell-k).</li> <li>Improve compatibility with modern HTML/JS and more strict browsers (eg. Safari).</li> </ul> </li> <li> <p>Other:</p> <ul> <li>#1315 - Return contiguous/non-contiguous flag in statusQuery (thanks @darrell-k).</li> </ul> </li> </ul>"},{"location":"getting-started/changelog-lms9/#version-901-2025-01-09-e3effbe91","title":"Version 9.0.1 - 2025-01-09 (e3effbe91)","text":"<ul> <li> <p>New Features:</p> <ul> <li>#1267 - Provide easy installation of Date and Time screensaver for Classic/Boom/Transporter users.</li> </ul> </li> <li> <p>Server Changes:</p> <ul> <li>Analytics: only check a small, well defined list of pref changes to decide whether a disconnected player had been active recently.</li> <li>Initialize autoincrement start value for contributors table to prevent ID re-use on full wipe &amp; rescans.</li> <li>#1259 - Improve the way in which we initialize a \"track added\" timestamp. Use the file's timestamp on initial imports.</li> </ul> </li> <li> <p>Platform Support:</p> <ul> <li>Fix helper search path initialisation on older macOS using Perl 5.18.</li> <li>#74 - Speed up Perl installation during an initial installation on Windows.</li> <li>#75 - Make sure newly installed LMS on Windows is running before sending the user to the web page.</li> <li>#76 - Start/stop LMS on Mac when the menu bar item is started/stopped.</li> <li>#77 - Add instructions to the macOS DMG file. Improve overall user experience.</li> <li>#78 - Fix crypto library linking issues in the Docker image.</li> <li>#80 - Reset update status when updating fromt he macOS menu bar item.</li> <li>Have a newly installed LMS on Windows use \"Lyrion\" as the data path, rather than \"Squeezebox\".</li> </ul> </li> <li> <p>Bug Fixes:</p> <ul> <li>Only re-initialize menu settings for connected players - otherwise Analytics considers them \"active\" due to a prefs change.</li> <li>Fix display of final \"Scan done\" message in Material skin.</li> <li>Fix track count caching in \"titles\" query.</li> <li>#1235 - Need to utf8Decode album title for new &amp; changed (thanks @darrell-k!)</li> <li>#1237 - Fix create table syntax for MySQL (MariaDB) (thanks @JKDingwall!)</li> <li>#1238 - Merge multiple works per track into one single work (thanks @darrell-k!)</li> <li>#1240 - Add option to limit works scanning to classical genre(s) (thanks @darrell-k!)</li> <li>#1242 - Fix plugin download - must wait for the download to finish before restarting the server</li> <li>#1247 - Fix display of final \"Scan done\" message and \"Abort scan\" link in Material/Classic skins.</li> <li>#1250 - Radio stations wouldn't show album artwork any more.</li> <li>#1246 - Windows registry value \"DataPath\" is in the wrong place.</li> <li>#1273 - Remove grouping &amp; discsubtitle in new &amp; changed scan if tags were removed (thanks @darrell-k!)</li> </ul> </li> </ul>"},{"location":"getting-started/changelog-lms9/#introducing-lyrion-music-server-version-900-2024-11-29-2ed5e147e","title":"Introducing... Lyrion Music Server Version 9.0.0! - 2024-11-29 (2ed5e147e)","text":"<ul> <li> <p>Upstream fixes from Logitech Media Server 8.5.x</p> </li> <li> <p>New Features:</p> <ul> <li>New product name! Welcome Lyrion Music Server!</li> <li>New visuals - thanks @gobuleberbu &amp; @mikes!</li> <li>Default skin refresh (the old version is still available as \"Logic Teal\")</li> <li>Massive upgrade for (Classical) music lovers: add support for Works, Performances, Disc Subtitles, Roles. Thanks a ton @darrell-k!</li> <li>Improved first start setup: suggest a few plugins to install on initial startup.</li> <li>Add new \"Recently Changed\" browse mode to complement the \"New Music\" menu. The latter is no longer based on the file's timestamp, but on the time added to the collection, as stored in the persistant track table.</li> <li>#1095 - Link from online tracks and albums to local library (if possible).</li> <li>#1115 - Add option to show tracks from a given year, even if their album would be listed in a different year.</li> <li>#1132 - Allow user defined contributor roles (thanks @darrell-k!).</li> <li>#1228 - Allow user to define how many HTTP requests to follow.</li> </ul> </li> <li> <p>Server Changes:</p> <ul> <li>Added Hungarian translations - thanks @ambrits!</li> <li>Updated Czech translation - thanks @mipa87!</li> <li>Updated Danish translation - thanks @cfuttrup!</li> <li>Updated Dutch translation - thanks @terual!</li> <li>Updated French translation - thanks @Franck-Berry!</li> <li>Updated Portuguese translation - thanks @DuLac!</li> <li>Improved Plugin Manager: add categories, icons, and search.</li> <li>#1124 - Return 'Random Mix' state in player status message (thanks @CraigD!)</li> <li>#1144 - Remove unnecessary delay reporting volume changes (thanks @SamInPgh!)</li> </ul> </li> <li> <p>Platform Support:</p> <ul> <li>Replace the macOS Preference Pane with a menubar item (requires macOS 10.11 El Capitan).</li> <li>#64 - Upgrade Docker base image to Debian 12 (Bookworm) - thanks @mavit!</li> <li>#1198 - Add support for Perl 5.40 on x86_64 Linux.</li> <li>Much improved RPM packages to better integrate with system standards (thanks @JohanSaaw!)</li> <li>Update Windows 64-bit installer to be compatible with new Windows on ARM machines.</li> <li>Updated Audio::Scan to v1.09 on Windows 32-bit, v1.10 on Windows 64-bit and Linux Perl 5.36/5.38 - thanks @ralphy!</li> <li>Dropped support for Windows 32-bit and macOS &lt; 10.11.</li> </ul> </li> <li> <p>Bug Fixes:</p> <ul> <li>#1027 - Play count increase with in-track jumps (thanks @darrell-k!)</li> <li>#1116 - Fix album info track count when there are more than 50 tracks in an album (thanks @darrell-k!)</li> <li>#1138 - \"Add all songs\" from search not working (thanks @darrell-k!)</li> <li>#1146 - Restore partial Cometd support for CLI clients (thanks @sodface!)</li> <li>#1203 - Fix display of album roles in the playlist (thanks @darrell-k!)</li> <li>#1213 - Modify #CURRTRACK to first track when playlist finishes</li> <li>#1229 - Only allow audio tracks for RandomPlay (thanks @jbylsma!)</li> </ul> </li> <li> <p>Other:</p> <ul> <li>Move CLI documentation out of the server code to lyrion.org.</li> <li>Allow a caller (plugin) of Slim::Networking::SimpleAsyncHTTP to disable HTTPS certificate validation.</li> </ul> </li> </ul>"},{"location":"getting-started/lms-on-readynas/","title":"LMS on ReadyNAS","text":"<p>Important: These instructions assume familiarity with SSH, knowledge of how to copy files from your PC to your NAS, and awareness of the risks of logging in to your NAS as root and typing stuff at the command line.</p> <p>The procedures here work on my system (ReadyNAS Pro running OS 6.10.10, with LMS 9.1.0); there are no guarantees that they will work on yours.</p> <p>Update Audio::Scan to version 1.10</p> <p>(more topics to follow)</p>"},{"location":"getting-started/lms-on-readynas/#update-audioscan-to-version-110","title":"Update Audio::Scan to version 1.10","text":""},{"location":"getting-started/lms-on-readynas/#rationale","title":"Rationale","text":"<p>ReadyNAS OS 6.10.10 uses Perl version 5.20, and LMS includes a number of third-party Perl modules, built for nearly a dozen versions of Perl including 5.20.</p> <p>But LMS's early-version modules have not been updated along with the later ones. The Audio::Scan module, for example, is provided by LMS at version 1.10 (late 2024) for newer Perls, but only at version 0.99 (2017) for our old Perl.</p> <p>Version 1.10 has a number of improvements over 0.99, so we will upgrade to it.</p>"},{"location":"getting-started/lms-on-readynas/#instruction-summary","title":"Instruction Summary","text":"<p>To update the Audio::Scan module to 1.10:</p> <ul> <li>Copy the LMS third-party Perl code from the LMS Github account to your own Github account.</li> <li>Modify the build script to support your old 5.20 version of Perl, and then build the Audio::Scan module on Github's computers.</li> <li>Download the module to your PC, and then copy it to specially-named files on your NAS (specially-named so that they won't be overwritten by LMS's official files when you update LMS).</li> <li>Stop LMS, copy from the specially-named files to regularly-named files, then restart LMS. You'll also perform this last step any time you update LMS.</li> </ul>"},{"location":"getting-started/lms-on-readynas/#detailed-instructions","title":"Detailed Instructions","text":"<ol> <li>Make a free GitHub account. Log in to it.</li> <li>Go to the official LMS third-party repo: https://github.com/LMS-Community/slimserver/tree/public/9.1</li> <li>Click the Fork button in the upper-right to make a copy of the repo in your account. A page will appear with some options -- leave them alone and click Create Fork. You will be taken to your copy of the repo at https://github.com/USERNAME/slimserver-vendor.</li> <li>Click the CPAN folder to open it. Click the Docker subfolder to open it. Click the Dockerfile.debian file to view it.5. Click the pencil icon in the upper right to edit the file.</li> <li>Change line 2 from this: <pre><code>FROM debian:testing\n</code></pre> to this: <pre><code>FROM debian/eol:jessie\n</code></pre></li> <li>Click the Commit Changes button. A dialog box will pop up -- leave all the options alone and click Commit Changes.</li> <li>Find the Actions link at the top of the page and click it. A warning will appear. Click \"I understand my workflows, go ahead and enable them\".</li> <li>Click the \"Build Perl CPAN modules for Lyrion Music Server\" link at the left.</li> <li>Click the Run Workflow button at the right. A menu will drop down.</li> <li>In the \"Specific module you'd like to build\" option, type <pre><code>Audio::Scan\n</code></pre></li> <li>Click Run Workflow. In a few seconds the workflow will appear with a yellow \"In progress\" indicator. After a couple minutes, the indicator will become a green checkmark.</li> <li>Click the \"Build Perl CPAN modules for Lyrion Music Server\" link next to the green checkmark. A page showing the build artifacts will appear.</li> <li>At the bottom of the page, click the \"CPAN-debian\" link or the Download icon to the far right of it. A file, CPAN-debian.zip, will be downloaded to your PC.</li> <li>Unzip the file. Inside is a directory tree with a directory called 5.20 at the top.</li> <li>SSH into your NAS. In the /usr/share/squeezeboxserver/CPAN/arch/5.20 directory, type: <pre><code>mkdir Audio\n</code></pre></li> <li>Using whatever method works for you -- WinSCP, FTP, CIFS/Samba, USB flash drive, etc -- copy <code>CPAN-debian/5.20/x86_64-linux-gnu-thread-multi/Audio/Scan.pm</code> from your PC to <code>/usr/share/squeezeboxserver/CPAN/arch/5.20/Audio/Scan110.pm</code> on your NAS (note that the filename on the NAS is <code>Scan110.pm</code>, not <code>Scan.pm</code>).</li> <li>Use the same method to copy <code>CPAN-debian/5.20/x86_64-linux-gnu-thread-multi/auto/Audio/Scan/Scan.so</code> from your PC to <code>/usr/share/squeezeboxserver/CPAN/arch/5.20/x86_64-linux-thread-multi/auto/Audio/Scan/Scan110.so</code> on your NAS (note that the filename on the NAS is <code>Scan110.so</code>, not <code>Scan.so</code>).</li> <li>On the NAS, stop LMS, copy the <code>Scan110.pm</code> and <code>Scan110.so</code> files to <code>Scan.pm</code> and <code>Scan.so</code> files in the same directories, and then restart LMS: <pre><code>systemctl stop lyrionmusicserver\ncp /usr/share/squeezeboxserver/CPAN/arch/5.20/Audio/Scan110.pm /usr/share/squeezeboxserver/CPAN/arch/5.20/Audio/Scan.pm\ncp /usr/share/squeezeboxserver/CPAN/arch/5.20/x86_64-linux-thread-multi/auto/Audio/Scan/Scan110.so /usr/share/squeezeboxserver/CPAN/arch/5.20/x86_64-linux-thread-multi/auto/Audio/Scan/Scan.so\nsystemctl start lyrionmusicserver\n</code></pre></li> <li>Go to the Information page in LMS settings. It will say that Audio::Scan is version 1.10.</li> </ol> <p>Important: Every time you update LMS, you must perform step 19 afterward (LMS won't start otherwise).</p>"},{"location":"getting-started/lms-on-readynas/#undo","title":"Undo","text":"<p>To revert to the official Audio::Scan:</p> <ol> <li>Delete your new <code>Scan.pm</code> and <code>Scan.so</code> files: <pre><code>rm /usr/share/squeezeboxserver/CPAN/arch/5.20/Audio/Scan.pm\nrm /usr/share/squeezeboxserver/CPAN/arch/5.20/x86_64-linux-thread-multi/auto/Audio/Scan/Scan.so\n</code></pre></li> <li>Update LMS as usual.</li> </ol>"},{"location":"getting-started/mac-install/","title":"Getting started on macOS","text":""},{"location":"getting-started/mac-install/#installing-lyrion-music-server-for-the-first-time","title":"Installing Lyrion Music Server for the first time","text":"<p>If you have another version of Lyrion Music Server (or Logitech Media Server) installed already make sure the server is stopped before installing.</p> <p>After installation you will have a new app in your Mac's Applications folder called \"Lyrion Music Server\". When you run this, it will insert a menu into your menu bar right-hand side, from which you can start/stop the server. Note that launching the app does not automatically start the server. On this first running you may find various security requests from your Mac system</p> <p></p> <p>There is an option in the menu to start the server automatically (when the machine boots).</p> <p>Unlike many server applications, the Lyrion Music Server app is effectively independent of the server \u2013 starting the app does not start the server, or vice versa; and stopping the app does not stop the server, and vice versa.</p> <p>Note</p> <p>If you want to use external disks, you'll have to grant the <code>perl</code> executable \"full disk access\" permissions. You'd usually find it in <code>/Applications/Lyrion Music Server.prefPane/Contents/MacOS/perl</code>. See \"Security &amp; Privacy Preferences &gt; Privacy &gt; Full Disk Access\" in the Mac's preference pane.</p>"},{"location":"getting-started/mac-install/#updating-lyrion-music-server","title":"Updating Lyrion Music Server","text":"<p>Notification of an available update will appear in the server's control UI and in the app's menu. Selecting the app's menu item will mount the .dmg file containing the files and a window showing a brief summary of these instructions. The upgrade can only be completed if neither the server nor the app are running.</p> <p>The first step is to stop the LMS server \u2013 using the menu item in the LMS app. And then you must Quit the LMS app.</p> <p>At this point the new version can be copied into the Applications folder and once copied, it can be launched. Note that the LMS server will not launch automatically on this restart of the app \u2013 use the 'Start Service' menu item.</p>"},{"location":"getting-started/migrate-from-uesr-de/","title":"UE Smart Radio (UESR) nach Squeezebox umwandeln","text":"<p>Note</p> <p>Bitte beachten Sie, dass UE Smart Radios, die in eine Squeezebox umgewandelt wurden, zwingend Lyrion Music Server (LMS). Installieren Sie dieses Programm, bevor Sie mit der Migration fortfahren.</p> <p>Um den Prozess zu starten, schalten Sie das Ger\u00e4t ganz aus, und starten Sie dann neu.</p> <p>Nach dem Neustart des Radios sollte die neue Firmware heruntergeladen werden. Es folgt ein weiterer Neustart, um diese zu installieren und das Ger\u00e4t zur\u00fcckzusetzen.</p> <p> </p> <p>W\u00e4hlen Sie die bevorzugte Sprache, und folgen Sie den Anweisungen, um das Netzwerk gem\u00e4ss ihrer Umgebung zu konfigurieren.</p> <p></p> <p>Falls Sie gefragt werden, ob Sie ein Konto auf MySqueezebox.com erstellen wollen, so k\u00f6nnen Sie das \u00fcberspringen, indem Sie den \"Zur\u00fcck\" ( ) Knopf gedr\u00fcckt halten. Sie sollten dann im Hauptmen\u00fc die M\u00f6glichkeit haben, per \"Eigene Musik\" auf ihr LMS zuzugreifen.</p> <p>Falls Sie die Mitteilung \"Verbindungsproblem - Problem bei der Verbindung mit MySqueezebox.com\" erhalten, dann k\u00f6nnen nach \"Bibliothek umschalten\" runter scrollen und sich mit ihrem LMS verbinden.</p> <p></p>"},{"location":"getting-started/migrate-from-uesr/","title":"Migrate from UE Smart Radio (UESR)","text":"<p>(Deutsche Version)</p> <p>Note</p> <p>Please note that Smart Radios transitioned to Squeezebox Radios will require Lyrion Music Server. Install it before you continue the migration.</p> <p>To initiate the transition, power down the Radio, and restart it.</p> <p>After a restart the Radio should start downloading the new firmware, followed by another reboot and a factory reset:</p> <p> </p> <p>Choose your preferred language. Then follow the network setup according to your environment.</p> <p></p> <p>When asked to create an account on MySqueezebox.com, skip that step and continue without account by pressing and holding the \"Back\" ( ) button on your Radio. You should then get the main menu where you can select \"My Music\" to connect to your LMS.</p> <p>If you get an error \"Problem Connecting - There is a problem connecting to MySqueezebox.com\", you should be able to scroll down to \"Switch Library\", from where you can connect to your LMS.</p> <p></p>"},{"location":"getting-started/new-music-help-faq/","title":"New Music browsing changes in 9.0","text":"<p>Release 9.0 introduced changes to browsing your music by New Music added to your Lyrion music library and offers and additional new browse menu option for viewing music that was most Recently Updated. This guide is intended to provide clarification and further details about this change and answer some frequently asked questions.</p>"},{"location":"getting-started/new-music-help-faq/#whats-changed-in-90","title":"What's changed in 9.0","text":""},{"location":"getting-started/new-music-help-faq/#new-music-browsing","title":"New Music browsing","text":"<p>Selecting browse by New Music will now display a list of albums sorted by the actual date that the album was first scanned into your Lyrion library. Technically, it is sorting on the oldest date added from the list tracks for a given album as stored in your persist.db (located in your LMS Prefs directory). Since the persist.db survives a \"Clear Library and Rescan All\" it is able to maintain a correct history of when music was added to your LMS library based on the timestamp it was first scanned. If for some reason you start with a new persist.db, you will lose the history of when you music was added to Lyrion which is why you should consider this an important file to back up just like you maintain good backups of all of your music files.</p> <p>Note</p> <p>As of the latest 9.0.1 release, the first library scan for a new persist.db will populate the Date Added field for each track with the file modified timestamp. All subsequent scans will populate the Date Added with timestamp the file is being scanned. This helps new users or those who must start with a fresh persist.db to start out with a best guess at the correct sort for New Music based on file modified timestamps.</p> <p>In 9.0 you can also see the Date Added from persist.db in the UI from the context menu by selecting More &gt; More Info.  You will see both Date Added (from persist.db) and Date Modified (from the file modified timestamp as stored in library.db).</p>"},{"location":"getting-started/new-music-help-faq/#recently-update-albums-browsing","title":"Recently Update Albums browsing","text":"<p>There is an additional browsing option for Recently Updated Albums in 9.0 that will display a list of albums sorted by the file modified timestamp. This is a more accurate description for how the New Music browsing behaved prior to release 9.0. If you prefer to see a list of albums sorted by file modified date like the New Music was previous to 9.0, then you should use Recently Updated Albums browsing menu.</p> <p>You can add this menu for each player via Settings &gt; Player &gt; Additional Browse Modes.</p> <p>Note</p> <p>If you do not see Additional Browse Modes as an option then you need to install the Additional Browse Modes plugin via the Plugin Manager under Settings.</p> <p>This setting will apply for all of the UI skins other than Material and all 3rd party apps like iPeng, Squeezer, and Orange Squeeze.</p> <p>The Material UI has its own settings for displaying Browse Menus under My Music that will apply for all players being controlled by the Material UI regardless of the per player setting above.  You can update this setting by using the hamburger button in the top left to open the Navigation Drawer and selecting Interface Settings near the bottom. Scroll down and click the cog next to My Music.</p>"},{"location":"getting-started/new-music-help-faq/#frequently-asked-questions","title":"Frequently Asked Questions","text":""},{"location":"getting-started/new-music-help-faq/#why-was-the-change-made-when-new-music-was-working-well-for-me","title":"Why was the change made when New Music was working well for me?","text":"<p>New Music browsing has actually had a long history of complaints and confusion going back 20 years because unless you carefully managed your file modified dates, simple things like updating tags could move and old album back to the top of the New Music list.  There are plenty of forum posts with questions, confusion and some crazy or clever workarounds.</p> <p>Over time most users fell into one of two groups. The first group learned to accept or even actually liked that updates to tags would cause an album to move back to the top of the list.  The second group were more New Music purists who would carefully manage their file modified dates by using tagging software that supported an option for preserving file modified dates. But as a result, this meant that a \"Clear Library and Rescan All\" would have to be run after each change to tags and required careful manual management of backing up those changes too. Now some folks got even more clever with the workarounds by using tools that would update the modified dates (after preserving them) to add just a few seconds so they can Scan for Changes and use automated tools for backup of those changes.</p> <p>The changes in 9.0 were to correct this long-standing problem by finally having a New Music list that was sorted by when Music was added to your Lyrion library while still maintaining a browse option for those who like a list of Recently Updated Albums sorted by file modified date. The great news here is this eliminates the need for the New Music purist to manage all those workarounds.  But if you prefer the workaround methods that you are used to, you can still continue to do so and use the new Recently Updated Albums browse menu.</p>"},{"location":"getting-started/new-music-help-faq/#why-couldnt-you-just-leave-new-music-as-it-has-been-for-so-long-and-create-a-new-browse-menu-for-the-new-thing","title":"Why couldn't you just leave New Music as it has been for so long and create a new browse menu for the new thing?","text":"<p>Change is hard when you have become accustomed to something, but can you imagine how confusing it would be to explain this to a new user who did not have your history. New Music needs to be the name for a list Music sorted by when it was added to the library and Recently Updated is the best name that was decided upon for the list sorted by file modified date.</p>"},{"location":"getting-started/new-music-help-faq/#why-do-i-see-new-album-at-the-top-of-both-new-music-and-recently-updated-albums","title":"Why do I see New Album at the top of both New Music and Recently Updated Albums?","text":"<p>Technically speaking neither of these queries use a means to know if an album existed in the library prior to the date and timestamp they sort by:</p> <ul> <li> <p>New Music is a list of your albums sorted on the date added field in your persist.db which represents when you added the music to your LMS library.</p> </li> <li> <p>Recently Updated Albums is a list of your albums sorted on the file modified timestamp (as stored in library.db).</p> </li> </ul> <p>So that means the following are all true:</p> <ul> <li> <p>If you rip a new CD today and run scan for new and changed, that CD will be at the top of both the New Music and Recently Updated lists.</p> </li> <li> <p>If you modify the tags on an album that has already been scanned in to your library without preserving the modified timestamp, this album will sort to the top of your Recently Updated, but will not change positions on the New Music list after a scan.</p> </li> <li> <p>If you modify the tags on an album that has already been scanned in to your library and preserve the modified timestamp, this album will stay in the same position on both lists after a Clear &amp; Rescan All.</p> </li> </ul>"},{"location":"getting-started/new-music-help-faq/#how-do-i-fix-my-new-music-list-which-looks-completely-wrong","title":"How do I fix my New Music list which looks completely wrong?","text":"<p>You can choose to reset your New Music list to be based on File Modified dates for all of your existing music by starting over with a fresh persist.db. But please understand that this will be a one time reset for just your existing music. All subsequent additions to your music library will be sorted based on the timestamp they were first scanned into your Lytion library and any changes to file modified dates will not be reflected in the New Music list.</p> <p>Note</p> <p>Please be aware that starting with a fresh persist.db means you will lose play history stats (counts and last played date) and ratings. If you are using the Ratings Light plugin, ratings can be backed up and restored after you reset your persist.db. The same is true for the alternative play history stats if you use the Alternative Play Count plugin.</p> <p>Steps to reset your persisti.db (Did you read the Note above first?):</p> <ol> <li> <p>Stop your Lyrion Server.</p> </li> <li> <p>Backup your persist.db (persist.db from your Prefs directory) and library.db (library.db from your Cache directory). There may be 3 files for each. You will want to have those backups if you are not happy with the results of this process or did not read the note above.</p> </li> <li> <p>Delete persist.db from your Prefs directory and library.db from your Cache directory.</p> </li> <li> <p>Upgrade to the latest 9.0.1 if you are not on that release or later.</p> </li> <li> <p>Start Lyrion and it should begin a new scan (if not go ahead and initiate a Clear Library and Rescan All).</p> </li> </ol>"},{"location":"getting-started/new-music-help-faq/#why-is-my-new-music-list-in-reverse-alphabetical-order","title":"Why is my New Music list in reverse alphabetical order","text":"<p>You probably started with a fresh persist.db when you upgraded to 9.0. The initial release of 9.0 did not accommodate this situation and as a result you are seeing a list of albums based on the order they were scanned with your last album scanned at the top of the list.  As noted above a change was made in 9.0.1 to accommodate this by loading the file modified date as date added for the first scan of a fresh persist.db. You can follow the steps above for How do I fix my New Music List to upgrade to 9.0.1 and reset your persist.db.</p>"},{"location":"getting-started/new-music-help-faq/#why-do-i-see-an-old-album-that-has-been-in-my-library-for-years-suddenly-at-the-top-of-my-new-music-list","title":"Why do I see an old album that has been in my library for years suddenly at the top of my New Music list?","text":"<p>The most likely reasons are you renamed a filename, folder name, or reorganized your files by moving files or folders and the scanner did not recognize them as a matching record in your persist.db.  As a result, it created a new record. Lyrion uniquely identifies each file by a url made up of the complete folder structure and filename and as a backup the scanner will also match based on a MUSICBRAINZ_TRACKID tag. Although the scanner should handle a move of your music at the root level specified in your settings where you define Music Folders, it cannot always easily recognize changes to sub folders without MUSICBRAINZ_TRACKID tags.  In the future, it is recommended that you add MUSICBRAINZ_TRACKID tags prior to remanning or reorganizing your music files (see next question).  </p> <p>Note</p> <p>One user in the Forum was able to correct the situation of renaming an artist folder by switching it back and rerunning the scan.  I woudld reccomend giving this a try and then adding MUSICBRAINZ_TRACKID tags before making the change again, but you will need to scan and verify that the tags are in Lyrion before changing the file or folder name again.</p>"},{"location":"getting-started/new-music-help-faq/#do-i-have-to-add-musicbrainz-tags-to-all-of-my-music-to-ensure-the-new-music-list-will-work","title":"Do I have to add MUSICBRAINZ tags to all of my music to ensure the New Music list will work?","text":"<p>As a general rule, I would say that adding MUSICBRAINZ_TRACKID tags are a good idea and something you should consider for your music collection moving forward, but you do not have to add MUSCIBRAINZ tags to all of your existing music now unless you compulsively reorganize or rename sub folders constantly for some reason. Assuming these moves are occasional corrections, you could adopt a process of adding the MUSICBRAINZ_TRACKID tags prior to changing names or moving folders. You just need to remember to actually scan those tags into Lyrion and confirm they are there (More &gt; More Info &gt; View Tags) before making the move or renaming files and folders.</p>"},{"location":"players-and-controllers/","title":"Overview","text":""},{"location":"players-and-controllers/#squeezebox-hardware-discontinued","title":"Squeezebox Hardware (Discontinued)","text":"<p>Between 2001 and 2010 Logitech (and its predecessor Slim Devices) released a series of network music players. The lineup consisted of the Squeezebox Classic, an all-in-one Squeezebox Boom, the dual unit Squeezebox Duet, the audiophile grade Transporter, the small and optionally battery powered Squeezebox Radio, and the newest of the bunch, the Squeezebox Touch.</p> <p>Additionally, the Squeezebox Controller provides control of all your players via an attractive full color display. The Controller and Receiver were sold together as the Squeezebox Duet package.</p> <ul> <li>Hardware comparison</li> <li>Squeezebox Touch</li> <li>Squeezebox Radio</li> <li>Squeezebox Boom</li> <li>Squeezebox Duet<ul> <li>Squeezebox Controller</li> <li>Squeezebox Receiver</li> </ul> </li> <li>Transporter</li> <li>Squeezebox 3rd Generation</li> <li>Squeezebox2</li> <li>Squeezebox, SB1</li> <li>SLIMP3</li> </ul> <p>Though discontinued, Squeezebox hardware can often be found on eBay and other auction sites. Squeezebox Touch, if available, is an ideal LMS player having a touch screen, remote control, and both analog and S/PDIF (coaxial and optical) outputs supporting digital formats up to 24/96. With its optional \"Enhanced Digital Output\" add-in, the Touch can support USB output and 24/192 including DoP (DSD-over-PCM; see LMS \"DSDPlayer\" plugin).</p> <p>The Radio, Touch and Controller software (operating system and application) is available as source code and have been modified by \"the community\". Software from Logitech: Operating system - Application Community versions: Operating system  - Application</p>"},{"location":"players-and-controllers/#other-hardware","title":"Other Hardware","text":"<p>Several streamers and amps available from WiiM natively support LMS. Presently, this includes the WiiM Pro, Pro Plus, Ultra, and Amp.</p> <p>Other streaming hardware manufacturers that offer native support of LMS include AmpliPro, Antipodes, Eversolo, Holo Audio, Innuos, Sonore, SOtM and Str@mbo.</p> <p>Hardware streamers running the Android OS -- such as several available from FiiO -- can install one of the Squeezebox player apps listed below.</p> <p>Any Android or Apple mobile device (tablet, phone, mini-PC) can be made into an LMS player with the installation of a controller and/or player app. Some of these devices allow connection to an external DAC.</p> <p>Any laptop PC, desktop PC, or mini-PC running Windows, macOS, or linux can serve as both LMS player and server. Configured with internal or external storage, it can hold your music library while providing convenient file transfer access via remote desktop. These devices typically connect via USB to an external DAC or digital receiver. A \"fanless\" configuration -- such as several offered by MeLE -- is ideal if this device is to be placed in the listening room.</p> <p>With its \"UPnP/DLNA bridge\" plugin installed, LMS can play to any DLNA-compatible networked device.</p> <p>After 2010 the LMS community developed DIY hardware offerings:</p> <ul> <li>Squeezelite-ESP32</li> <li>SqueezeAMP - which is an implementation of Sqeezelite-ESP32</li> <li>Muse Radio - An ESP32-S3 radio made for Lyrion, resembling the Squeezebox Radio and running Squeezelite-ESP32</li> <li>Muse Luxe - An ESP32 speaker made for Lyrion, running Squeezelite-ESP32</li> </ul>"},{"location":"players-and-controllers/#software-based-players","title":"Software based players","text":"<ul> <li>Squeezelite</li> <li>SqueezePlay - Source   This is based on the player and user interface in Squeezebox Radio and Squeezebox Touch</li> <li>SoftSqueeze</li> </ul> <p>For mobile phones and tablets:</p> <ul> <li>iPeng (iOS - paid) - in-app purchase to also be a player</li> <li>SlimLibrary (iOS - paid) Announcement</li> <li>SB Player (Android - paid)</li> <li>SqueezePlayer (Android - paid)</li> <li>Squeezelite via Termux (Android)</li> <li>Squeeze Client (Android) With local playback.</li> </ul>"},{"location":"players-and-controllers/#specialist-operating-system-with-player-server","title":"Specialist operating system with player / server","text":"<ul> <li>piCorePlayer (Raspberry Pi)</li> </ul> <p>Using piCorePlayer as its operating system, a basic Raspberry Pi can be configured to act as a full-featured LMS player. Raspberry Pi can output via USB to an external DAC or power attached headphones. With the addition of an appropriate HAT board, the Raspberry Pi can add S/PDIF digital outputs or a small stereo amplifier.</p> <ul> <li>Daphile (x86/x64 architecture - PC)</li> </ul>"},{"location":"players-and-controllers/#software-based-controllers","title":"Software based controllers","text":"<ul> <li>Jivelite</li> <li>iPeng (iOS - paid) - in-app purchase to also be a player</li> <li>Material Skin and Android App</li> <li>Squeezer (Android)</li> <li>OpenSqueeze (Android)</li> <li>Squeeze Ctrl (Android - paid)</li> <li>Orange Squeeze (Android - paid)</li> <li>SqueezePad (iOS - paid)</li> </ul>"},{"location":"players-and-controllers/SLIMP3/","title":"SLIMP3","text":"<p>The SLIMP3, released in 2001, is the first generation network media player, produced by Slim Devices. It plays MP3, WMA, AAC, FLAC, WAV, OggVorbis, Shoutcast (and more using plugins), which are streamed over a network from Slim Devices' custom software, Squeezebox Server.</p> <p>Though getting harder to come by, these are beautiful units. If you come across one for sale on EBay, then buy it quick before anyone else notices! Newer versions of this device came with an actual SLIMP3 remote, as opposed to the old-school Sony remote. Slimp3uk.com (the UK outlet that no longer exists) also sold extra remotes and an 'upside-down' under shelf mounting perspex bezel which replaced the standard display and allows you to mount the unit under a shelf).</p> <p>The SLIMP3 was succeeded by the Squeezebox.</p>"},{"location":"players-and-controllers/SLIMP3/#see-also","title":"See also","text":"<ul> <li>SliMP3 Flyer</li> <li>SliMP3 Display Datasheet</li> </ul>"},{"location":"players-and-controllers/hardware-comparison/","title":"Hardware Comparison","text":"SLIMP3 Squeezebox Squeezebox2 Squeezebox v3/Squeezebox Classic Transporter Squeezebox Receiver Squeezebox Controller Squeezebox Boom Squeezebox Radio Squeezebox Touch Nickname SLIMP3 SB1 SB2 SB3 TP or TR SBR SBC SBB or Boom SB Radio or Radio SB Touch or Touch Released August 2001 November 2003 April 2005 November 2005 July 2006 March 2008 March 2008 August 2008 September 2009 April 2010 MSRP at Launch $249 $299 $299 $249 $1999 $149 ($399 with Controller as Duet) $299 ($399 with receiver as Duet) $299 $199 $299 Dimensions 8.5\"W x 2.5\"H x 2\"D 8.5\"W x 1.9\"H x 4.5\"D (216mm x 48mm x 117mm) Same as Squeezebox 7.6\"W x 3.7\"H x 3.1\"D (192mm x 93mm x 80mm) including stand 17\"W x 3\"H x 12.25\"D (433mm x 72mm x 311mm), optional rack mount kit L: 156mm x W: 106mm (w/o connectors); 112.5mm (w/connectors) x H: 29.25mm L: 156.2mm x W: 50.8mm x H: 18.8mm L: 79mm x W: 330mm x H: 127mm L: 90mm X W: 220mm X H: 130mm L: 80mm X W: 150mm X H: 100mm including stand Display Noritake 40x2 character VFD Original SB1: Noritake 40x2 character VFD, later upgraded as SBG: 280x16 pixels VFD, bitmapped graphics, multiple fonts, animation and images brightness control 320x32 pixel VFD, greyscale, bitmapped graphics, multiple fonts, animation, and images Same as Squeezebox2, except color is aqua-blue rather than green. (The display itself is green, but while Squeezebox2 uses a gray lens, the Squeezebox v3 lens is slightly purple, resulting in an aqua color.) Dual 320x32 displays, aqua color None 2.4\" color LCD, 16bpp, 240x320 portrait 160x32 pixel VFD, greyscale, bitmapped graphics, multiple fonts, animation, and images 2.4\" color LCD, 16bpp, 240x320 landscape 4.3\" color LCD capacitive touchscreen, 24bpp, 480x272 landscape CPU Microchip PIC16F877 microcontroller Ubicom IP2K series, 120 MHz Ubicom IP3K series, 250 MHz Same as Squeezebox2 IP3K at 325 MHz Same as Squeezebox2 Samsung S3C2412 200 MHz ARM926EJ Same as Squeezebox2 Freescale i.MX25 400 MHz ARM926EJ Freescale i.MX35 533 MHz ARM11 Ethernet Crystal CS8900A 10Mbps embedded Ethernet chip 10Mbps ethernet interface, RJ-45 twisted pair. Connects to any 10Mbps, 10/100, or 10/100/1000 network. 10/100 switched ethernet is recommended for PCM streaming Auto-detection of full and half-duplex modes. Automatic receive polarity correction. Maximum cable length: 100 meters (328 feet) True 100Mbps throughput; Shielded CAT5 RJ-45 connector; Connects to any 100Mbps or 10Mbps network; Auto-detects full duplex and half duplex modes; Automatic receive polarity correction; Maximum cable length: 100 meters (328 feet) Same as Squeezebox2 Same as Squeezebox2 Same as Squeezebox2 + Auto Uplink (Auto MDIX) None Same as Squeezebox2 + Auto Uplink (Auto MDIX) Same as Squeezebox2 + Auto Uplink (Auto MDIX) Same as Squeezebox2 + Auto Uplink (Auto MDIX) Wireless none 802.11b, external antenna; supports Shared-key WEP only (no WPA) 802.11g; supports WPA Personal, WPA2-AES and 64/128-bit WEP encryption; high speed PCI interface to radio module; bridging capability allows Ethernet devices to connect to the network through Squeezebox Wireless; internal and external antennas Same as Squeezebox2, except dual internal antennas rather than internal and external Same as Squeezebox2, except large dual external antennas Same as Squeezebox v3 802.11g with internal antenna Same as Squeezebox v3 Same as Squeezebox v3 Same as Squeezebox v3 Decoder Micronas MAS3507D Micronas MAS3539 Software-based MP3, FLAC, Ogg Vorbis, WMA (except WMA Lossless), AIFF, WAV Same as Squeezebox2 Same as Squeezebox2 but with faster CPU Same as Squeezebox2 Software-based decoders Same as Squeezebox2 Software-based decoders Software-based decoders DAC Crystal CS4334, 16-bit 44Khz Micronas MAS3539, 44.1 &amp; 48k Burr-Brown PCM1748E, 44.1 &amp; 48k Same as Squeezebox2 AKM4396, 44.1k, 48k &amp; 96k Wolfson\u00ae 24-bit WM8501,44.1kHz &amp; 48kHz Wolfson\u00ae WM8750 Texas Instruments TAS3204 Texas Instruments TLV320AIC3104 AKM4420, 44.1k, 48k &amp; 96k Buffer RAM 1Mb (8 seconds at 128Kbps) 1.8Mb (approx. 14 seconds at 128Kbps) 25Mb (approx. 200 seconds at 128Kbps) compresessed, plus 28Mb (10 seconds at 44.1 samples/sec) uncompressed Same as Squeezebox2 Same as Squeezebox2 Same as Squeezebox2 64MB Mobile SDRAM Same as Squeezebox2 64MB 16-bit bus DDR2 128MB 32-bit bus DDR2 ROM Rewritable flash program memory, EEPROM configuration memory Same Same Same Same Same 64MB NAND flash Same as Squeezebox2 128MB NAND flash 128MB NAND flash IR Standard 40Khz IR receiver Same Same, plus [Same as Squeezebox2 Same as Squeezebox2, dedicated IR in/out jacks None Built-in IR LED Standard 40Khz IR receiver Standard 40Khz IR receiver Same as Squeezebox2](IRBlasterIR-blasting]] through [GeekHole]%28GeekHole.md%29.md) IR Remote originally shipped with Sony RM-V201 universal remote user-programmed to JVC DVD command set; later shipped with 30 button IR Remote ? ? 30 button IR Remote Included 31 button IR Remote Included None (Advanced WiFi Controller included with Duet) Advanced WiFi Controller Basic 10 button IR Remote Included Optional 10 button IR Remote IR Remote Included IO Ports <ul><li>L+R RCA line-level analog output</li><li>10 Base-T Ethernet port?</li></ul> ? ? ? ? ? <ul><li>10/100Base-T Ethernet port</li><li>Line-in via 3.5 mm stereo jack</li><li>Headphone/Subwoofer out via 3.5 mm connector</li></ul> <ul><li>10/100Base-T Ethernet port</li><li>Line-in via 3.5 mm stereo jack</li><li>3.5 mm stereo headphone jack (side mounted)</li></ul> ? Wake on LAN (WoL) No No Player can wake LMS Same as Squeezebox2 Same as Squeezebox2 N/A Yes Yes Yes Yes Power supply 5V DC, 1600mA power supply, player uses 700ma (max) 5V DC, regulated Center positive, sleeve ground Connector: 2.1mm ID, 5.5mm OD, 11mm long Min supply rating: 1000mA. Switching power supply included. Input voltage range and plug style specific to shipping destination. Same as Squeezebox Squeezebox Classic: Same as Squeezebox2. Squeezebox 3: 5V DC, 3A, center positive connector: 2.5mm ID, 5.5mm OD, 11mm long Built-in super-linear power supplies, auto ranging 100-240VAC 9V DC, regulated, center positive, sleeve ground. Connector: 1.05mm ID, 3.5mm OD, 7mm long. Min supply rating: 550mA 1250mA Li-Ion battery, 2A switching power supply, wired charging station 12V DC, 2500mA power supply 18V DC, 1A, optional battery pack available 5V DC, 3A, center positive connector: 2.5mm ID, 5.5mm OD, 11mm long Protocols DHCP, ARP, IP, ICMP, UDP, Support for subnets/gateways (see documentation section on WANs), UDP-based SlimProto Same, plus TCP-based SlimProto and audio streaming Same, plus direct HTTP audio streaming and direct connection to SqueezeNetwork. Will automatically reconnect to SlimServer/SqueezeCenter. Same as Squeezebox2 Same as Squeezebox2 Same as Squeezebox2 TCP, UDP, ARP, ICMP, HTTP, DNS, DHCP, Comet Same as Squeezebox2 TCP, UDP, ARP, ICMP, HTTP, DNS, DHCP, Comet TCP, UDP, ARP, ICMP, HTTP, DNS, DHCP, Comet Source Code Not Applicable Not Applicable Not Applicable Not Applicable Not Applicable Not Applicable Logitech Operating system and Application - no longer updated;  Community Operating system and Application Not Applicable Logitech Operating system and Application - no longer updated;  Community Operating system and Application Logitech Operating system and Application - no longer updated;  Community Operating system and Application Latest Firmware 2.3 40 137 137 87 77 Logitech: 7.7.0-r9546 Community: 8.5.0-r16942 57 Logitech: 7.7.0-r9546  Community: 8.5.0-r16941 Logitech: 7.7.0-r9550  Community: 8.5.0-r16941 Compatible Server Software Version All 5.0+ (text version), 5.3.0+ (graphic display version) 6.0+ 6.0+ 6.5.0+ 7.0+ 7.0+ 7.2+ 7.4+ 7.5+"},{"location":"players-and-controllers/jivelite/","title":"Jivelite","text":"<p>Jivelite is a graphical front-end without playback functionality based on SqueezePlay.</p> piCorePlayer in SmartiPi Touch enclosure running Jivelite <p>Jivelite is a cut down version of the SqueezePlay application based on the BSD licensed Logitech code. To simplify the code-base all audio playback capabilities and many of the applets included were removed from SqueezePlay. Together with Squeezelite this creates a modern and capable display and playback solution, as the audio capabilities of Squeezelite have been enhanced over the years compared to the audio capabilities of SqueezePlay. Also, Jivelite has more graphics capabilities (multiple skins for resolutions ranging from 640x480 to 1920x1080).</p> <p>Jivelite is originally developed by Adrian Smith and now maintained by  Ralph Irving.</p>"},{"location":"players-and-controllers/jivelite/#downloads","title":"Downloads","text":"<p>Jivelite runs on Windows, macOS and Linux. Builds for these platforms can be found on  SourceForge. Instructions to install can be found in the builds repository.</p> <p>If you are running piCorePlayer, Jivelite is very easy to install! Jivelite can be installed on piCorePlayer via the [Tweaks] page on the piCorePlayer web interface. piCorePlayer fully supports Jivelite on the Raspberry Pi\u2019s official 7\" touch display (among other screens).</p>"},{"location":"players-and-controllers/jivelite/#troubleshooting","title":"Troubleshooting","text":"<p>In case you encounter some problems please head over to the forums for assistance.</p>"},{"location":"players-and-controllers/picoreplayer/","title":"piCorePlayer (pCP)","text":"<p>piCorePlayer is a dedicated Linux distribution targeted for the Raspberry Pi hardware. By installing extra software packages and hardware additional features can be added.</p> <p>piCorePlayer is built on a very small linux distro which is only about 12 MB, known as piCore Linux. It boots very fast and it is running entirely in RAM, it doesn't write to the SD-card unless you want to save a new setting. Therefore, pCP is very robust and you can simply pull the power without any risk of corruption of your SD card.</p>"},{"location":"players-and-controllers/picoreplayer/#download","title":"Download","text":"<p>See here for the downloads.    </p>"},{"location":"players-and-controllers/softsqueeze/","title":"SoftSqueeze","text":"SoftSqueeze with the Transporter skin <p>SoftSqueeze is a community supported software music player that allows you to play music streamed from Lyrion Music Server. Since 2009 SoftSqueeze is no longer included in the LMS distribution and is replaced by SqueezePlay. Although it has since been replaced, SoftSqueeze can still be useful in the present day to simulate the screens of for instance the Squeezebox Classic and Transporter. The SoftSqueeze emulator has the look and feel of the Transporter, Squeezebox Classic, Squeezebox Boom, Squeezebox 2 and Squeezebox 1 hardware, and their remote controls.</p> <p>SoftSqueeze is written in Java by Richard Titmuss and is currently maintained by Ralph Irving.</p>"},{"location":"players-and-controllers/softsqueeze/#download","title":"Download","text":"<p>SoftSqueeze can be downloaded from  SourceForge. The source code can be found on  Github.</p>"},{"location":"players-and-controllers/softsqueeze/#features","title":"Features","text":"<ul> <li>Audio Playback<ul> <li>Native playback of Flac, MP3, WAV and AIFF audio.</li> <li>Support for Ogg Vorbis, WMA and AAC by transcoding in SqueezeCenter.</li> <li>Gapless playback for most audio formats.</li> <li>Synchronization with Squeezebox2, Squeezebox and Slimp3 (requires Java 1.8)</li> <li>Pause, volume control and mute buttons.</li> <li>Supports Windows Direct Sound on a Windows PC.</li> <li>Supports the pulseaudio mixer on a Linux PC.</li> </ul> </li> <li>Squeezebox2 Graphics Support<ul> <li>Emulation of the new 320x32 graphic display.</li> <li>Full support for all Squeezebox fonts.</li> <li>Spectrum Analyzer, VU meters.</li> <li>Fixes display issues on MacOS.</li> </ul> </li> <li>Skins<ul> <li>Slim Devices skin with horizontal or vertical remotes.</li> <li>Excession and Excession Large skins.</li> <li>LCD skin, designed for use on laptop computers.</li> <li>Quick link to slim server web interface</li> <li>Window snapping</li> <li>Also supports headless operation</li> </ul> </li> <li>Music search and playlist editor</li> <li>Emulation of Slim IR Remote control<ul> <li>Button auto repeat (for example press and hold pause stop's the player)</li> <li>Keyboard shortcuts for common remote control functions (uses the same keys as winamp and xmms).</li> </ul> </li> <li>Slim Protocol<ul> <li>Supports Slim Server version 7.7 upwards.</li> <li>Support for password encrypted servers.</li> <li>Auto reconnection to Slim Server when connection is lost.</li> <li>Built-in ssh tunneling support for remote connections.</li> <li>Slim server discovery.</li> </ul> </li> <li>Installers<ul> <li>Java web start and applet support</li> <li>install4j Java installer builder</li> </ul> </li> </ul>"},{"location":"players-and-controllers/software-comparison/","title":"Software Comparison","text":"Squeezelite Jivelite SqueezePlay SoftSqueeze Platform support Windows macOS Linux x86_64 Linux arm64 Audio playback Gapless playback Direct streaming Mono output channel mode PCM sample freq. 44.1 kHz 48 kHz 88.2 kHz 96 kHz 176.4 kHz 192 kHz 352.8 kHz 384 kHz PCM sample size 16 bit 24 bit DSD playback Native DoP User interface Graphical user interface Support for multiple resolutions VFD emulation"},{"location":"players-and-controllers/squeezebox-boom/","title":"Squeezebox Boom","text":"<p>The Squeezebox Boom was released in August 2008. It is the first all-in-one Squeezebox.</p> <p>Based on the same architecture as the Squeezebox Classic, Squeezebox Boom includes front panel controls, auxiliary line-in, a 3.5mm jack output for subwoofer or headphones, front panel controls and a powerful DSP driving stereo bi-amplified two way speakers.</p> <p>Technical details about the careful and innovative acoustic design can be found in this white paper.</p> <p>The Squeezebox Boom was discontinued in 2012.</p>"},{"location":"players-and-controllers/squeezebox-boom/#service-and-repair","title":"Service and repair","text":"<p>To open the Squeezebox Boom, you need a Torx TX10 screwdriver. Start by removing the speaker grilles. Pry with long fingernails or something that won't scratch them, and they should come off relatively easy.</p> <p>There is no need to remove the deep set screws behind the speakers, unless you want service said speakers. For display, power or control related repairs, concentrate on the screws near the middle of the unit.</p>"},{"location":"players-and-controllers/squeezebox-boom/#display","title":"Display","text":"<p>After years of use, the vacuum fluorescent display (VFD) can turn dim or patchy on some units, or go completely dark. This is either due to normal wear, or it could be a certain power supply rail failing. Read more about how to prevent or fix these problems here:</p> <ul> <li>Forum thread: Boom display not lighting up at all </li> </ul>"},{"location":"players-and-controllers/squeezebox-boom/#power","title":"Power","text":"<p>The PSU is 12V 2.5A DC, center positive. Connector: 2.5mm ID, 5.5mm OD, 11mm long. A suitable replacement is the Meanwell GST40A12-P1J.</p> <ul> <li>Forum thread: Repairing/ replacing the Boom Power Supply</li> </ul> <p>Sometimes a flaky power connection can be fixed simply by cleaning the barrel jack and corresponding plug, and applying some contact cleaner. It is worth trying before you open the unit up and reflow the solder joints.</p>"},{"location":"players-and-controllers/squeezebox-boom/#speakers","title":"Speakers","text":"<p>When a Squeezebox Boom has been used at loud volume settings with bass heavy music, the woofers can fail. Read more here:</p> <ul> <li>Forum thread: Boom speaker repair</li> <li>Forum thread: Distorted Bass, Spilt Speaker, Exact Replacement Available </li> </ul>"},{"location":"players-and-controllers/squeezebox-boom/#see-also","title":"See also","text":"<ul> <li>Squeezebox Boom User Guide</li> </ul>"},{"location":"players-and-controllers/squeezebox-classic/","title":"Squeezebox Classic","text":"<p>Released at the end of October 2005, this is the 3rd Generation Squeezebox or SB3. It originally had the simple product name of Squeezebox, but has now been rebranded as Squeezebox Classic.</p> <p>Functionally, it is the same as the Squeezebox2, however a new case designed by Fred Bould and crisper display make it a fine addition to one's home.</p> <p>Note</p> <p>The 3rd Generation Squeezebox is identified as Squeezebox2 in <code>Settings -&gt; Player Information -&gt; Player Model</code>.</p>"},{"location":"players-and-controllers/squeezebox-classic/#see-also","title":"See also","text":"<ul> <li>Squeezebox Classic/3 Owner's Guide</li> </ul>"},{"location":"players-and-controllers/squeezebox-controller/","title":"Squeezebox Controller","text":"<p>The Squeezebox Controller (SBC) was announced along with the Squeezebox Receiver in January of 2008. Not to be confused with Logitech Squeezebox Controller App which is a free software solution for using an Android phone to remote control Squeezebox units.</p> <p>The Squeezebox Controller is a handheld remote controller that uses 802.11g wireless networking to communicate with SqueezeCenter and MySqueezebox.com to control any Squeezebox or Transporter network music player. The Squeezebox Controller uses the open source SqueezeOS and SqueezePlay software. It's fully hackable and you can install applets written by the community.</p>"},{"location":"players-and-controllers/squeezebox-controller/#specifications","title":"Specifications","text":"<ul> <li>2.4\" color TFT LCD, 240x320 pixels, 16bpp</li> <li>Mechanical scroll wheel</li> <li>10 backlit buttons (play, add, go, home, back, vol-/+, rew, pause, fwd)</li> <li>Samsung ARM9 CPU (S3C2412), 200 MHz</li> <li>64MB NAND flash</li> <li>64MB mobile SDRAM</li> <li>802.11b/g wireless</li> <li>Headphone jack</li> <li>Built-in speaker</li> <li>IR LED</li> <li>SD card slot</li> <li>1250 mAh Li-Ion battery</li> <li>3 axis accelerometer (for motion sensing)</li> <li>Charging stand</li> <li>Expansion connector that brings out: serial, USB (host or device), audio out, audio in, 3.3v out, 5v in</li> </ul>"},{"location":"players-and-controllers/squeezebox-controller/#see-also","title":"See also","text":"<ul> <li>Squeezebox Duet User's Guide</li> </ul>"},{"location":"players-and-controllers/squeezebox-radio/","title":"Squeezebox Radio","text":"<p>Squeezebox Radio, released in September 2009, is the first full color, Squeezeplay/Linux based Squeezebox. The Radio uses the same acoustic platform as the award winning Squeezebox Boom.</p> <p>Squeezebox Radio includes front panel controls, auxiliary line-in, headphone outputs, and front panel controls. Its host processor is a 400 MHz ARM9E-JS, with 64MB of RAM and 128MB of flash memory. It uses an updated version of SqueezeOS, the software from Squeezebox Controller.</p> <p>The Radio has a two-way, bi-amplified mono speaker (as opposed to stereo speakers) which provides the best sound quality of any device its size. Much of the acoustical treatment is the same as on the Squeezebox Boom, details of which can be in this white paper. Using Lyrion Music Server, two Squeezebox Radios can be synchronized to act as one stereo player.</p> <p>An accessory pack consisting of a battery and an infrared remote control is optional.</p>"},{"location":"players-and-controllers/squeezebox-radio/#migrating-to-community-firmware","title":"Migrating to Community Firmware","text":"<p>When setting up a Squeezebox Radio to work with your local LMS instance, the setup wizard in older firmware can get stuck trying to connect to MySqueezebox.com which is now defunct.  Use the same technique described in the next section to press and hold the \"Back\" ( ) button on your Radio to access the Settings screen. You may need to try this multiple times.  Then navigate to:</p> <p>Settings \u2192 Advanced \u2192 Networking \u2192 Remote Library \u2192 Add New Library \u2192 enter IP address of your LMS \u2192 Connect to this library</p> <p>You should then be connected to your local LMS.  If you have the plugin entitled \"Community Firmware for Touch/Radio/Controller\" installed on your local LMS, you should see a prompt for a firmware update which will eliminate the connection attempt to MySqueezebox.com and rebrand the startup screen to Lyrion.</p>"},{"location":"players-and-controllers/squeezebox-radio/#ue-smart-radio","title":"UE Smart Radio","text":"<p>Some SB Radios have been \"upgraded\" to UE Smart Radio. Follow this guide if you want to revert to Squeezebox.</p>"},{"location":"players-and-controllers/squeezebox-radio/#see-also","title":"See also","text":"<ul> <li>Squeezebox Radio Quickstart Guide</li> </ul>"},{"location":"players-and-controllers/squeezebox-receiver/","title":"Squeezebox Receiver","text":"<p>The Squeezebox Receiver (SBR), announced in January of 2008, is based on the Squeezebox2/v3 architecture, but lacks a display and headphone jack and is part of the Squeezebox Duet bundle, together with the Squeezebox Controller.</p>"},{"location":"players-and-controllers/squeezebox-receiver/#specifications","title":"Specifications","text":"<ul> <li>CPU: Ubicom IP3K series, 250 MHz</li> <li>Dimensions: L: 156mm x W: 106mm (w/o connectors); 112.5mm (w/connectors) x H: 29.25mm</li> <li>Ethernet: True 100Mbps throughput; Shielded CAT5 RJ-45 connector; Connects to any 100Mbps or 10Mbps network; Auto-detects full duplex and half duplex modes; Automatic receive polarity correction; Maximum cable length: 100 meters (328 feet) + Auto Uplink (Auto MDIX)</li> <li>Wireless: 802.11g; supports WPA Personal, WPA2-AES and 64/128-bit WEP encryption; high speed PCI interface to radio module; bridging capability allows Ethernet devices to connect to the network through Squeezebox Wireless; dual internal antennas.</li> <li>Decoder: Software-based MP3, FLAC, Ogg Vorbis, WMA (except WMA Lossless), AIFF, WAV</li> <li>DAC: Wolfson\u00ae 24-bit WM8501, 44.1kHz &amp; 48kHz</li> <li>Buffer RAM: 25Mb (approx. 200 seconds at 128Kbps) compresessed, plus 28Mb (10 seconds at 44.1 samples/sec) uncompressed</li> <li>ROM: Rewritable flash program memory, EEPROM configuration memory</li> <li>Power supply: 9V DC, regulated, center positive, sleeve ground. Connector: 1.05mm ID, 3.5mm OD, 7mm long. Min supply rating: 550mA</li> <li>Supported protocols: DHCP, ARP, IP, ICMP, UDP, Support for subnets/gateways (see documentation section on WANs), UDP-based SlimProto, TCP-based SlimProto and audio streaming, direct HTTP audio streaming, direct connection to MySqueezebox.com. Will automatically reconnect to LMS.</li> <li>Compatible with LMS/SBS version 7.0+.</li> </ul>"},{"location":"players-and-controllers/squeezebox-receiver/#connecting-a-squeezebox-receiver-to-your-lms","title":"Connecting a Squeezebox Receiver to your LMS","text":"<p>Note</p> <p>If the front LED does not light up, please note that there are reports that the original power supply fails in a rather sneaky way as the output voltage of 9 V can be measured on the jack plug and the red glow of the optical link is visible at the back. Furthermore, a very faint clicking or humming sound might be heard by placing the ear on the receiver: The failing power supply only supplies voltage, but cannot supply sufficient amperage once the main circuit wants to boot up. Please replace with a generic power supply (see above for specifications).</p> <p>Before first use the Receiver needs to be connected to your LMS system using the Squeezebox Controller. In case a Controller is not available, the Receiver can be connected by using the <code>Net::UDAP</code> protocol.</p> <p>Jcrummy has created a tool for multiple platforms to take care of the initialization, which is called <code>sbconfig</code> and can be found here. This tool can also be used for older Squeezebox systems, like Classic and Boom and is particularly of use when the VFD display fails.</p>"},{"location":"players-and-controllers/squeezebox-receiver/#sbconfig-instructions","title":"<code>sbconfig</code> instructions","text":"<ol> <li>Download and launch the relevant executable for your OS.</li> <li>Select the network interface that is connect to the same LAN as your Receiver. If you have only 1 network interface there is no need to select one. Be sure to use a network cable.</li> <li>Make sure you have restored the factory settings and that the LED is blinking red. See below for clarification of the various LED color codes.</li> <li>Now type discover. If your device is detected you will see the MAC address and 0.0.0.0 as the IP.</li> <li>Type configure and the device number (0 in most cases)</li> <li>You now enter the programming mode</li> <li>Set the LanGateway, the SqueezeCenterAddress and select Interface (1 for wired, 0 for wireless). For WLAN enter the name of the WirelessMode, WirelessSSID and the WirelessWPAPSK (this is the network key).</li> <li>Commit your changes by typing save.</li> <li>Restart your Receiver. If you did everything right, the light now turns green, signaling that an IP address has been acquired via DHCP.</li> <li>Once the Receiver is connected to LMS, the light will turn white and the device shows up in the list of players.</li> </ol> <p>Note</p> <p>It may be recommendable to use wired network with the Receiver. There are reports that the wireless connections suffer from poor connection.</p>"},{"location":"players-and-controllers/squeezebox-receiver/#alternative-setup-methods","title":"Alternative setup methods","text":"<p>There are a few alternatives to using <code>sbconfig</code>. But some are harder to use, for others the current state is lesser known:</p> <ul> <li>SqueezeConfig - UDAP Config tool for Android (see eg. the announcement in the forums)</li> <li>The <code>Net::UDAP</code> Perl module by robinbowes</li> </ul>"},{"location":"players-and-controllers/squeezebox-receiver/#receiver-led-codes","title":"Receiver LED codes","text":""},{"location":"players-and-controllers/squeezebox-receiver/#sbr-front-button-and-led","title":"SBR front button and LED","text":"<p>The Squeezebox Receiver has one button with a TricolorLED behind it.</p> <p>Button usage:</p> <ul> <li>To put Squeezebox Receiver into setup mode, press and hold the button for about 3 seconds or until it blinks slow red then release it.</li> <li>To do a factory reset on Squeezebox Receiver, continue holding for a total of 6 seconds until it starts blinking fast red. Release and after factory reset, it will start flashing slower and be ready to set up.</li> <li>If you press and hold the button while plugging in the Receiver, you'll see the button sequence through a series of colors and a set of ascending test tones will be played through the audio outputs.</li> <li>When connected to Lyrion Music Server the button is WHITE, press to pause the music. Press again to start the music up again.</li> <li>While music plays the button is bright white; when paused it is dark white.</li> </ul>"},{"location":"players-and-controllers/squeezebox-receiver/#led-color-codes","title":"LED Color codes","text":"LED color Meaning  Red (solid)  Booting up  Red (blinking slow)  Awaiting to be setup  Yellow Waiting for wireless to connect / Link down on ethernet  Green  Network connected, waiting for DHCP to get IP address (skipped when using static IP)  Blue  Waiting to connect to Squeezebox Server or MySqueezebox.com White Connected to Squeezebox Server or MySqueezebox.com White (blinking fast) Firmware update in progress  Red (blinking fast)  Factory Reset and xilinx update in progress  Purple  Hard error with blink codes, a number of blinks with a one second pause in between (Note: The white light might have a purplish tint. If it's not blinking, everything is normal.)"},{"location":"players-and-controllers/squeezebox-receiver/#hard-error-codes","title":"Hard error codes","text":"Number of blinks Meaning 1 blink MAC address missing/bad (checked second upon boot-up) 2 blinks Wireless card missing/bad (checked first upon boot-up) 3 blinks SNV failure/error 4 blinks Upgrade error 5 blinks CPLD XSVF file open error (xilinx file) 6 blinks UUID not set/all zeros (Checked third upon boot-up)"},{"location":"players-and-controllers/squeezebox-receiver/#see-also","title":"See also","text":"<ul> <li>Squeezebox Duet User's Guide</li> </ul>"},{"location":"players-and-controllers/squeezebox-touch/","title":"Squeezebox Touch","text":"<p>The Squeezebox Touch, released in April 2010, is the most recent product in the Squeezebox product line. It can be controlled via an IR remote, the touch screen, or by any other controller interface, like the Lyrion Music Server Web UI or the Squeezebox Controller.</p> <p>It also has the capacity to run as a server, which means that you can connect an USB hard drive with music to the Squeezebox Touch, and do without a dedicated computer or NAS to run Squeezebox Server.</p> <p>The Squeezebox Touch has a 24-bit, 96 kHz capable DAC.</p>"},{"location":"players-and-controllers/squeezebox-touch/#see-also","title":"See also","text":"<ul> <li>Squeezebox Touch Quickstart Guide</li> <li>Squeezebox Touch Features Guide</li> <li>Setting Up Squeezebox Touch Server</li> <li>Troubleshooting Squeezebox Touch Server</li> <li>Setting up Enhanced Digital Output</li> </ul>"},{"location":"players-and-controllers/squeezebox1/","title":"Squeezebox 1","text":"<p>The Squeezebox (also known as Squeezebox 1, abbreviated SB1), released in 2003, is the second generation network media player, produced by Slim Devices. It plays MP3, WMA, AAC, FLAC, WAV, OggVorbis, Shoutcast (and more using Plugins), which are streamed over a network from Slim Devices' custom software, Lyrion Music Server, just like the SLIMP3, but this version included 802.11b wireless as an option. However, this model is only capable of WEP encryption, making its addition to newer wireless networks with WPA or other encryption impossible. The Squeezebox2 does not have this limitation.</p>"},{"location":"players-and-controllers/squeezebox1/#hardware","title":"Hardware","text":""},{"location":"players-and-controllers/squeezebox1/#ethernet-interface","title":"Ethernet Interface","text":"<p>Available on both Wireless and Wired models 10Mbps ethernet interface, RJ-45 twisted pair Connects to any 10Mbps, 10/100, or 10/100/1000 network 10/100 switched ethernet is recommended for PCM streaming Auto-detection of full and half-duplex modes Automatic receive polarity correction Maximum cable length: 100 meters (328 feet)</p>"},{"location":"players-and-controllers/squeezebox1/#power-input","title":"Power input","text":"<p>5.0V DC, regulated Center positive, sleeve ground Connector: 2.5mm ID, 5.5mm OD, 11mm long Min supply rating: 1000mA</p>"},{"location":"players-and-controllers/squeezebox1/#power-supply","title":"Power supply","text":"<p>Switching power supply included Input voltage range and plug style specific to shipping destination Power supplies are small, efficient, and do not get hot One of four styles is included depending on country</p>"},{"location":"players-and-controllers/squeezebox1/#architecture","title":"Architecture","text":"<p>120[[MHz]] network processor Integrated audio DSP with high-quality DAC 2Mb high-speed buffer Low-power design, all solid-state, fanless</p>"},{"location":"players-and-controllers/squeezebox1/#physical-general","title":"Physical General","text":"<ul> <li>Dimensions: 8.5\"W x 1.9\"H x 4.5\"D (216mm x 48mm x 117mm) Finish: Soft-touch surface, black</li> <li>Display Large vacuum fluorescent display, 280x16 pixels Bitmapped graphics, multiple fonts, animation and images Brightness control</li> </ul>"},{"location":"players-and-controllers/squeezebox1/#audio-outputs-general","title":"Audio outputs (general)","text":"<ul> <li>Digital and analog outputs All RCA connectors are gold-plated Volume control is provided for all outputs Multiple outputs may be used at the same time</li> <li>Analog RCA outputs</li> <li>Standard line-level signals Max output level: 3Vpp Signal-to-noise ratio: 94dB(A) Mute level: -113dbV Total harmonic distortion: less than 0.01%, typ: 0.003%</li> <li>Digital S/PDIF outputs</li> <li>Optical and coax digital connections Standard IEC-958 (S/PDIF) encoding Optical connector: TOSLINK 660nm Coax connector: RCA, 500mVpp into 75 ohms Sample rates: 32[[KHz]], 44.1Khz, 48Khz Audio format: linear PCM, 16 or 20 bits per sample</li> <li>Headphone output</li> <li>Standard 1/8\" jack Minimum headphone impedance: 16ohms Total harmonic distortion: less than 0.05%, typ: 0.03% Left/right crosstalk attenuation: 80dB</li> </ul>"},{"location":"players-and-controllers/squeezebox1/#see-also","title":"See also","text":"<ul> <li>Squeezebox flyer</li> <li>Display upgrade information</li> </ul>"},{"location":"players-and-controllers/squeezebox2/","title":"Squeezebox 2","text":"<p>Squeezebox2, released in 2005, is the third generation network media player, produced by Slim Devices. The Squeezebox2 did not change physically from the original Squeezebox; all of the changes were under the hood. The Squeezebox2 added support for 802.11g and WPA Personal encryption as well as native FLAC support in addition to MP3, WMA, AAC, WAV, OggVorbis and Shoutcast.</p> <p>It supports Unicode fonts and Automatic Volume Adjustment. </p>"},{"location":"players-and-controllers/squeezelite-manpage/","title":"squeezelite(1) - Lightweight headless Squeezebox emulator","text":"<p>Debian Project, 2024-04-03</p> <pre><code>squeezelite [options]\n</code></pre> <p></p>"},{"location":"players-and-controllers/squeezelite-manpage/#description","title":"Description","text":"<p>Squeezelite is a small headless Logitech Squeezebox emulator. It is aimed at supporting high quality audio including USB DAC based output at multiple sample rates.</p> <p>The player is controlled using, and media is streamed from, a Lyrion Music Server instance running somewhere on the local network.</p> <p></p>"},{"location":"players-and-controllers/squeezelite-manpage/#options","title":"Options","text":"<p>This program supports the following options:</p> <ul> <li>-?   Show a summary of the available command-line options.</li> <li>-s &lt;server&gt;[:&lt;port&gt;]   Connect to the specified Lyrion Music Server, otherwise uses automatic   discovery to find server on the local network. This option should only be needed   if automatic discovery does not work, or the server is not on the local network   segment (e.g. behind a router).</li> <li>-o &lt;output device&gt;   Specify the audio output device; the default value is   default.   Use the   -l   option to list available output devices.   -   can be used to output raw samples to standard output.</li> <li>-l   List available audio output devices to stdout and exit. These device names can   be passed to the   -o   option in order to select a particular device or configuration to use for audio   playback.</li> <li>-a &lt;params&gt;   Specify parameters used when opening an audio output device.</li> </ul> <p>For ALSA, the format &lt;b&gt;:&lt;p&gt;:&lt;f&gt;:&lt;m&gt;:&lt;d&gt; is used where &lt;b&gt; is the buffer time in milliseconds (values less than 500) or size in bytes (default 40_ms); &lt;p&gt; is the period count (values less than 50) or size in bytes (default _4 periods); &lt;f&gt; is the sample format (possible values: 16, 24, 24_3 or 32); &lt;m&gt; is whether to use mmap (possible values: 0 or 1). &lt;d&gt; open ALSA output device twice. (possible values: 0 or 1).</p> <p>For Linux PortAudio, the value &lt;l&gt; is simply the target latency in milliseconds.</p> <p>For MacOS, &lt;l&gt;:&lt;r&gt; &lt;l&gt; is target latency in milliseconds. &lt;r&gt; open device in Pro Mode or Play Nice (respective values: 0 or 1).</p> <p>For Windows, &lt;l&gt;:&lt;e&gt; &lt;l&gt; is target latency in milliseconds. &lt;e&gt; use exclusive mode for WASAPI (possible values: 0 or 1).</p> <p>When the output is sent to standard output, the value can be 16, 24 or 32, which denotes the sample size in bits. Little Endian only.</p> <ul> <li>-b &lt;stream&gt;:&lt;output&gt;   Specify internal stream and output buffer sizes in kilobytes. Default is 2048:3445.</li> <li>-c &lt;codec1&gt;,...   Restrict codecs to those specified, otherwise load all available codecs. Use   squeezelite -?   to obtain the list of codecs built into squeezelite.</li> <li>-C &lt;timeout&gt;   Close the output device after   &lt;timeout&gt;   seconds of the player being idle; the default is to always keep the device open   as long as the payer is \"on\".</li> <li>-d &lt;category&gt;=&lt;level&gt;   Set logging level. Categories are:   all, slimproto, stream, decode, output or ir.   Levels can be:   info, debug or sdebug.   The option can be repeated to set different log levels for different categories.</li> <li>-e &lt;codec1&gt;,...   Explicitly exclude native support of one or more codecs. See also   -c,   above.</li> <li>-f &lt;logfile&gt;   Send logging output to a log file instead of standard output or standard error.</li> <li>-G &lt;GPIO Chip&gt;:&lt;GPIO#&gt;:&lt;H/L&gt;   Specify the kernel gpio chip number.   Specify the GPIO Line# to use for Amp Power Relay and if the output   should be Active High or Low. This cannot be used with the -S option.</li> <li>-i [&lt;filename&gt;]   Enable LIRC remote control support. If the optional   &lt;filename&gt;   is not provided,   ~/.lircrc   is used instead.</li> <li>-m &lt;mac addr&gt;   Override the player's MAC address. The format must be colon-delimited   hexadecimal, for example: abef:12:34:56. This is usually automatically   detected, and should not need to be provided in most circumstances.</li> <li>-M &lt;modelname&gt;   Override the player's hardware model name. The default value is   SqueezeLite.</li> <li>-n &lt;name&gt;   Set the player name. This name is used by the Lyrion Music Server to refer to   the player by name. This option is mutually exclusive with   -N.</li> <li>-N &lt;filename&gt;   Allow the server to set the player's name. The player name is stored in the file   pointed to by   &lt;filename&gt;   so that it can persist between restarts. This option is mutually exclusive with   -n.</li> <li>-O &lt;mixer device&gt;   Specify mixer device, defaults to &lt;output device&gt;.   .</li> <li>-p &lt;priority&gt;   Set real time priority of output thread (1-99; default   45).   Not applicable when using PortAudio.</li> <li>-P &lt;filename&gt;   Write the process ID (PID) number to the given   &lt;filename&gt;.   This may be useful when running squeezelite as a daemon.</li> <li>-r &lt;rates&gt;[:&lt;delay&gt;]   Specify sample rates supported by the output device; this is required if the   output device is switched off when squeezelite is started. The format is   either a single maximum sample rate, a range of sample rates in the format   &lt;min&gt;-&lt;max&gt;,   or a comma-separated list of available rates. Delay is an optional time to wait   when switching sample rates between tracks, in milliseconds.</li> <li>-S &lt;power script&gt;   Absolute path to script to launch on power commands from LMS. This   cannot be used with the -G option.</li> <li>-u|-R [params]   Enable upsampling of played audio. The argument is optional; see   RESAMPLING   (below) for more information. The options   -u and -R   are synonymous.</li> <li>-D [delay]   Output device supports DSD over PCM (DoP). DSD streams will be converted to DoP   before output. If this option is not supplied, DSD streams will be converted to   PCM and resampled, so they can be played on a PCM DAC. Delay is an optional time   to wait when switching between PCM and DoP between tracks, in milliseconds.</li> <li>-v   Enable visualiser support. This creates a shared memory segment that contains   some of the audio being played, so that an external visualiser can read and   process this to create visualisations.</li> <li>-W   Read wave and aiff format from header, ignoring server parameters.</li> <li>-L   List available volume controls for the output device. Only applicable when   using ALSA output.</li> <li>-U &lt;control&gt;   Unmute the given ALSA   &lt;control&gt;   at daemon startup and set it to full volume. Use software volume adjustment for   playback. This option is mutually exclusive with the -V option. Only   applicable when using ALSA output.</li> <li>-V &lt;control&gt;   Use the given ALSA   &lt;control&gt;   for volume adjustment during playback. This prevents the use of software volume   control within squeezelite. This option is mutually exclusive with the   -U option. If neither -U nor -V options are provided,   no ALSA controls are adjusted while running squeezelite and software   volume control is used instead. Only applicable when using ALSA output.</li> <li>-X   Use linear volume adjustments instead of in terms of dB (only for   hardware volume control).</li> <li>-z   Cause squeezelite to run as a daemon. That is, it detaches itself from the   terminal and runs in the background.</li> <li>-Z &lt;rate&gt;   Report rate to server in helo as the maximum sample rate we can support.</li> <li>-t   Display version and license information.</li> </ul> <p></p>"},{"location":"players-and-controllers/squeezelite-manpage/#resampling","title":"Resampling","text":"<p>Audio can be resampled or upsampled before being sent to the output device. This can be enabled simply by passing the -u option to squeezelite, but further configuration can be given as an argument to the option.</p> <p>Resampling is performed using the SoX Resampler library; the documentation for that library and the SoX rate effect many be helpful when configuring upsampling for squeezelite.</p> <p>The format of the argument is &lt;recipe&gt;:&lt;flags&gt;:&lt;attenuation&gt;:&lt;precision&gt;:&lt;passband_end&gt;:&lt;stopband_start&gt;:&lt;phase_response&gt;</p> <p></p>"},{"location":"players-and-controllers/squeezelite-manpage/#recipe","title":"recipe","text":"<p>This part of the argument string is made up of a number of single-character flags: [v|h|m|l|q][L|I|M][s][E|X]. The default value is hL.</p> <ul> <li>v, h, m, l or q   are mutually exclusive and correspond to very high, high, medium, low or quick   quality.</li> <li>L, I or M   correspond to linear, intermediate or minimum phase.</li> <li>s   changes resampling bandwidth from the default 95% (based on the 3dB point) to   99%.</li> <li>E   exception - avoids resampling if the output device supports the playback sample   rate natively.</li> <li>X   resamples to the maximum sample rate for the output device (\"asynchronous\"   resampling).</li> <li>Examples -u vLs   would use very high quality setting, linear phase filter and steep cut-off. -u hM   would specify high quality, with the minimum phase filter. -u hMX   would specify high quality, with the minimum phase filter and async upsampling   to max device rate.</li> </ul> <p></p>"},{"location":"players-and-controllers/squeezelite-manpage/#flags","title":"flags","text":"<p>The second optional argument to -u allows the user to specify the following arguments (taken from the soxr.h header file), in hex:</p> <pre><code>#define SOXR_ROLLOFF_SMALL     0u  /* &lt;= 0.01 dB */\n#define SOXR_ROLLOFF_MEDIUM    1u  /* &lt;= 0.35 dB */\n#define SOXR_ROLLOFF_NONE      2u  /* For Chebyshev bandwidth. */\n\n#define SOXR_MAINTAIN_3DB_PT   4u  /* Reserved for internal use. */\n#define SOXR_HI_PREC_CLOCK     8u  /* Increase 'irrational' ratio accuracy. */\n#define SOXR_DOUBLE_PRECISION 16u  /* Use D.P. calcs even if precision &lt;= 20. */\n#define SOXR_VR               32u  /* Experimental, variable-rate resampling. */\n</code></pre> <ul> <li>Examples -u :2   would specify SOXR_ROLLOFF_NONE.</li> </ul> <p>NB: In the example above the first option, &lt;quality&gt;, has not been specified so would default to hL. Therefore, specifying -u :2 is equivalent to having specified -u hL:2.</p> <p></p>"},{"location":"players-and-controllers/squeezelite-manpage/#attenuation","title":"attenuation","text":"<p>Internally, data is passed to the SoX resample process as 32 bit integers and output from the SoX resample process as 32 bit integers. Why does this matter? There is the possibility that integer samples, once resampled may be clipped (i.e. exceed the maximum value). By default, if you do not specify an attenuation value, it will default to -1db. A value of 0 on the command line, i.e. -u ::0 will disable the default -1db attenuation being applied.</p> <p>NB: Clipped samples will be logged. Keep an eye on the log file.</p> <ul> <li>Examples -u ::6   specifies to apply -6db (ie. halve the volume) prior to the resampling process.</li> </ul> <p></p>"},{"location":"players-and-controllers/squeezelite-manpage/#precision","title":"precision","text":"<p>The internal 'bit' precision used in the re-sampling calculations (ie. quality).</p> <p>NB: HQ = 20, VHQ = 28.</p> <ul> <li>Examples -u :::28   specifies 28-bit precision.</li> </ul> <p></p>"},{"location":"players-and-controllers/squeezelite-manpage/#passband_end","title":"passband_end","text":"<p>A percentage value between 0 and 100, where 100 is the Nyquist frequency. The default if not explicitly set is 91.3.</p> <ul> <li>Examples -u ::::98   specifies passband ends at 98 percent of the Nyquist frequency.</li> </ul> <p></p>"},{"location":"players-and-controllers/squeezelite-manpage/#stopband_start","title":"stopband_start","text":"<p>A percentage value between 0 and 100, where 100 is the Nyquist frequency. The default if not explicitly set is 100.</p> <ul> <li>Examples -u :::::100   specifies that the stopband starts at the Nyquist frequency.</li> </ul> <p></p>"},{"location":"players-and-controllers/squeezelite-manpage/#phase_response","title":"phase_response","text":"<p>A value between 0-100, where 0 is equivalent to the recipe M flag for minimum phase, 25 is equivalent to the recipe I flag for intermediate phase and 50 is equivalent to the recipe L flag for linear phase.</p> <ul> <li>Examples -u ::::::50   specifies linear phase.</li> </ul> <p></p>"},{"location":"players-and-controllers/squeezelite-manpage/#see-also","title":"See Also","text":"<ul> <li>http://wiki.slimdevices.com/index.php/Squeezelite  </li> <li>https://lyrion.org/  </li> <li>sox(1)   for further information about resampling.</li> </ul>"},{"location":"players-and-controllers/squeezelite/","title":"Squeezelite","text":"<p>Squeezelite is one of several software clients available for Lyrion Music Server. Squeezelite does not have any user interface of its own and must be controlled via Lyrion Music Server's web interface or another Lyrion Music Server client.</p>"},{"location":"players-and-controllers/squeezelite/#features","title":"Features","text":"<p>Squeezelite supports:</p> <ul> <li>gapless playback,</li> <li>a wide range of sample rates (44.1 kHz / 48 kHz / 88.2 kHz / 96 kHz / 176.4 kHz / 192 kHz / 352.8 kHz / 384 kHz) and</li> <li>direct streaming for Lyrion Music Server plugins that require it such as Spotify.</li> </ul> <p>It is capable of utilizing Lyrion Music Server's client synchronization feature which allows grouping clients for simultaneous, synchronized music playback. Squeezelite uses ALSA for audio output on Linux and PortAudio for other platforms.</p>"},{"location":"players-and-controllers/squeezelite/#download","title":"Download","text":""},{"location":"players-and-controllers/squeezelite/#windows-and-macos","title":"Windows and macOS","text":"<p>Binaries compiled from the  source code can be found on  SourceForge.</p> <p>Squeezelite-X combines the Squeezelite player with Lyrion server default web user interface. It can be installed from Microsoft App Store.</p>"},{"location":"players-and-controllers/squeezelite/#android","title":"Android","text":"<p>Packages are available from the following repositories, or from  GitHub.</p> <p> </p> <p>Use an F-Droid client to get automatic updates.</p>"},{"location":"players-and-controllers/squeezelite/#linuxbsd","title":"Linux/BSD","text":"<p>Squeezelite is available in the following distribution repositories:</p> <ul> <li>Arch AUR</li> <li>Debian</li> <li>Fedora</li> <li>FreeBSD</li> <li>Gentoo</li> <li>OpenBSD</li> <li>Ubuntu</li> </ul> <p>Use the package manager of your distribution to install. If your distribution is not listed here, you can find binaries on SourceForge.</p>"},{"location":"players-and-controllers/squeezelite/#usage","title":"Usage","text":"<p>See the squeezelite manpage for usage details.</p>"},{"location":"players-and-controllers/squeezelite/#troubleshooting","title":"Troubleshooting","text":"<p>In case you encounter some problems please head over to the forums for assistance.</p>"},{"location":"players-and-controllers/squeezeplay/","title":"SqueezePlay","text":"<p>SqueezePlay is the desktop version of the Jive/Squeezebox Controller software. It provides an audio player with roughly the same look and feel as the Squeezebox user interfaces, for browsing, playing music and internet streams on your personal computer. It's a replacement for SoftSqueeze and based on the SqueezeOS software platform.</p> <p>If you are looking for a practical all-in-one solution for playback and to control your music from your desktop, SqueezePlay is your best pick. If you are looking for more advanced playback capabilities and more customization for the control application, please look into the Jivelite+Squeezelite combination.</p> <p>Currently SqueezePlay is maintained by Ralph Irving and the source code can be found at  Github.</p>"},{"location":"players-and-controllers/squeezeplay/#downloads","title":"Downloads","text":"<p>SqueezePlay runs on macOS, Windows, Linux and Solaris desktop operating systems. Current builds can be downloaded from  Sourceforge.</p>"},{"location":"players-and-controllers/squeezeplay/#main-features","title":"Main features","text":"<ul> <li>High resolution playback capabilities (up to 192 kHz, 24-bits)</li> <li>Synchronizes with other Squeezebox players</li> <li>Intuitive interface for controlling music playback</li> <li>Same interface as Squeezebox Touch, Squeezebox Controller and Squeezebox Radio</li> </ul>"},{"location":"players-and-controllers/squeezeplay/#keyboard-shortcuts","title":"Keyboard shortcuts","text":"<pre><code>Go                  RIGHT, RETURN, mouse middle button\nBack                LEFT, ESC, (todo - mouse right button), BACKSPACE\nScroll up           UP, mouse wheel\nScroll down         DOWN, mouse wheel\nHome                h, HOME\nUp                  i\nDown                k\nLeft                j\nRight               l\nPlay                x p, mouse left button, (Media Key PLAY - Windows, Linux)\nPlay (hold)         P\nPlay next           W\nPause               c space, (Media Key PAUSE - Windows, Linux)\nAdd                 a, (Keypad +)\nAdd  (hold)         A\nRew                 z, &lt;, (Media Key REW - Windows, Linux)\nRew  (hold)         Z\nFwd                 b, &gt;, (Media Key FWD - Windows, Linux)\nFwd  (hold)         B\nVolume up           +, =, (Media Key VOLUP)\nVolume down         -, (Media Key VOLDOWN)\nScreenshot          S\nDisconnect Player   D\nSearch              /\n[                   Now Playing\n]                   Now Playing Playlist\n,                   Shuffle Toggle\n.                   Repeat Toggle\n;                   Music Library\n:                   Favorites\nPlay Favorite 0-9   0-9\n</code></pre>"},{"location":"players-and-controllers/squeezeplay/#troubleshooting","title":"Troubleshooting","text":"<p>Some issues with SqueezePlay can be resolved by renaming (or removing) the <code>userpath</code> directory. Keep in mind that your installed apps and any menu customizations are stored in <code>userpath</code>, so it's best to make a backup before tinkering with it!</p> <p>For the various supported platforms, <code>userpath</code> is located in:</p> <ul> <li><code>%USERPROFILE%\\AppData\\Roaming\\SqueezePlay</code> for Windows</li> <li><code>~/Library/Preferences/SqueezePlay</code> for macOS</li> <li>and <code>~/.squeezeplay</code> for other Unix/Linux</li> </ul> <p>Removing/renaming this directory allows you to start with a fresh configuration, and go through the first-launch setup steps again.</p>"},{"location":"players-and-controllers/squeezeplay/#no-libraries-showing-up-during-initial-setup","title":"No libraries showing up during initial setup","text":"<p>SqueezePlay has a known issue<sup>1</sup> on several platforms where it fails to receive the broadcast packets from instances of Lyrion Media Server on your local network, when the host running SqueezePlay has multiple network interfaces. This can leave you stuck at the \"Libraries\" screen during initial setup, with no obvious way to proceed, as shown in the screenshot below.</p> <p>If it isn't possible to disable the other network interfaces during initial setup, try this workaround<sup>2</sup>:</p> <ol> <li>press D (upper-case \"D\") to get to the top-level menu</li> <li>choose Settings \u2192 Advanced (off the bottom of the default screen, so use arrow keys to scroll)</li> <li>choose Networking \u2192 Remote Libraries</li> <li>enter the IP address of the desired LMS instance</li> </ol> <p>In case you encounter other issues, please head over to the forums for assistance.</p> <ol> <li> <p>https://forums.lyrion.org/forum/user-forums/general-discussion/1732269-squeezeplay-setup-8-4-1r1474-exe-windows-not-finding-server?p=1732388#post1732388 \u21a9</p> </li> <li> <p>https://forums.lyrion.org/forum/user-forums/general-discussion/1732269-squeezeplay-setup-8-4-1r1474-exe-windows-not-finding-server?p=1745250#post1745250 \u21a9</p> </li> </ol>"},{"location":"players-and-controllers/transporter/","title":"Transporter","text":"<p>The Transporter is an audiophile grade addition to the Squeezebox family, announced July 2006 and began shipping September 2006.</p> <p>Transporter has a serial port that provides access to the Squeezebox Server command-line interface.</p>"},{"location":"players-and-controllers/transporter/#see-also","title":"See also","text":"<ul> <li>Transporter Owner's Guide</li> <li>Check out Joe's tech blog for Transporter specific technical issues.</li> </ul>"},{"location":"plugins/","title":"Plugins","text":"<p>Lyrion Music Server is customisable through add-on components called extras or plugins. LMS comes with a number of plugins already installed (see the \"Server Settings -&gt; Plugins\" page of the LMS web interface to see them), and you can also install your own through that plugins page.</p> <p>Many people have written their own plugins and made them available to the Squeezebox community to make use of. Join us in the 3rd Party Plugins forum for a lively discussion or get started writing your own plugin.</p> <p>On LMS-Community we host a couple of plugins and applets developed by Triode and were hosted originally on Google Code and found a home here after Google pulled the plug on Google Code in 2016:</p> <ul> <li>plugin-LocalPlayer, local playback from your server computer using the Squeezelite software emulator</li> <li>plugin-DSDPlayer, plugin to listen to DSD audio files (.dff or .dsf) on LMS.</li> <li>plugin-SigGen, Signal Generator plugin for LMS.</li> <li>applet-DisplayOff, replacement for Screen Off screensaver which disables screen processing when off.</li> <li>applet-BBCRadio, listen to BBC Radio live and listen again streams on your Squeezebox.</li> <li>applet-EnhancedDigitalOutput, Logitech Touch support for external USB Dacs and up to 192kHz sampling rates with the digital output.</li> <li>applet-SetupKernelUpdater, Logitech Touch applet to install trial kernel versions to test USB audio support.</li> </ul> <p>Also your plugins can have their home on LMS-Community. If you want to host your plugin repository here, please reach out on the forums.</p>"},{"location":"plugins/directory/","title":"Available Plugins","text":""},{"location":"plugins/directory/#music-services","title":"Music Services","text":"<ul> <li> <p> 1001 Albums you must hear before you die</p> <p>A book with 1001 albums chosen by a panel of music critics to be the most important and influential in popular music. This plugin will help you listen to them all. One album a day.</p> <p> Michael Herger    -  Details    -  1125</p> </li> <li> <p> ArchiveOrg V0.6</p> <p>ArchiveOrg - a plugin that enables access to files on Archive.org</p> <p>bpa    -  334</p> </li> <li> <p> Band's Campout</p> <p>Browse and play artists and tracks from bandcamp.com.</p> <p> Michael Herger    -  Details    -  1247</p> </li> <li> <p> Deezer local</p> <p>Deezer for local LMS use</p> <p>philippe_44, Michael Herger    -  Details    -  1466</p> </li> <li> <p> iBroadcast Online Music Library</p> <p>iBroadcast online personal music library integration.  Fully integrate and stream your online iBroadcast music library from your LMS Music Library.</p> <p> ExpectingToFly    -  Details    -  15</p> </li> <li> <p> Mixcloud</p> <p>Play music from Mixcloud</p> <p>Christian Mueller, Daniel Vijge, KwarkLabs    -  Details    -  794</p> </li> <li> <p> MyQobuz Extensions</p> <p>MyQobuz view to Qobuz</p> <p> Ulrich Pickartz    -  Details    -  499</p> </li> <li> <p> phish.in'</p> <p>phish.in' - access to Live Phish Audio Streams</p> <p> Michael Herger    -  286</p> </li> <li> <p> Podcast Extensions</p> <p>Add providers to podcast</p> <p> Philippe    -  Details    -  901</p> </li> <li> <p> Pyrrha</p> <p>Daughter of Pandora</p> <p>sspiff    -  547</p> </li> <li> <p> Qobuz</p> <p>Stream Qobuz to your Squeezebox.</p> <p>Pierre Beck / Michael Herger / darrell / SamY / sveninndh    -  Details    -  3373</p> </li> <li> <p> SoundCloud</p> <p>Play music from SoundCloud</p> <p>Robert Siebert, Daniel Vijge, Robert Gibbon, David Blackman, KwarkLabs    -  Details    -  1640</p> </li> <li> <p> Spotify for Squeezebox. Still Spotty.</p> <p>The next generation Spotify implementation for Squeezebox.</p> <p> Michael Herger    -  8626</p> </li> <li> <p> TIDAL local</p> <p>TIDAL for local LMS use</p> <p>Michael Herger, philippe_44    -  Details    -  3078</p> </li> <li> <p> YouTube</p> <p>Play YouTube video</p> <p> Philippe    -  Details    -  3712</p> </li> </ul>"},{"location":"plugins/directory/#internet-radio","title":"Internet Radio","text":"<ul> <li> <p> Accuradio V1.*</p> <p>Accuradio - provides access to Accuradio streams</p> <p>bpa    -  486</p> </li> <li> <p> ARD Audiothek</p> <p>Browse and listen to content of the ARD Audiothek.</p> <p> Max Zimmermann    -  Details    -  1237</p> </li> <li> <p> BBC Sounds</p> <p>Complete BBC Sounds implementation as an LMS Plugin.  BBC live radio, catch-up, music mixes and podcasts.</p> <p> ExpectingToFly    -  Details    -  2649</p> </li> <li> <p> CBC Radio-Canada Fran\u00e7ais</p> <p>CBC Radio-Canada Fran\u00e7ais programme and track information</p> <p>Paul Webster    -  Details    -  214</p> </li> <li> <p> CPlus</p> <p>Play Canal+ video</p> <p> Philippe    -  Details    -  24</p> </li> <li> <p> FranceTV</p> <p>Play FranceTelevisions video</p> <p> Philippe    -  Details    -  20</p> </li> <li> <p> Global Player (UK)</p> <p>Global Radio's UK Stations (Classic FM, Capital, Heart, LBC, Radio X etc) Live Radio (with pause and rewind), Catch-up, Live Playlists, Podcasts.</p> <p> ExpectingToFly    -  Details    -  946</p> </li> <li> <p> iHeart Radio - v1.2</p> <p>Listen to iHeart Radio Live US,CA,AU,NZ and MX stations</p> <p> bpa    -  883</p> </li> <li> <p> LCI</p> <p>Play LCI/TF1 video</p> <p> Philippe    -  Details    -  69</p> </li> <li> <p> Live365 V1.*</p> <p>Live365 - provides access to Live365 directory of internet stations</p> <p>bpa    -  372</p> </li> <li> <p> Planet Radio</p> <p>Programme, track and podcast information for Planet Radio / Rayo / Bauer Media</p> <p>Paul Webster    -  Details    -  502</p> </li> <li> <p> Radio Favourites</p> <p>Radio Favourites - Manage your favourite radios stations. Select your station according to the current live programme.</p> <p>ExpectingToFly    -  Details    -  829</p> </li> <li> <p> Radio France</p> <p>Radio France programme and track information plus on demand replay</p> <p>Paul Webster    -  Details    -  1387</p> </li> <li> <p> Radio Now Playing</p> <p>Programme and track information including cover art for over 7300 radio stations</p> <p>Paul Webster    -  Details    -  3506</p> </li> <li> <p> Radio Paradise</p> <p>Play the lossless, interactive Radio Paradise streams!</p> <p> Michael Herger    -  Details    -  4992</p> </li> <li> <p> RadioFeeds UK and Ireland</p> <p>Access RadioFeeds UK and Ireland on your Squeezebox including AAC+ and HLS streams (requires PlayHLS). We are the internet's most up-to-date directory of live streams for UK and Irish radio stations. Please register for a username before using at http://www.radiofeeds.co.uk/squeeze</p> <p>The AlienBBC Team and Vincent Lo    -  Details    -  736</p> </li> <li> <p> RadioNet</p> <p>RadioNet - provides access to Radio.net internet radio directory</p> <p>bpa    -  3836</p> </li> <li> <p> SomaFM</p> <p>Play radio channels from SomaFM</p> <p>Daniel Vijge    -  Details    -  811</p> </li> <li> <p> Times Radio</p> <p>Times Radio (UK) Live and 7 Day Catch Up with on air data and images.</p> <p> ExpectingToFly    -  Details    -  371</p> </li> <li> <p> Virgin Radio (UK)</p> <p>Virgin Radio (UK) Plugin.  Access to live and 7 day catch up for Virgin Radio, Talk Radio, talkSport and Times Radio, includes all News UK stations</p> <p> ExpectingToFly    -  Details    -  605</p> </li> <li> <p> Wefunk Radio</p> <p>Browse and play shows from wefunkradio.com</p> <p> Christian Herzog    -  Details    -  403</p> </li> <li> <p> WFMU</p> <p>Play radio streams and archived programs from WFMU</p> <p>Todd Mazierski    -  Details    -  38</p> </li> </ul>"},{"location":"plugins/directory/#hardware","title":"Hardware","text":"<ul> <li> <p> AirPlay bridge</p> <p>Use AirPlay devices in LMS</p> <p> Philippe    -  Details    -  3875</p> </li> <li> <p> BMPFonts Plugin</p> <p>BMPFonts provides additional bitmap fonts for squeezeboxes with a VCD or OLED display (Transporter, SB2/3, Boom, squeezelite-esp32). The plugin consists of the fonts DINo, Neep, Spleen and Terminus. After installation of the plugin, the new fonts can be selected via the server settings for the specific device, in the display section.</p> <p> Daniel Frein    -  Details    -  137</p> </li> <li> <p> CDplayer</p> <p>A Plugin to enable an audio CD in the PC CD drive to be played through LogitechMediaServer. Requires CDDA2WAV to be installed.</p> <p> bpa    -  Details    -  1128</p> </li> <li> <p> Chromecast bridge</p> <p>Use Chromecast devices in LMS</p> <p> Philippe    -  Details    -  2214</p> </li> <li> <p> Denon/Marantz AVR Control</p> <p>This plugin allows a network-ready Denon or Marantz AVR connected to an LMS player to be controlled from any Lyrion client app via telnet. In addition to automatically turning the AVR on and off and changing/muting the volume, other AVR settings can be adjusted using a set of client menus.</p> <p> Chris Couper, Sam Yahres    -  Details    -  506</p> </li> <li> <p> DenonSerial</p> <p>For Squeezeboxes connected to Denon receivers with RS232 or Ethernet interfaces, use your Squeezebox Controller, Squeezebox IR remote control, Web interface, etc. to control your Denon volume. (Transporter, Classic, Receiver)</p> <p> Watkins, Peter    -  Details    -  92</p> </li> <li> <p> DSDPlayer</p> <p>Playback of DSD files (.dsf and .dff) via your Squeezebox.  Supports conversion to PCM or playback as DSD-over-PCM (DoP) for DACs supporting DoP.</p> <p> Kimmo, Triode, Ralphy    -  3907</p> </li> <li> <p> IR Blaster</p> <p>IR Blaster can control other equipment (i.e. your amp) via IR sent out by your SB Classic, Transporter or SB Touch on some events (i.e. power on/off and volume up/down).</p> <p> Felix Mueller    -  Details    -  158</p> </li> <li> <p> Local Player</p> <p>Local playback from your server computer using the Squeezelite software emulator.  This plugin uses Squeezelite to playback through the audio output of your server computer.  The player can be controlled from the server's web interface or other Squeezebox controller applications.  Note: the plugin will only support servers or NAS devices with Intel or ARM processors.</p> <p> Triode    -  796</p> </li> <li> <p> Musical Fidelity M6 Encore</p> <p>Support for Musical Fidelity M6 Encore to your LMS</p> <p> Michael Herger    -  69</p> </li> <li> <p> Musical Fidelity Remote Access Enabler</p> <p>This plugin tries to enable SSH on your Musical Fidelity Encore device. USE AT YOUR OWN RISK! DO NOT USE IF YOU ALREADY HAVE SSH ACCESS TO YOUR MF. Once access has been successfully established, you can uninstall the plugin again.</p> <p> Michael Herger    -  44</p> </li> <li> <p> piCorePlayer Support</p> <p>Access pCP Settings pages from within the LMS Settings.</p> <p> Michael Herger    -  1535</p> </li> <li> <p> ShairTunes2 (fork)</p> <p>Airtunes for LMS (with Windows)</p> <p> Philippe    -  Details    -  3075</p> </li> <li> <p> SharkPlay</p> <p>A Plugin to enable a Griffin RadioShark2 USB FM/AM tuner to be tuned and played through LogitechMediaServer</p> <p> bpa    -  Details    -  30</p> </li> <li> <p> SqueezeESP32</p> <p>SqueezeESP32 additional player id (100/101)</p> <p> Philippe    -  Details    -  648</p> </li> <li> <p> TVH</p> <p>TVHeadend Radio Plugin for Lyrion Media Server</p> <p>CodeChimp    -  Details    -  168</p> </li> <li> <p> UPnP/DLNA bridge</p> <p>Use UPnP/DLNA players in LMS</p> <p> Philippe    -  Details    -  4715</p> </li> <li> <p> WaveInput</p> <p>A Plugin to enable Windows PC audio to be captured and played through LogitechMediaServer</p> <p> Joe Bryan updated by bpa    -  Details    -  500</p> </li> </ul>"},{"location":"plugins/directory/#skins","title":"Skins","text":"<ul> <li> <p> Dark Default Skin</p> <p>Dark-themed version of the LMS Default skin</p> <p>AF    -  Details    -  357</p> </li> <li> <p> Dark Logic Skin</p> <p>Dark-themed version of the LMS Logic Teal skin</p> <p>AF    -  Details    -  294</p> </li> <li> <p> Material Skin</p> <p>Material themed skin, suitable for mobile use.</p> <p>Craig Drummond    -  12929</p> </li> </ul>"},{"location":"plugins/directory/#information-metadata","title":"Information, Metadata","text":"<ul> <li> <p> Alternative Play Count</p> <p>Provides alternative play counts and skip counts that aim to reflect your true listening history. You set a time after which a song counts as played. If you skip the song before, it counts as skipped, not played. Use the data with other plugins to create/play smart playlists (dynamic playlists), create virtual libraries or skip tracks.</p> <p>AF    -  Details    -  248</p> </li> <li> <p> Database Query</p> <p>Makes it possible to define and execute custom SQL statements towards SqueezeCenter database. The result can be displayed in the browser or exported as CSV or XML files. (Boom, Transporter, Classic, Receiver, Controller, Radio, Touch, SoftSqueeze, SqueezePlay)</p> <p> Mike Spertus, Erland Isaksson    -  Details    -  161</p> </li> <li> <p> Date and Spelled time</p> <p> Michael Herger    -  Details    -  244</p> </li> <li> <p> Files Viewer</p> <p>Provides capability to view text files on a SqueezeBox Classic player.</p> <p> Philip Meyer    -  Details    -  175</p> </li> <li> <p> Files Viewer</p> <p> Philip Meyer    -  Details    -  142</p> </li> <li> <p> Fileviewer</p> <p> Michael Herger    -  Details    -  208</p> </li> <li> <p> FuzzyTime</p> <p>Provides a \"date and time\" screensaver that can act like a clock set \"ahead\" of the real time, and allows other plugins to display such \"fast\" times and set timers based on such displayed time. (Boom, Transporter, Classic, Squeezebox1, Slimp3, SoftSqueeze)</p> <p> Watkins, Peter    -  Details    -  86</p> </li> <li> <p> Music and Artist Information</p> <p>Read album reviews, artist biographies, related artists, song lyrics, see artist pictures and much more.</p> <p> Michael Herger    -  Details    -  7058</p> </li> <li> <p> Music Information Screen</p> <p>The Music Information Screen plugin allows customization of the player's Now Playing screen and other elements.</p> <p> Michael Herger    -  Details    -  1757</p> </li> <li> <p> PlayLog</p> <p>This plugin allows you you to log the tracks you listen to, either automatically or by pressing a few remote control buttons. It provides a web interface for viewing its log, linking to the web for more information about what you've listened to, and downloading XML and M3U playlists of played songs. (Boom, Classic, Slimp3, SoftSqueeze, Squeezebox1, Transporter; limited support for Radio, Receiver, and Touch)</p> <p> Watkins, Peter    -  Details    -  205</p> </li> <li> <p> Radio SRF Meta Information</p> <p>Swiss Radio SRF Stream Meta Information Parser</p> <p> Michael Herger    -  Details    -  486</p> </li> <li> <p> Rating Buttons</p> <p>Use remote buttons and the default web interace to rate songs on Squeezebox Classic, Boom and Transporter</p> <p>flipflip    -  Details    -  124</p> </li> <li> <p> Ratings Light</p> <p>Set, display, import, export, log, backup and restore track ratings. Create virtual sublibraries / library views for rated tracks with LMS browse menus.</p> <p>AF    -  Details    -  316</p> </li> <li> <p> SaverSwitcher</p> <p>Configure multiple screensavers for the When Off, When Playing, and When Idle modes, either having SqueezeCenter cycle through a number of plugins or allowing you to change screensavers with a single button press. Easily change screensavers, or immediately jump to the When Playing screensaver, if used with ContextMenu. Can display \"conditional\" screensavers, as with KitchenTimer (set a screensaver to display onlly if it has something to report). (Boom, Transporter, Classic, Squeezebox1, Slimp3, SoftSqueeze)</p> <p> Watkins, Peter    -  Details    -  121</p> </li> <li> <p> Song Info</p> <p>A plugin to make it possible to get various information about a song, can for example be used to get artist images from LastFM (Boom, Transporter, Classic, Controller, Radio, Touch, SoftSqueeze, SqueezePlay)</p> <p> Erland Isaksson    -  Details    -  2151</p> </li> <li> <p> Song Lyrics</p> <p>A plugin that shows lyrics from chartlyrics.com and musixmatch.com through the Song Info plugin. This plugin requires that the Song Info plugin also is installed. (Boom, Transporter, Classic, Controller, Radio, Touch, SoftSqueeze, SqueezePlay)</p> <p> Erland Isaksson    -  Details    -  2153</p> </li> <li> <p> SuperDateTime</p> <p>Displays local time, date, weather, sports, and stock information.</p> <p>G Brown, D Grossman    -  Details    -  675</p> </li> <li> <p> Title Switcher</p> <p>Makes it possible to get text information on the player screen that switches between different kind of information, for example showing artist 5 seconds and album name 5 seconds. The plugin requires that the Music Information Screen(MusicInfoSCR) plugin is installed. (Boom, Transporter, Classic, SoftSqueeze)</p> <p> Erland Isaksson    -  Details    -  108</p> </li> <li> <p> Visual Statistics</p> <p>Have a look at your library statistics with charts.</p> <p>AF    -  Details    -  585</p> </li> <li> <p> What Was That Tune?</p> <p>Keep track of what was playing while you were too busy to check the display.</p> <p> Michael Herger    -  Details    -  1189</p> </li> <li> <p> XSqueezeDisplay</p> <p>Display Kodi (XBMC) Now Playing info on a Squeezebox SB2/3/Classic display.</p> <p> bossanova808    -  175</p> </li> </ul>"},{"location":"plugins/directory/#playlists","title":"Playlists","text":"<ul> <li> <p> Context Stats</p> <p>Display lists of tracks, albums or artists sorted by statistics from the context menus of artists, albums, genres, years and playlists.</p> <p>AF    -  Details    -  156</p> </li> <li> <p> Custom Skip</p> <p>Set rules for when the current track or upcoming tracks in your player's playlist should be skipped and removed from the playlist automatically.</p> <p>AF    -  Details    -  124</p> </li> <li> <p> Custom Start Stop Times</p> <p>Skip unwanted parts of a song (e.g. annoying intros, silence at the end or in the middle).</p> <p>AF    -  Details    -  75</p> </li> <li> <p> Disable Shuffle</p> <p>Allows to disable shuffle, repeat and \"add to playlist\" mode for all clients. You can allow or disable each of these modes in the plugin settings.</p> <p> Martin Johnen    -  Details    -  97</p> </li> <li> <p> Dynamic Mix</p> <p>Extension for Dynamic Playlist, using MusicIP to produce mixes.</p> <p> Philip Meyer    -  Details    -  451</p> </li> <li> <p> Dynamic Playlist Creator</p> <p>Helps you create custom smart playlists (dynamic playlists) for the Dynamic Playlists plugin.</p> <p>AF    -  Details    -  580</p> </li> <li> <p> Dynamic Playlists</p> <p>Use smart playlists (dynamic playlists) to play continuous music mixes based on your selection criteria.</p> <p>AF    -  Details    -  750</p> </li> <li> <p> LastMix - Don't Stop The Music support using Last.fm.</p> <p>LastMix allows you to create Last.fm based mixes for the \"Don't Stop The Music\" plugin.</p> <p> Michael Herger    -  623</p> </li> <li> <p> Playlist Manager</p> <p>Provides functionality to add songs or albums to any chosen playlist.</p> <p> Philip Meyer    -  Details    -  1550</p> </li> <li> <p> Spicefly SugarCube</p> <p>Travel through your music Library using MusicIPs recommendations. Features Include Filter, Genre, Artist and Recipe Mixing, Trackstat Integration, Artist Blocking, Genre Blocking, Custom Track Weighting Routines, Coming Up Next Display, Sleep Mode, Volume Fade and lots more.  See www.spicefly.com for Details and Change Log.</p> <p> Charles Parker    -  Details    -  214</p> </li> <li> <p> Switch Player (Groups compatible)</p> <p>Switch Playlist between players (Triode plugin compatible with Group Player plugin)</p> <p> Philippe    -  Details    -  417</p> </li> </ul>"},{"location":"plugins/directory/#scanning","title":"Scanning","text":"<ul> <li> <p> AutoRescan</p> <p>AutoRescan detects changes to your music folder and automatically triggers a rescan of that directory if any files have been added, removed or changed.</p> <p>James Marsh; Stuart Hickinbottom    -  1420</p> </li> <li> <p> Custom Tag Importer</p> <p>Scans track information from custom tags in your music files (incl. rating tags).</p> <p>AF    -  Details    -  239</p> </li> <li> <p> Ignore files and folders</p> <p>Set a regular expression to ignore files and folders when scanning or browsing folders.</p> <p> Michael Herger    -  219</p> </li> <li> <p> LazySearch2</p> <p>Lazy Search Music is a plugin that lets you search for music without having to multi-tap each letter in the search text you're after, and displays search results \"as you type\". This plugin works with Squeezeboxes and Transporters when using a remote control featuring number keys, and doesn't affect the operation of the Controller.</p> <p> Stuart Hickinbottom    -  Details    -  14</p> </li> <li> <p> Phil's Libraries</p> <p>Creates new libraries for \"Not Rated\" and \"Rated High\", dependent on Erlands TrackStat plugin</p> <p> Philip Meyer    -  74</p> </li> <li> <p> Simple Library Views</p> <p>Plugin to easily generate library views.</p> <p> Andy Hawkins    -  Details    -  242</p> </li> <li> <p> Virtual Library Creator</p> <p>A quick and easy way to create and manage your own virtual sublibraries / library views.</p> <p>AF    -  Details    -  256</p> </li> </ul>"},{"location":"plugins/directory/#tools","title":"Tools","text":"<ul> <li> <p> Auto Dim Display</p> <p>Set automatic display dimming, as for making the display go dark at bedtime and become visible again in the morning. (modified version of code from Eric Koldinger, koldware.com). Will use FuzzyTime \"displayed time\" if FuzzyTime is installed (optional). (Boom, Transporter, Classic, Squeezebox1, Slimp3, SoftSqueeze)</p> <p> Watkins, Peter    -  Details    -  263</p> </li> <li> <p> Bookmarks</p> <p>Bookmark Plugin - Adds the possibility to bookmark audio files. Useful for radio dramas and audio books.</p> <p> Martin Johnen    -  Details    -  391</p> </li> <li> <p> C-3PO Transcoding Helper</p> <p>Automate transcoding and resampling</p> <p> marcoc1712    -  476</p> </li> <li> <p> Client Cleanup</p> <p>Remove orphaned client configurations</p> <p> Michael Herger    -  Details    -  742</p> </li> <li> <p> Create docsets for Dash</p> <p>Export your music library as a Docset to be used with Dash (http://kapeli.com/dash)..) This allows you to quickly search your library on your Mac computer without firing up the Logitech Media Server web UI.</p> <p> Michael Herger    -  60</p> </li> <li> <p> Domoticz Control</p> <p>Control your Domoticz devices from your Jive based player. Parameters are located in player settings</p> <p>Guillaume Zin    -  43</p> </li> <li> <p> Enable/disable access to server settings</p> <p>This plugins allows you to disable access to the settings pages from the Squeezebox Server's web interface.</p> <p> Michael Herger    -  210</p> </li> <li> <p> Group Players</p> <p>on-the-fly group creation</p> <p> Philippe    -  Details    -  949</p> </li> <li> <p> Image Proxy configuration helper</p> <p>Allows you to configure external image proxies to be used by LMS. Offload the heavy image processing to an external service.</p> <p> Michael Herger    -  150</p> </li> <li> <p> KidsPlay</p> <p>Have SqueezeCenter execute specific sets of commands for certain buttons, so you can give a child a remote control with limited function, or redefine Boom or Radio 1-6 preset buttons or the button on a Squeezebox Receiver. (Boom, Classic, Radio, Receiver, Slimp3, Squeezebox1, Transporter)</p> <p> Watkins, Peter    -  Details    -  131</p> </li> <li> <p> KitchenTimer</p> <p>This plugin allows you to set simple countdown timers. Timers can be given names and saved for later re-use. Timers can be shortened or extended if needed. Includes a countdown screensaver designed for use with SaverSwitcher (only displayed if there's an active timer). (Boom, Transporter, Classic, Squeezebox1, Slimp3, SoftSqueeze)</p> <p> Watkins, Peter    -  Details    -  217</p> </li> <li> <p> Music Walk With Me</p> <p>Continue your listening on a different player - easily.</p> <p> Michael Herger    -  940</p> </li> <li> <p> PlayHLS</p> <p>PlayHLS - a minimal plugin that sets ups LMS conf file to play HLS URL using a media player application - ffmpeg by default</p> <p>bpa    -  2886</p> </li> <li> <p> PlayWMA</p> <p>This plugin provides support on Linux and OSX for playing Windows Media (WMA, WMA lossless, WMA Pro)  streams and files using ffmpeg. It is mainly used for player which do not support WMA nativelysuch as SliMP3, SqueezeBox1, Softsqueeze, Squeezeslave and Squeezeplay</p> <p> bpa    -  901</p> </li> <li> <p> PotPourri</p> <p>A collection of small features: change the track order of playlists, schedule auto power-off of all players, set a player's power-on start volume, limit or lock a player's volume, export static playlists to playlist files with custom file paths and file extensions, purge dead tracks\u2026 Complete feature list, screenshots and more information on the GitHub page.</p> <p>AF    -  Details    -  161</p> </li> <li> <p> PowerCenter</p> <p>Control X-10 and Insteon modules with a Squeezebox Controller, Radio, Touch, old-style infrared remote, or Boom or Transporter buttons. Use Insteon or X-10 to have a device turn on and off when a specific player is turned on or off. Turn a coffee pot on when an alarm sounds. (Boom, Classic, Controller, Radio, Receiver, Slimp3, SoftSqueeze, Squeezebox1, Touch, Transporter)</p> <p> Watkins, Peter    -  Details    -  78</p> </li> <li> <p> PowerSave</p> <p>Power off your squeezebox after a certain amount of time (idle or otherwise)</p> <p> Jason Holtzapple    -  758</p> </li> <li> <p> SettingsManager</p> <p>Provides a Web interface for copying settings from one player to another, permanently \"linking\" settings on multiple Squeezeboxes, setting defaults for newly connected Squeezeboxes or remote /stream.mp3 clients, and importing/exporting client settings, to make it easier to manage multiple Squeezebox players. (Boom, Classic, Receiver, Slimp3, SoftSqueeze, Squeezebox1, Transporter)</p> <p> Watkins, Peter    -  Details    -  528</p> </li> <li> <p> Signal Generator</p> <p>Signal Generator plugin.  Now supports Squeezeplay as well as SB2/3/Transporter.</p> <p> Triode    -  329</p> </li> <li> <p> SqueezeboxEQ</p> <p>DSP and EQ for Squeezebox server based off InguzDSP</p> <p>Jonathan Fox    -  636</p> </li> <li> <p> SqueezeDSP</p> <p>DSP for Lyrion Music Server - provides EQ and DSP.</p> <p>Jonathan Fox    -  531</p> </li> <li> <p> SyncOptions</p> <p>Gives new settings for synchronizing players: relative volume sync; \"wait for next track\" to avoid disruptions; \"unsync at power off\"; restore local playlist after leaving a sync group. (Boom, Classic, Radio, Receiver, Squeezebox1, Slimp3, SoftSqueeze, Touch, Transporter) </p> <p> Watkins, Peter    -  Details    -  471</p> </li> <li> <p> xAP Home Automation</p> <p>xAP Home Automation connects Squeezebox Server with other xAP-enabled services and devices around the home.</p> <p>Edward Pearson    -  Details    -  72</p> </li> </ul>"},{"location":"plugins/directory/#most-popular","title":"Most popular","text":"<ul> <li> <p> Material Skin</p> <p>Material themed skin, suitable for mobile use.</p> <p>Craig Drummond    -  12929</p> </li> <li> <p> Spotify for Squeezebox. Still Spotty.</p> <p>The next generation Spotify implementation for Squeezebox.</p> <p> Michael Herger    -  8626</p> </li> <li> <p> Music and Artist Information</p> <p>Read album reviews, artist biographies, related artists, song lyrics, see artist pictures and much more.</p> <p> Michael Herger    -  Details    -  7058</p> </li> <li> <p> Radio Paradise</p> <p>Play the lossless, interactive Radio Paradise streams!</p> <p> Michael Herger    -  Details    -  4992</p> </li> <li> <p> UPnP/DLNA bridge</p> <p>Use UPnP/DLNA players in LMS</p> <p> Philippe    -  Details    -  4715</p> </li> <li> <p> Community Firmware</p> <p>Community Firmware for SqueezeBox Touch/Radio/Controller</p> <p> Michael Herger, Ralph Irving    -  4447</p> </li> <li> <p> DSDPlayer</p> <p>Playback of DSD files (.dsf and .dff) via your Squeezebox.  Supports conversion to PCM or playback as DSD-over-PCM (DoP) for DACs supporting DoP.</p> <p> Kimmo, Triode, Ralphy    -  3907</p> </li> <li> <p> AirPlay bridge</p> <p>Use AirPlay devices in LMS</p> <p> Philippe    -  Details    -  3875</p> </li> <li> <p> RadioNet</p> <p>RadioNet - provides access to Radio.net internet radio directory</p> <p>bpa    -  3836</p> </li> <li> <p> YouTube</p> <p>Play YouTube video</p> <p> Philippe    -  Details    -  3712</p> </li> <li> <p> Radio Now Playing</p> <p>Programme and track information including cover art for over 7300 radio stations</p> <p>Paul Webster    -  Details    -  3506</p> </li> <li> <p> Qobuz</p> <p>Stream Qobuz to your Squeezebox.</p> <p>Pierre Beck / Michael Herger / darrell / SamY / sveninndh    -  Details    -  3373</p> </li> <li> <p> TIDAL local</p> <p>TIDAL for local LMS use</p> <p>Michael Herger, philippe_44    -  Details    -  3078</p> </li> <li> <p> ShairTunes2 (fork)</p> <p>Airtunes for LMS (with Windows)</p> <p> Philippe    -  Details    -  3075</p> </li> <li> <p> PlayHLS</p> <p>PlayHLS - a minimal plugin that sets ups LMS conf file to play HLS URL using a media player application - ffmpeg by default</p> <p>bpa    -  2886</p> </li> <li> <p> PlayHLS</p> <p>PlayHLS - a minimal plugin that sets ups LMS conf file to play HLS URL using a media player application - ffmpeg by default</p> <p>bpa    -  2886</p> </li> <li> <p> BBC Sounds</p> <p>Complete BBC Sounds implementation as an LMS Plugin.  BBC live radio, catch-up, music mixes and podcasts.</p> <p> ExpectingToFly    -  Details    -  2649</p> </li> <li> <p> Chromecast bridge</p> <p>Use Chromecast devices in LMS</p> <p> Philippe    -  Details    -  2214</p> </li> <li> <p> Song Lyrics</p> <p>A plugin that shows lyrics from chartlyrics.com and musixmatch.com through the Song Info plugin. This plugin requires that the Song Info plugin also is installed. (Boom, Transporter, Classic, Controller, Radio, Touch, SoftSqueeze, SqueezePlay)</p> <p> Erland Isaksson    -  Details    -  2153</p> </li> <li> <p> Song Info</p> <p>A plugin to make it possible to get various information about a song, can for example be used to get artist images from LastFM (Boom, Transporter, Classic, Controller, Radio, Touch, SoftSqueeze, SqueezePlay)</p> <p> Erland Isaksson    -  Details    -  2151</p> </li> </ul>"},{"location":"plugins/directory/#miscellaneous","title":"Miscellaneous","text":"<ul> <li> <p> AllQuiet</p> <p>Silence all players simply by holding the Sleep button; all players will display the name of the player that asked for silence, in case you need help. Also provides a CLI command to silence/pause all players and display a custom message. (Boom, Transporter, Classic, Squeezebox1, Slimp3, SoftSqueeze)</p> <p> Watkins, Peter    -  Details    -  143</p> </li> <li> <p> Auto Play</p> <p>Start playback when powered on or reconnected</p> <p>Craig Drummond    -  38</p> </li> <li> <p> BlankSaver</p> <p>Screensaver that simply makes the screen go dark -- most useful with SaverSwitcher, providing an easy way to make the display go dark without having to cycle through all brightness options. (Boom, Classic, Squeezebox1, Slimp3, SoftSqueeze)</p> <p> Watkins, Peter    -  Details    -  151</p> </li> <li> <p> Bliss Mixer</p> <p>Bliss Mixer for DSTM</p> <p>Craig Drummond    -  111</p> </li> <li> <p> Community Firmware</p> <p>Community Firmware for SqueezeBox Touch/Radio/Controller</p> <p> Michael Herger, Ralph Irving    -  4447</p> </li> <li> <p> ContextMenu</p> <p>ContextMenu provides a mechanism for context menus much like the right-click context menus provided by computer operating system desktop environments. Provides a way to use any regular Squeezebox remote control button, even on the Boom. Other plugins that provide ContextMenu options include AllQuiet, KitchenTimer, PlayLog, and SaverSwitcher. (Boom, Transporter, Classic, Squeezebox1, Slimp3, SoftSqueeze)</p> <p> Watkins, Peter    -  Details    -  187</p> </li> <li> <p> DirectPlay</p> <p>Play albums, artists or songs directly by database ID</p> <p> Jason Holtzapple    -  251</p> </li> <li> <p> Fleck Skin</p> <p>A skin focused on album art, easy browsing by disc, and thorough search functionality. Plays to the client device through the browser. Optimized for mobile screens.</p> <p>nbeversl    -  Details    -  88</p> </li> <li> <p> License Manager</p> <p>A plugin that's required for licensed plugins to work, it will give you an overview of licensed plugins available and their current licensing status and links to pay for them. (Boom, Transporter, Classic, Controller, Radio, Touch, SoftSqueeze, SqueezePlay)</p> <p> Erland Isaksson    -  Details    -  469</p> </li> <li> <p> MIP Mixer</p> <p>MusicIP Mixer for DSTM</p> <p>Craig Drummond    -  19</p> </li> <li> <p> Mobile Transcode Rules</p> <p>Optimized custom-convert.conf rules for mobile Lyrion clients (LyrPlay). Enables Opus and faster transcoding.</p> <p> Eric Miller (mtxmiller)    -  Details    -  27</p> </li> <li> <p> Queue Limit</p> <p>Limit queue history size</p> <p>Craig Drummond    -  8</p> </li> <li> <p> QuickAccess</p> <p>QuickAccess provides similar functionality as Favorites plus the possibility to pass a playlist from player to player. Just press and hold a number button and the assigned playlist starts playing. You may select playlists from each player or your server's web interface. You will also need to place the custom.map file (http://jasonholtzapple.github.io/slimdevices/plugins/quickaccess/7.3/custom.map)) in your Squeezecenter/IR directory by hand.</p> <p> Jason Holtzapple    -  153</p> </li> <li> <p> Reliable HTTP</p> <p>Reliable HTTP connection for LMS</p> <p> Philippe    -  Details    -  117</p> </li> <li> <p> SiriusXM</p> <p>Stream SiriusXM satellite radio through Lyrion Music Server</p> <p>paul-1    -  Details    -  29</p> </li> <li> <p> SleepFade</p> <p>Allows the \"sleep\" mode for any given player to fade the music out over the entire sleep period, rather than playing at a constant volume until the last minute. (Boom, Classic, Radio, Receiver, Slimp3, SoftSqueeze, Squeezebox1, Touch, Transporter)</p> <p> Watkins, Peter    -  Details    -  184</p> </li> <li> <p> Spotty Helper Application for Solaris/Illumos</p> <p>Spotty Helper Application for Solaris/Illumos. This plug-in requires the Spotty plugin.</p> <p> Reiner Paulus</p> </li> <li> <p> Spotty Helper FreeBSD</p> <p>Spotty Helper Application for FreeBSD 14. This plugin requires the Spotty plugin.</p> <p> Karl Jeacle    -  285</p> </li> <li> <p> SqueezeCLI Handler</p> <p>Plugin to provide \"squeezecli:\" and \"squeezexec:\" protocol handlers so actions can be embedded in playlists.</p> <p> Watkins, Peter    -  183</p> </li> <li> <p> SqueezeSonic</p> <p>Play music from a Subsonic API capable music library</p> <p> foobarjo    -  Details    -  103</p> </li> <li> <p> StatusFirst</p> <p>Allows you to configure each player so it will display the current setting when you use the Sleep, Shuffle, Repeat, or volume keys on its remote control once, and only change the setting on subsequent button presses. Volume key behavio change does not work on Radio or Touch. (Boom,  Classic, Radio, Slimp3, Squeezebox1, Touch, Transporter)</p> <p> Watkins, Peter    -  Details    -  87</p> </li> <li> <p> VolumeLock</p> <p>Allows you to lock the analog and digital output levels of any Squeezebox, Transporter, or SliMP3. Can either prevent any changes in volume, or simply set a maximum volume. (Boom, Classic, Radio, Receiver, Slimp3, SoftSqueeze, Squeezebox1, Touch, Transporter)</p> <p> Watkins, Peter    -  Details    -  273</p> </li> </ul>"},{"location":"reference/add-locales-to-docker/","title":"Add locales to the LMS Docker container","text":"<p>If you have problems running the LMS Docker because of missing locales, you can add the following init script to the Docker config folder. In this example the locale <code>de_DE</code> is added to the container.</p> <pre><code>#!/bin/sh\n\nif locale -a | grep ^de_DE ; then\n    echo \"Locale de_DE already installed...\"\nelse\n    apt-get update &amp;&amp; apt-get -y install locales &amp;&amp; sed -i '/de_DE.UTF-8/s/^# //g' /etc/locale.gen &amp;&amp; locale-gen\nfi\n</code></pre> <p>Save this as a script called <code>custom-init.sh</code> in the configuration folder and make sure that it has the execution flag set (<code>chmod +x custom-init.sh</code>).</p>"},{"location":"reference/adding-menus-squeezeplay/","title":"Adding Menus on SqueezePlay from LMS Plugins","text":"<p>The main menu hierarchy in SqueezePlay and Squeezebox Controller is now handled differently than deeper browse menus served by SqueezeCenter to SqueezePlay. This is to allow for an easier set of methods to manage what goes into these top level menus and where. Further discussion of the difference of these two types of SqueezeCenter-&gt;SqueezePlay \"deliverables\" can be FOUND HERE.</p> <p>Currently, the main menu hierarchy nodes look roughly like this (subject to change)</p> <ul> <li>Node: Home (id = 'home')<ul> <li>Node: Music Library (id = 'myMusic')<ul> <li>Node: Search (id = 'myMusicSearch')</li> <li>Node: Random Mix (id = 'randomplay'; added via Plugin)</li> </ul> </li> <li>Node: Settings (id = 'settings')<ul> <li>Node: Screen (id = 'screenSettings')</li> <li>Node: Advanced (id = 'advancedSettings')</li> </ul> </li> <li>Node: Extras (id = 'extras')<ul> <li>Node: Games (id = 'games')</li> </ul> </li> </ul> </li> </ul> <p>These are \"nodes\", i.e., menu items that serve as \"directories\" of other items also managed out of these methods. Non-nodes managed by these methods are called \"items\", and can take the form of either action items, choice items, text input items, or text area items.</p> <p>Further ramblings on where things should go can be found on the user interface hierarchy and ControllerSettings wiki pages.</p>"},{"location":"reference/adding-menus-squeezeplay/#adding-a-node-from-an-lms-plugin","title":"Adding a node from an LMS Plugin","text":"<p>If your plugin needs to create a node, this is done through the <code>Slim::Control::Jive::registerPluginNode()</code> method.</p> <p>Any item in the main menu structure needs to have a unique 'id', which allows it to be identified and managed as needed by the Controller itself. Further, any node needs to attach itself to a node as well. For example, if you wanted to add a node for your Foobar plugin, you would do this to register this item to SqueezePlay:</p> <pre><code>  my $node = {\n                      text           =&gt; 'Foobar',\n                      weight         =&gt; 100,\n                      id             =&gt; 'pluginFoobarMenu',\n                      node           =&gt; 'settings',\n                      homeMenuText   =&gt; 'Foobar Settings',\n                      window         =&gt; { titleStyle =&gt; 'settings' },\n  };\n  Slim::Control::Jive::registerPluginNode($node, $client);\n</code></pre> <p>This will add a node with the text 'Foobar', and this node is added to the Settings node (which is in itself attached to the 'home' node). <code>homeMenuText</code> is an optional key-val pair that can set a different text string when this item is added to the top level menu via the SBC's Settings-&gt;Home Menu applet.</p> <p><code>$client</code> is an optional argument which can be sent if the node to be sent is specific to a certain player. In most cases, this argument is not necessary.</p> <ul> <li>the weight key is for ordering within the menu. You will need to look at what the weights are set to for other members of the node (default is 5) to understand where yours will be placed. Items with the same weight are sub-sorted alphabetically</li> <li><code>window</code>: parameters for the window that is opened when descending into this node can be set in a hashref to the window key. In the example above, the \"titleStyle\" is set to 'settings'\u2013 this displays a mini-icon on the right side of the title bar that is demonstrative of a settings window.</li> <li>an optional item noCustom can be sent, which disallows SqueezePlay from allowing the user to add the item to the top level menu (through Settings-&gt;Home Menu)</li> </ul>"},{"location":"reference/adding-menus-squeezeplay/#adding-menu-items-from-an-lms-plugin","title":"Adding menu items from an LMS Plugin","text":"<p>The SqueezePlay main menu items from SC plugins are sent via Slim::Control::Jive::registerPluginMenu(). Arguments to registerPluginMenu are an array of menu items, (optionally) the node that you want to add them to, and (optionally) a $client object if the menu you are sending needs to be specific to a player (in most cases you do not need to do this). If you don't send a node as a second argument, you will need to add a node key to each item in the array. Node keys in items take precedence over the function argument.</p> <pre><code>my @menu = ({\n    # localize text where possible\n    text    =&gt;  Slim::Utils::Strings::string('SOME_STRING'),\n    id      =&gt; 'pluginFoobarTweakSomething',\n    weight  =&gt; 10,\n    actions =&gt; {\n        do =&gt; {\n            player =&gt; 0,\n            cmd    =&gt; [ 'someCustomPluginCommand', 'someArgument' ],\n            params =&gt; {\n                    state =&gt; 'tweaked',\n            },\n        }\n    },\n},{\n    # localize text where possible\n    text    =&gt; Slim::Utils::Strings::string('SOME_OTHER_STRING'),\n    id      =&gt; 'pluginFoobarActivateSomething',\n    weight  =&gt; 20,\n    actions =&gt; {\n        do =&gt; {\n            player =&gt; 0,\n            cmd    =&gt; [ 'someOtherCustomPluginCommand', 'someOtherArgument' ],\n            params =&gt; {\n                    activate =&gt; '1',\n            },\n        }\n    },\n});\nSlim::Control::Jive::registerPluginMenu(\\@menu, 'settings', $client);\n</code></pre> <p>See SlimBrowse Protocol for more information on the API for actions, menu items, etc.</p>"},{"location":"reference/adding-menus-squeezeplay/#refreshing-menus-on-squeezeplay","title":"Refreshing menus on SqueezePlay","text":"<p>It is possible that your plugin might have a dynamic nature to it, and after executing some code you need to tell SqueezePlay to update its main menu structure, or at least part of it.</p> <p>With the new architecture, this is possible. Examples:</p> <pre><code># refreshes any menu items driven by SC plugins\nSlim::Control::Jive::refreshPluginMenus($client);\n\n# $client is optional here-- if it's not used menu notification will update SqueezePlay no matter what player is selected\n# refreshes entire main menu item list from SC, all nodes all items\n# this part was added in svn r15471\nSlim::Control::Jive::mainMenu($client);\n\n# refreshes just SC items in settings node (and sub nodes of settings)\nSlim::Control::Jive::playerSettingsMenu($client);\n\n# refreshes *only* the player power menu item\nSlim::Control::Jive::playerPower($client);\n\n# refreshes the \"Music Library\" node (and sub nodes of this one, including the search node)\nSlim::Control::Jive::myMusicMenu($client);\n\n# refreshes just the search node\nSlim::Control::Jive::searchMenu($client);\n</code></pre> <p>Sending the <code>$client</code> object is required for all methods except <code>refreshPluginMenus()</code>.</p>"},{"location":"reference/curtrack/","title":"How to Use <code>#CURTRACK</code> for Playlists Guide","text":"<p>The <code>#CURTRACK</code> statement is a capability in Lyrion Music Server (LMS) for playlists. You can insert a <code>#CURTRACK 0</code> as the first statement in a playlist. This statement is only effective if \"Play now (\u25b6)\" is used to start the playlist. If the \"Append to queue (+)\", \"Play next\" or shuffle is turned on the <code>#CURTRACK</code> statement will be ignored.</p> <p>When <code>#CURTRACK</code> is active (meaning the playlist was started using the \"Play now (\u25b6)\") LMS will update the number in the <code>#CURTRACK</code> statement to the track number prior to the currently playing track number. In this way you can stop the playlist, clear the play queue, play something else and at a later time restart the playlist with a \"Play now (\u25b6)\" and the playlist will resume on the track that was playing when the playlist was stopped. When the playlist finishes #CURTRACK will be reset to 0 so that the next time the playlist is started via the \"Play now (\u25b6)\" it will start from the beginning.</p> <p>You can edit the playlist and change the number in the <code>#CURTRACK</code> statement and it will be honored the next time the playlist is started using \"Play now (\u25b6)\". If the <code>#CURTRACK</code> statement is inserted in a playlist without a number it will be ignored by LMS regardless of how the playlist is started.</p> <p>There is no need to rescan your library when you insert or modify the <code>#CURTRACK</code> statement in a playlist.</p> <p>In any other music player <code>#CURTRACK</code> will be viewed as a comment and ignored.</p>"},{"location":"reference/custom-firmware/","title":"How to install Custom Firmware for SB Radio/Touch/Controller","text":"<p>It is possible to tell Lyrion Music Server to push a specific build of Squeezebox Radio/Touch/Controller firmware out to devices that connect to it by using specially named <code>custom.&lt;device&gt;.*</code> files.</p> <p>Danger</p> <p>Load custom firmware at your own risk. While an unlikely scenario, it is possible to \"brick\" your device by loading a corrupted or buggy-because-not-formally-qualified firmware. If you get in a situation where the custom firmware you've attempted to install won't load, you may be able to recover it by booting to the previous firmware. This is done by continually holding down the rew key during boot.</p>"},{"location":"reference/custom-firmware/#loading-custom-squeezebox-firmware","title":"Loading Custom Squeezebox Firmware","text":"<ul> <li> <p>Begin by obtaining a firmware for the device that you want to load. These are typically named in the form <code>baby_X.Y.Z_rXXXX</code>.bin, where \"baby\" is the device type (use \"baby\" for Radio, \"fab4\" for the SB Touch, or \"jive\" for the SB Controller), X.Y.Z is the software branch, and rXXXX is the subversion revision. For example, <code>baby_7.6.0_r9155.bin</code>.</p> </li> <li> <p>Rename this file <code>custom.baby.bin</code>.</p> </li> <li> <p>This bin file is actually a zip file in disguise. Inside the zip are a few files</p> </li> </ul> <pre><code>-rw-r--r--  1 user user 2.8M 2010-10-07 01:48 zImage\n-rw-r--r--  1 user user  13M 2010-10-07 01:48 root.cramfs\n-rw-r--r--  1 user user   62 2010-10-07 01:48 jive.version\n-rw-r--r--  1 user user   72 2010-10-07 01:48 board.version\n-rw-r--r--  1 user user   87 2010-10-07 01:48 upgrade.md5\n</code></pre> <ul> <li>The important file for this exercise is jive.version. This file needs to be extracted from the archive and renamed <code>custom.baby.version</code>.</li> </ul> <p>Note</p> <p>While the file in the archive is called jive.version, it is important to name the extracted file <code>custom.&lt;device&gt;.version</code>, eg. <code>custom.baby.version</code></p> <ul> <li> <p>Depending on OS, there are a variety of ways to extract this file from the zip archive.</p> <ul> <li>In windows, a utility like WinZip can be used. Modern versions of Windows can do Zip archive inspection natively, though you will have to convince windows explorer that your .bin file is actually a .zip file.</li> <li>Mac and Linux are very simple from the command line (see also scripting instructions below). This command extracts the file jive.version from the archive custom.baby.bin and prints it to STDOUT. This output is redirected to the file custom.baby.version</li> </ul> </li> </ul> <pre><code>zip -p custom.baby.bin jive.version &gt; custom.baby.version\n</code></pre>"},{"location":"reference/custom-firmware/#install-firmware-using-sd-card-or-usb-stick-sb-controllertouch","title":"Install firmware using SD card or USB stick (SB Controller/Touch)","text":"<p>If you're the owner of a Squeezebox Touch or Controller, you're lucky! Those devices feature an SD card slot or USB port (Touch only).</p> <p>You can install the firmware by copying the files to the storage medium of your choice (and availability). Insert the medium to your device, restart it. You should now be able to install the firmware from the device's Settings/Advanced/Software Update menu.</p>"},{"location":"reference/custom-firmware/#have-firmware-served-by-your-lyrion-music-server","title":"Have firmware served by your Lyrion Music Server","text":"<p>The two files <code>custom.baby.bin</code> and <code>custom.baby.version</code> need to be placed in the Cache/Updates folder of the LMS installation. See Settings/Information in LMS to see where that folder is on your system.</p> <p>Once you restart your LMS and your device connects to it, it should offer you the new firmware for installation.</p>"},{"location":"reference/database-structure/","title":"Database structure","text":"<p>Lyrion Music Server stores its data in a SQLite databases, though it is possible to also use MySQL/MariaDB. </p> <p>Warning</p> <p>SQLite is what is being tested and used by probably 99.9...% of all users. If you decide to go with MySQL/MariaDB, you're on your own. And some features (eg. fulltext search) will not be available. Good luck! And let us know about your experience.</p>"},{"location":"reference/database-structure/#databases","title":"Databases","text":"<ul> <li>library.db - Database Library.</li> <li>persist.db - Persistant Database Library, ie holds data which will survives a full clear and database rescan.</li> <li>artwork.db, cached.db, imgproxy.db - Database files used to cache specific data. They're simple key/value stores.</li> </ul>"},{"location":"reference/database-structure/#main-tables-librarydb","title":"Main tables library.db","text":""},{"location":"reference/database-structure/#albums","title":"albums","text":"<p>The albums table contains all real albums. Besides this it also contains a \"No Album\" entry which represents tracks that don't belong to any album. The name of the \"No Album\" entry will differ depending on the selected language in LMS. The tracks that doesn't belong to any real albums will be related to the \"No Album\" entry.</p>"},{"location":"reference/database-structure/#contributors","title":"contributors","text":"<p>The contributors table contains all composers, conductors, artists, album artists, bands and track artists that have contributed to the music on any track in your library.</p> <p>The contributors table also contains a special entry named \"Various Artists\" that represents all the artists that exist on a compilation album. Note that all the individual artists on compilation albums also exist as separate entries in the contributors table. There is no relation in the database between the \"Various Artists\" entry and the tracks and albums tables.</p>"},{"location":"reference/database-structure/#tracks","title":"tracks","text":"<p>The tracks table contains all tracks in your music library. These have the \"audio\" column set to 1 and the \"remote\" column set to 0. The tracks table also contains an entry for all Internet radio stations you have listened to since the last rescan. The Internet radio station entries have the \"remote\" column set to 1.</p> <p>The tracks table also contains some entries that aren't really separate songs. There will be one entry for each directory in your library; these entries will have \"audio\" set to 0 and \"content_type\" set to \"dir\". There will be one entry for each playlist, which will also have \"audio\" set to 0 and content_type set to the type of playlist. Note that the current playlist is also represented this way even though it doesn't exist as a physical m3u file on the disk. The current playlist has \"content_type\" set to \"cpl\".</p> <ul> <li>Some interesting columns in tracks table (these are not all columns, just the most interesting ones)</li> <li>title - The track title</li> <li>titlesort - The version of the track title that's used for sorting</li> <li>url - The url to the track<ul> <li>Typically something like: file:///mnt/music/First%20Album/01%20First%20Song.flac</li> <li>Is url encoded, can be unencoded to a path with http://urldecode.org</li> </ul> </li> <li>audio - Indicates if the entry represents a music file<ul> <li>1 - music file</li> <li>null - not music file</li> </ul> </li> <li>content_type - The type of entry, see above, it typically either indicates file format or playlist format</li> <li>tracknum - The track number on an album</li> <li>timestamp - The last modification time of the music file</li> <li>filesize - The size of the file in bytes</li> <li>year - Relation to years table</li> <li>secs - The length of the track in number of seconds</li> <li>bitrate - The bit rate of the track, for example 457489 for a 457kbs track</li> <li>samplerate - The sample rate of the track, for example 44100</li> <li>samplesize - The sample size of the track, for example 16</li> <li>channels - Number of audio channels used by the track</li> <li>bpm - The bpm of the track, not filled unless you have tagged your music with BPM tags</li> <li>disc - The disc number this track is available on</li> <li>remote - 1 if this isn't a local track but a remote stream, for example an internet radio station</li> <li>lossless - 1 if this is a lossless compressed track, else 0</li> <li>lyrics - The lyrics of the track, not filled unless you have tagged your music with lyrics information</li> <li>album - Relation to albums table</li> </ul>"},{"location":"reference/database-structure/#tracks_persistent","title":"tracks_persistent","text":"<p>The tracks_persistent table contains additional statistics information about a track, such as play count, rating and last played time. This table will survive a full rescan as long as you have musicbrainz tags or haven't moved or renamed a music file. During scanning the entries in the tracks table will be re-connected to the saved entries in the tracks_persistent table.</p> <p>The tracks_persistent table was added in SqueezeCenter 7.1.</p>"},{"location":"reference/database-structure/#works","title":"works","text":"<p>The works table contains an entry for each Work in your music library.</p>"},{"location":"reference/database-structure/#genres","title":"genres","text":"<p>The genres table contains all the genres in your music library.</p>"},{"location":"reference/database-structure/#years","title":"years","text":"<p>The years table contains an entry for each year specified in a track tag.</p>"},{"location":"reference/database-structure/#comments","title":"comments","text":"<p>The comments table contains all the comment tags in the tracks in your library. There will be one entry for each comment tag. If you have specified several comment tags in a single track, there will be a separate entry for each comment.</p>"},{"location":"reference/database-structure/#many-to-many-associations","title":"Many to many associations","text":""},{"location":"reference/database-structure/#contributor_track","title":"contributor_track","text":"<p>The contributor_track table contains the relation between a track and a contributor. Each entry also has a role attribute indicating the role the contributor had. Some examples of existing roles are:</p> <ul> <li>Artist -&gt; 1</li> <li>Composer -&gt; 2</li> <li>Conductor -&gt; 3</li> <li>Band -&gt; 4</li> <li>Album artist -&gt; 5</li> <li>Track artist -&gt; 6</li> </ul> <p>Contributors and tracks are joined with:</p> <p><code>contributor_track.contributor = contributors.id and contributor_track.track = tracks.id</code></p>"},{"location":"reference/database-structure/#contributor_album","title":"contributor_album","text":"<p>The contributor_album table contains the relation between an album and a contributor. Like the contributor_track table, the contributor_album table also contains a role attribute indicating the role the contributor had on one or several tracks on an album.</p> <p>The contributor_album table is just a shortcut table to get better performance when browsing from artists to albums. All the information already exists in the contributor_track table but is compiled together to a summary view in the contributor_album table.</p> <p>Contributors and albums are joined with:</p> <p><code>contributor_album.album = albums.id and   contributor_album.contributor = contributors.id</code></p>"},{"location":"reference/database-structure/#genre_track","title":"genre_track","text":"<p>The genre_track table contains the relation between genres and tracks. This is the table to use if you need to know which genres a track belongs to, or which tracks exist within a specific genre.</p> <p>Genres and tracks are joined with:</p> <p><code>genre_track.genre = genres.id and   genre_track.track = tracks.id</code></p>"},{"location":"reference/database-structure/#playlist_track","title":"playlist_track","text":"<p>The playlist_track table contains the relation between playlists and tracks. This table is used if you need to know the tracks in a specific playlist.</p> <p>Playlists and tracks these are joined with:</p> <p><code>playlist_track.playlist = tracks.id and   playlist_track.track = tracks.url</code></p>"},{"location":"reference/database-structure/#many-to-one-associations","title":"Many to one associations","text":""},{"location":"reference/database-structure/#relation-between-track-and-album","title":"Relation between track and album","text":"<p>There is no separate relation table for the relation between albums and tracks; instead this relation is represented with the \"album\" column in the tracks table.</p> <p>Albums and tracks are joined with:</p> <p><code>tracks.album = albums.id</code></p>"},{"location":"reference/database-structure/#relation-between-album-and-year","title":"Relation between album and year","text":"<p>There is no separate relation table for the relation between years and albums; instead this relation is represented with the \"year\" column in the albums table.</p> <p>Years and albums are joined with:</p> <p><code>albums.year = years.id</code></p>"},{"location":"reference/database-structure/#relation-between-track-and-year","title":"Relation between track and year","text":"<p>There is no separate relation table for the relation between years and tracks; instead this relation is represented with the \"year\" column in the tracks table.</p> <p>Years and tracks are joined with:</p> <p><code>tracks.year = years.id</code></p>"},{"location":"reference/database-structure/#relation-between-track-and-comment","title":"Relation between track and comment","text":"<p>There is no separate relation table for the relation between tracks and comments; instead this relation is represented with the \"track\" column in the comments table.</p> <p>Tracks and comments are joined with:</p> <p><code>comments.track = tracks.id</code></p>"},{"location":"reference/database-structure/#relation-between-album-and-main-artist","title":"Relation between album and main artist","text":"<p>There is a special relation between albums and main artists. Note that this relation can be a bit random on compilation albums.</p> <p>Albums and main artists are joined with:</p> <p><code>albums.contributor = contributors.id</code></p>"},{"location":"reference/database-structure/#extra-tables","title":"Extra tables","text":"<p>There are a number of extra table in the database that contain some different kinds of state information. These tables follow below and they do not contain any music library information; they are just needed to make LMS work.</p>"},{"location":"reference/database-structure/#metainformation","title":"metainformation","text":"<p>Contains some different meta information about the database, for example the last time a rescan was performed, and an indication whether scanning is currently in progress.</p>"},{"location":"reference/database-structure/#dbix_migration","title":"dbix_migration","text":"<p>Contains the current database structure version. This is used to determine whether the database structure needs to be updated when upgrading to a new LMS version.</p>"},{"location":"reference/database-structure/#progress","title":"progress","text":"<p>New in LMS 7.0 (i.e. SqueezeCenter). Contains the progress of the currently active scanning process. This is used for the progress bar during the scanning operation.</p>"},{"location":"reference/database-structure/#database-creation","title":"Database creation","text":"<p>The LMS database is created automatically at first LMS startup. The database is created with the schema_*_up.sql scripts in the SQL/SQLite or SQL/mysql directory below the LMS installation directory. The scripts will run in sequence, starting with the script with a number greater than the current database structure version.</p> <p>As an example: if the current database version is 3, the schema_4_up.sql and schema_5_up.sql scripts will be executed. If the database doesn't exist it will execute all the *_up.sql scripts.</p>"},{"location":"reference/database-structure/#sample-queries","title":"Sample queries","text":"<p>The following sections lists a number of different sample SQL statements that retrieve different kinds of information from the database. Please note that the corresponding statements used directly by LMS might be different than the statements shown below; these are just samples.</p>"},{"location":"reference/database-structure/#get-artists-in-the-database","title":"Get artists in the database","text":"<p>The simple way to retrieve all contributors independent of roles in the database is a query like this</p> <pre><code>select * from contributors\n     order by namesort\n</code></pre> <p>However, you should be aware of that if you have removed, re-tagged or renamed some track in your library and used the rescanning option \"New and changed files\", there could be artists in the result that no longer have any tracks in the LMS database. The above query will also return the special \"Various Artists\" entry that doesn't correspond to a single artist.</p> <p>A query like this will solve this problem:</p> <pre><code>select contributors.* from contributors, contributor_album\n     where\n         contributors.id = contributor_album.contributor\n     group by contributors.id\n     order by contributors.namesort\n</code></pre> <p>If you only wanted the contributors that have the role \"artist\", \"album artist\" or \"track artist\", you would instead use a query like:</p> <pre><code>select contributors.* from contributors, contributor_album\n     where\n         contributors.id = contributor_album.contributor and\n         contributor_album.role in (1, 5, 6)\n     group by contributors.id\n     order by contributors.namesort\n</code></pre> <p>In the same way you can get all the composers with a query like:</p> <pre><code>select contributors.* from contributors, contributor_album\n     where\n         contributors.id = contributor_album.contributor and\n         contributor_album.role = 2\n     group by contributors.id\n     order by contributors.namesort\n</code></pre> <p>If you want to ignore artists that only exist on compilation albums, you would use something like:</p> <pre><code>select contributors.* from contributors, contributor_album, albums\n     where\n         contributors.id = contributor_album.contributor and\n         contributor_album.role in (1,5,6) and\n         contributor_album.album = albums.id and\n         albums.compilation is null\n     group by contributors.id\n     order by contributors.namesort\n</code></pre> <p>If you only want to list only those artists that exist on compilation albums, you would use something like:</p> <pre><code>select contributors.* from contributors, contributor_album, albums\n     where\n         contributors.id = contributor_album.contributor and\n         contributor_album.role in (1,5,6) and\n         contributor_album.album = albums.id and\n         albums.compilation = 1\n     group by contributors.id\n     order by contributors.namesort\n</code></pre>"},{"location":"reference/database-structure/#get-albums-in-the-database","title":"Get albums in the database","text":"<p>The easiest way to get all albums in the database is with a query like this:</p> <pre><code>select * from albums\n     order by titlesort\n</code></pre> <p>However, you should be aware that if you have removed, re-tagged or renamed some track in your library and used the rescanning option \"New and changed files\", there could be albums in the result that no longer have any tracks in the LMS database. The query will also return the special \"No Artist\" entry that doesn't correspond to a single artist.</p> <p>The following query only returns the albums that really have tracks in the database:</p> <pre><code>select albums.* from albums, tracks\n     where\n         tracks.album = albums.id and\n         tracks.audio = 1\n     group by albums.id\n     order by albums.titlesort\n</code></pre> <p>If you want to ignore the compilation albums, you would instead use something like this:</p> <pre><code>select albums.* from albums, tracks\n     where\n         tracks.album = albums.id and\n         tracks.audio = 1 and\n         albums.compilation is null\n     group by albums.id\n     order by albums.titlesort\n</code></pre> <p>Or if you only want the compilation albums:</p> <pre><code>select albums.* from albums, tracks\n     where\n         tracks.album = albums.id and\n         tracks.audio = 1 and\n         albums.compilation = 1\n     group by albums.id\n     order by albums.titlesort\n</code></pre> <p>To retrieve all albums within the genres 'Pop' or 'Rock' you would use a query like this:</p> <pre><code>select albums.* from albums, tracks, genre_track, genres\n     where\n         tracks.album = albums.id and\n         tracks.id = genre_track.track and\n         genre_track.genre = genres.id and\n         genres.name in ('Pop','Rock') and\n         tracks.audio = 1\n     group by albums.id\n     order by albums.titlesort\n</code></pre> <p>To retrieve all albums from year 2000 and forward you would use a query like:</p> <pre><code>select * from albums\n     where\n         year &gt;= 2000\n     order by titlesort\n</code></pre>"},{"location":"reference/database-structure/#ordering-albums-retreived-from-the-database","title":"Ordering albums retreived from the database","text":"<p>For queries that return albums it also gets interesting to order the result in various ways.</p> <p>All albums ordered by the album title sort tag and then disc number:</p> <pre><code>select * from albums\n     order by titlesort, disc\n</code></pre> <p>All albums ordered by the year in descending order:</p> <pre><code>select * from albums\n     order by year desc, titlesort, disc\n</code></pre> <p>All albums ordered by main artist and then year in descending order:</p> <pre><code>select albums.* from albums\n     left join contributors on\n         albums.contributor = contributors.id\n     group by albums.id\n     order by contributors.namesort, albums.year desc, albums.disc\n</code></pre> <p>The reason we need to use the \"left join\" syntax in the above statement is that there can be albums without a main artist.</p>"},{"location":"reference/database-structure/#get-tracks-in-the-database","title":"Get tracks in the database","text":"<p>To get all locally stored tracks in the database you can use a query like this:</p> <pre><code>select * from tracks\n     where\n         audio = 1\n     order by titlesort\n</code></pre> <p>The above query returns the tracks ordered by the titlesort field; you would probably also want the tracks ordered by album. To accomplish this you would instead use something like:</p> <pre><code>select tracks.* from tracks, albums\n     where\n         tracks.album = albums.id and\n         tracks.audio = 1\n     group by tracks.id\n     order by albums.titlesort, tracks.disc, tracks.tracknum\n</code></pre> <p>Or maybe even order the albums by the main artist with something like:</p> <pre><code>select tracks.* from tracks\n     join albums on\n         tracks.album = albums.id\n     left join contributors on\n         albums.contributor = contributors.id\n     where\n         tracks.audio = 1\n     group by tracks.id\n     order by contributors.namesort, albums.titlesort, tracks.disc, tracks.tracknum\n</code></pre>"},{"location":"reference/enable-ssh/","title":"SSH Access to SB Radio/Touch/Controller and UE Smart Radio","text":"<p>SSH access is only available on devices running the SqueezeOS platform. This is not the case for Squeezebox Classic/Boom/Transporter/Receiver.</p> <p>Using SSH on *nix/macOS</p> <p>If you are using the original firmware on the SB Radio/Touch/Controller devices you will find that you will need some additional ssh parameters to connect to the device as the algorithms used by these elderly devices haven't aged well and are deprecated. These extra parameters are not needed if you are using the community firmware.</p> <pre><code>ssh -c aes128-cbc -oHostKeyAlgorithms=+ssh-rsa,ssh-dss -oKexAlgorithms=+diffie-hellman-group1-sha1 root@[IP address or hostname of your device]\n</code></pre> <p>Please note that some Linux distributions wouldn't even install support for the necessary algorithms any more. But these can be re-enabled. See eg. this document for Fedora.</p>"},{"location":"reference/enable-ssh/#squeezebox-radio-touch-controller","title":"Squeezebox Radio / Touch / Controller","text":"<p>On the Squeezeboxen SSH can be enabled in Settings/Advanced Settings/Remote Access. Follow the instructions on screen.</p>"},{"location":"reference/enable-ssh/#ue-smart-radio","title":"UE Smart Radio","text":"<p>On the UE Smart Radio enabling SSH is a little more complicated. Many of those useful developers features have been hidden in a Developers menu:</p> <ul> <li> <p>Go to the \"Settings\" menu</p> </li> <li> <p>Press both the \"Home\" and the \"&gt;&gt;\" (forward) button simultaneously.</p> </li> <li> <p>Now there should be an additional \"Developer\" menu at the bottom of the \"Settings\" menu.</p> </li> <li> <p>In the Developer menu, go to \"Remote Access\".</p> </li> <li> <p>Follow the instructions on screen.</p> </li> </ul>"},{"location":"reference/home-vs-slimbrowse/","title":"Home Menu Items versus SlimbrowseItems","text":""},{"location":"reference/home-vs-slimbrowse/#comparing-the-two-types-of-itemsmenus-delivered-from-squeezecenter-to-squeezeplay","title":"Comparing the two types of items/menus delivered from SqueezeCenter to SqueezePlay","text":"<p>There are two types of items delivered from SqueezeCenter to Jive/Controller/SqueezePlay (hereafter referred to as Squeezeplay):</p> <ul> <li>\"Home Menu\" items (delivered as individual items) Further discussion</li> <li>\"Slimbrowse\" items (delivered as full menus) Further discussion</li> </ul>"},{"location":"reference/home-vs-slimbrowse/#home-menu-items","title":"Home Menu Items","text":"<p>\"Home menu\" items are those items that are managed by Squeezeplay's jive.ui.HomeMenu class, and includes not only items in the top-level menu, but miscellaneous \"nodes\" below that level. Examples of \"Home menu\" items are Home-&gt;Music Library-&gt;Genres, Home-&gt;Settings-&gt;Screen-&gt;Wallpaper, and Home-&gt;Internet Radio.</p> <p>Each \"home menu\" items requires a unique ID that is used in the management of these items, as well as a 'node', which tells Squeezeplay where to place the item. Current examples of home menu nodes are 'home', 'settings', 'advanced', 'myMusic', and a special case 'hidden', which I'll talk about below.</p> <p>If you are adding items through a Plugin via Slim::Control::Jive::registerPluginMenu, these are \"home menu\" items. Further, all home menu items (except one special case: settings, which by design cannot be hidden from view) can be added to the top level via the CustomizeHomeMenu applet, available in the most current 7.1 firmware.</p>"},{"location":"reference/home-vs-slimbrowse/#slimbrowse-items","title":"Slimbrowse Items","text":"<p>\"Slimbrowse\" items are those menus delivered from SqueezeCenter to SqueezePlay via a specific cli command. Examples of this are Home-&gt;Music Library-&gt;Artists, Home-&gt;Music Library-&gt;Genres, and drilling down further Home-&gt;Music Library-&gt;Genres-&gt;Acid Jazz-&gt;etc.</p> <p>Slimbrowse items, unlike home menu items, are not available for customizing into the top level menu. So, if your plugin creates an item that calls a custom cli command to produce the submenu selections, the top item from your plugin can be added to the top level Squeezeplay menu, but not the submenu items that are returned from the cli command.</p> <p>The menus that are returned from Home-&gt;Internet Radio and Home-&gt;Music Services menus on Squeezeplay are actually Slimbrowse items, so in order to give the user the ability to add/remove individual items like Pandora, Rhapsody, Staff Picks, RadioTime, SHOUTcast, etc.-- this required some new code on the SqueezeCenter side. In order to make these items configurable for adding to the top level menu, but otherwise not displayed as individual home menu items, they are sent over as a member of a new 'hidden' node. node=hidden items by default are not displayed.</p>"},{"location":"reference/installing-applets/","title":"Installing SqueezePlay Applets","text":"<p>You may download and install these applets on your Squeezebox Controller to add extra capabilities or fun additions such as games. You can also read a guide to developing new applets.</p> <p>Currenty there are two ways to install an applet on your Squeezebox Controller:</p> <ul> <li>via applet installer (preferred)</li> <li>manual installation.</li> </ul> <p>For the applet installer to work, applet developers have to provide a repository-URL pointing to their applets. Many older applets unfortunately are not listed in a repository, that's why manual installation often is the only way to get an applet on the controller.</p>"},{"location":"reference/installing-applets/#applet-installer","title":"Applet Installer","text":"<p>Installing an applet is a two step process.</p> <ul> <li> <p>You need to have a 'repository-URL' which points to a repository XML file. See Repositories for some existing respositories you can use. You need to configure this on your Lyrion Music Server.</p> </li> <li> <p>On your SqueezeBox-Server (http://ServerName:9000) navigate to the settings-screen.</p> </li> <li>Select the 'Manage Plugins' tab</li> <li>In the text input area next to 'Additional Repositories', put the repository-URL of your applet(s) and click 'Apply'. If you have more than repository URL add the first and click apply, and then a new text input area will be shown. Continue adding respository urls as required.</li> </ul> <p></p> <p>You need to configure this on your Squeezebox-Controller or SqueezePlay!</p> <ul> <li>Navigate to Settings -&gt; Advanced -&gt; Applet Installer.</li> <li>In this menu you should see each of the applets which Squeezebox-Server has installed together with its version.</li> <li>Select which applets you wish to install on the remote and then select Install. This will cause the applets to be downloaded and installed. After they are installed the SqueezeBox Controller will restart (on the SqueezePlay you will need to shut it down and restart it manually).</li> <li> <p>Once restarted the new applets should be available, normally under the Extras menu (but it depends on the applet)</p> <p>If you can't see this menu you might have to activate it. Just go under 'Settings-&gt;Home Menu' where you will be able to activate the 'Extras'-menu</p> </li> </ul>"},{"location":"reference/installing-applets/#manual-installation","title":"Manual installation","text":"<p>If you want to install an applet manually you can do the following:</p> <ul> <li>Enable ssh access on the SBC. On the SqueezeBox Controller go to the Settings-&gt;Advanced-&gt;Remote Login and checking \"Enable SSH\". When you enable SSH you will be given a password (my default was 1234) and it will also give you the IP Address of the controller. Write both down.</li> </ul> <p>Note</p> <p>SSH is \"secure shell\" and it just a way of connecting remotely to computers and other devices.</p> <p>SCP is secure copy, which is a way of uploading/downloading files to computers and other devices.</p> <ul> <li>download WinSCP or some other SCP client - see this example of connecting to the SBC with WINSCP</li> <li>connect to the SCP and login as root with the password it gave you when you enabled ssh</li> <li>extract the zip file for the applet on your PC</li> <li>look in the extracted files and you will find another zip file</li> <li>extract that zip file</li> <li>use SCP to copy the folders from the second zip file into /usr/share/jive/applets on the SBC</li> <li>restart Squeezeplay</li> </ul> <p>Normally the applet will show up in the Extras menu but it can appear in the main menu as well. Source: https://forums.lyrion.org/showthread.php?t=47798</p>"},{"location":"reference/ip3k-graphics/","title":"Classic/Transporter/Boom Graphics Font Files","text":"<p>This document is about the bitmap files used to render the fonts on the legacy players (Clasic/Transporter/Boom). It does not cover any of the newer, colour display based devices (Radio/Touch/Controller).</p> <p>Font files reside in the <code>Graphics</code> folder</p> <p>For each font set (one font for each line of the display) there's a separate BMP file. For example:</p> <ul> <li><code>medium.1.font.bmp</code> - the font used at the top of the screen when in \"medium\" display mode</li> <li><code>medium.2.font.bmp</code> - the font used at the bottom of the screen when in \"medium\" display mode</li> </ul> <p>Single-line display modes, such as the Huge font, only require the bottom font file.</p> <p>Open these files in a bitmap editor (Gimp, Windows Paint etc.) and you'll see a long horizontal line of characters.</p> <p>For SqueezeboxG, the file is 17 pixels high. For Squeezebox2/3/Classic/Boom/Transporter it is 33 pixels high.</p> <p>The first 16 (SqueezeboxG) or 32 (Squeezebox2) rows are the font bitmaps themselves. The last row is used to mark the beginning and end of characters. One or more continuous pixels in this row indicate the end of the previous character.</p> <p>Each file has up to 256 characters using the latin1 character set, in order from 0 to 255.</p> <p>The first 31 characters in each standard font are reserved for use as special graphics characters. The first 17 of these are:</p> <ul> <li>0 - Inter-character spacing</li> <li>1 - Note symbol</li> <li>2 - Right arrow</li> <li>3 - Progress indicator end</li> <li>4 - Progress indicator first column (empty)</li> <li>5 - Progress indicator second column (empty)</li> <li>6 - Progress indicator additional columns (empty)</li> <li>7 - Progress indicator first column (full)</li> <li>8 - Progress indicator second column (full)</li> <li>9 - Progress indicator additional columns (full)</li> <li>10 - Cursor overlay</li> <li>11 - Moodlogic symbol</li> <li>12 - Empty circle [radio button symbol]</li> <li>13 - Full circle [radio button symbol]</li> <li>14 - Empty square [radio button symbol]</li> <li>15 - Full square [radio button symbol]</li> <li>16 - Bell symbol</li> </ul> <p>The inter-character spacing character must always be present. However if any pixels are set in it, then the server interprets this to mean no inter-character spacing. This is useful for font files defining custom characters which are intented to be displayed without space between them.</p> <p>The 32nd character is a space character, and the rest follow the latin1 character set.</p> <p>We used Adobe Photoshop to create the font files, saving them as 1bpp Windows BMP files.</p> <p>If you modify a font file, you'll need to restart the server to see your changes.</p>"},{"location":"reference/ip3k-graphics/#custom-fonts","title":"Custom Fonts","text":"<p>Plugins may choose to use font files to define custom characters to display on a graphics player. In this case the plugin should be distributed with font files which follow the naming convention:</p> <p><code>&lt;fontname&gt;.&lt;line_number&gt;.font.bmp</code></p> <p>These files should be placed in the plugin's root directory and the server restarted before they are available to the server.</p> <p>Custom fonts files define characters for the fontname specified by the file name. The first character chr(0) defines the inter character spacing and following characters define characters chr(1), chr(2), chr(3) etc.</p> <p>Note also that character 0x0a [chr(10)] is reserved and should not be used, as are characters 0x1b, 0x1c, 0x1d [chr(27) - chr(29].</p> <p>Although a plugin may build strings using character values, it is normal to register a name for each character using <code>Slim::Display::Graphics::setCustomChar</code>.</p>"},{"location":"reference/lyrion-music-server/","title":"Lyrion Music Server","text":"<p>Lyrion Music Server is the server software that powers audio players from Logitech (formerly known as Slim Devices), including Squeezebox 3rd Generation, Squeezebox Boom, Squeezebox Receiver, Transporter, Squeezebox2, Squeezebox and SLIMP3.  The LMS server also powers various open-source clients using the same protocols.</p> <p>Before version 9.0 LMS was known as Logitech Media Server, and before 7.7 LMS was known as Squeezebox Server (version 7.4 to 7.6) and SlimServer (before 7.4). Version 7.7 was the last version released by Logitech, from version 7.8 and onwards LMS had been released by the LMS Community.</p> <p>Lyrion Music Server is Open Source Software and written in Perl. Lyrion Music Server runs on pretty much any platform that Perl runs on, including Linux, Mac OSX, Solaris and Windows.</p> <p>Sourcecode can be found on  Github: https://github.com/LMS-Community/slimserver.</p>"},{"location":"reference/lyrion-music-server/#version-history","title":"Version history","text":""},{"location":"reference/lyrion-music-server/#lms-91","title":"LMS 9.1","text":"<p>Currently in development.</p> <p>Release notes</p>"},{"location":"reference/lyrion-music-server/#lms-90","title":"LMS 9.0","text":"<p>Current stable. Initially released on November 29, 2024.</p> <p>This version is the first release using the new name Lyrion Music Server and the first post-Logitech era major release!</p>"},{"location":"reference/lyrion-music-server/#works","title":"Works","text":"<p>Besides the more cosmetic changes of re-branding the product and refreshing the Default web UI, great enhancements to the music browsing experience have been contributed. LMS now allows browsing and searching for classical works. To get started, ensure your classical music contains the tags \"Work\" and \"Composer\". You can also create a \"worksort\" tag if you like, though LMS will do its best to sequence works properly (eg \"Symphony 100\" will come after \"Symphony 99\") even without this.</p> <p>Highlights:</p> <ul> <li>You will find a new main menu item \"Works\" which will show your classical works in Composer/Work name sequence.</li> <li>With release type grouping enabled, when browing an artist you will see a Works category, under which will be one or more albums which contain the work.</li> <li>The various search options in LMS have been enhanced so that you can search by, and/or see results by, Work.</li> <li>In Additional Browse Modes, there is now an option to browse by Work for the additional menus you create.</li> <li>If you have albums (probably a large box set) which includes more than one performance of the same work, you can add a \"Performance\" tag to those albums so that LMS knows to show you the performances separately even when they are on the same album. You could also use the \"Performance\" tag even if there is only one performance of a work on an album, to better describe the performance when browsing/searching.</li> <li><code>WORK</code> and <code>PERFORMANCE</code> can now be used in Title Formats for the Default web interface and player displays.</li> </ul>"},{"location":"reference/lyrion-music-server/#role-enhancements","title":"Role enhancements","text":"<p>LMS now allows you to create any number of user-defined roles for your music, eg Vocalist, Violinist, Drummer, Engineer..., limited only by your imagination. You can also create <code>xxxSORT</code> tags, for example if you've created a <code>DRUMMER</code> tag you can also create a <code>DRUMMERSORT</code> tag which LMS will respect.</p> <p>Highlights:</p> <ul> <li>Once you have tagged your music accordingly and told LMS about the role tags you want it to scan, you can create menus for your new roles in Additional Browse Modes and see categories for your user-defined roles when browsing artists.</li> <li>LMS now allows you to specify which roles (including your user-defined roles if you want) to include in the \"All Artists\" menu (or the \"Artists\" menu if you are using the unified artist list).</li> <li>You can also specify which roles (including user-defined roles) to create artist links for in album listings, rather than have LMS decide for you.</li> </ul> <p>These changes will require a rescan of your library.</p>"},{"location":"reference/lyrion-music-server/#other-changes","title":"Other changes","text":"<p>Other noteworthy updates in LMS9 include:</p> <ul> <li>Improved first-start experience, suggesting installation of some essential 3rd party plugins</li> <li>Improved \"New Music\" behaviour: this is now based on the time when a song was added to the collection</li> <li>New \"Recently changed Music\": this is what used to be the old \"New music\", based on a file's timestamp</li> <li>Many translation updates: Czech, Danish, Dutch, French, Hungarian, Portuguese</li> <li>Windows is now 64-bit only (please be patient on your first installation - the process can be a bit slow)</li> <li>macOS integration has been completely rewritten. It's no longer a preference pane, but a simple menu bar item (macOS 10.11 required).</li> <li>The Docker image now is based on Debian 12: you'll have to create a new container based on the lmscommunity/lyrionmusicserver image. But no worries: you'll be able to re-use your existing data folders.</li> </ul> <p>Release notes, Announcement</p>"},{"location":"reference/lyrion-music-server/#lms-85","title":"LMS 8.5","text":"<p>This is the last Logitech branded release. Its main change compared to the previous version is the removal of all MySqueezebox.com integration.</p> <p>Release notes</p>"},{"location":"reference/lyrion-music-server/#lms-84","title":"LMS 8.4","text":"<p>Initially released on Feb 8, 2024.</p> <ul> <li>Add support for Release Types (see eg. on MusicBrainz).</li> <li>Add plugins for ClassicalRadio.com, DI.fm, JazzRadio.com, RadioTunes.com, RockRadio.com, ZenRadio.com.</li> <li>\u200bAdd an optional artist albums view which groups albums by release type and contribution.</li> <li>New \"Advanced Tag View\" plugin allows you to show more information in the Track Info menu, without the need to drill down to \"View Tags\"</li> <li>\u200bAdd experimental support for Windows 64-bit\u200b</li> </ul> <p>Release notes, Announcement</p>"},{"location":"reference/lyrion-music-server/#lms-83","title":"LMS 8.3","text":"<p>Initially released on Nov 4, 2022.</p> <p>Logitech Media Server v8.3.0 is mostly a maintenance release without any major new features. Oh, hold on... unless you're a Mac user! Apple provided a good reason to get LMS v8.3.0 out: macOS 13 Ventura removed the Perl version we've relied on for about a decade. So, the new feature is:</p> <ul> <li>Support for macOS 13 (native Apple Silicon as well as Intel)</li> </ul> <p>But there are a ton of changes, smaller or bigger. A few noteworthy changes:</p> <ul> <li>Updated French, British English, Czech, and Dutch translations.</li> <li>Improved indexing performance for the Fulltext Search of large playlists (thousands of tracks).</li> <li>Improved security for the MySqueezebox.com integration.</li> <li>Improved JavaScript support for the Settings pages in the Classic/Light skin (and thus Material).</li> <li>More robust https streaming for some very long (but finite) streams and larger files (hires).</li> <li>Removal of video/picture support.</li> </ul> <p>Other important changes are the removal of PowerPC, Sparc, i386 (Mac), and really old Perl versions are no longer part of the builds.</p> <p>Release notes</p>"},{"location":"reference/lyrion-music-server/#lms-82","title":"LMS 8.2","text":"<p>Initially released on Aug 3, 2021. This release comes with a lot of improvements, not big new features. But many of them address long standing pain points. Some of the highlights are:</p> <ul> <li>Improved podcast support (search, more robust playback)</li> <li>Improved online music integration (smarter matching of artists, track stats support)</li> <li>Improved shuffling method to give more \"balanced\" results</li> <li>Add Balance setting for players which support it</li> <li>Improved robustness for online streams</li> <li>Add resampling for Ogg/Flac streams</li> </ul> <p>Release notes</p>"},{"location":"reference/lyrion-music-server/#lms-81","title":"LMS 8.1","text":"<p>Initially released on Dec 23, 2020, LMS 8.1 brings the following changes:</p> <ul> <li>Support for Deezer lossless (FLAC) streaming</li> <li>Improvements to the transcoding framework to allow protocol handlers to enforce transcoding (eg. TIDAL lossless)</li> <li>Support for macOS 11 Big Sur and Apple Silicon (M1 CPU - using Rosetta)</li> <li>Optionally allow installation of plugins which were targeted at Logitech Media Server 7.*</li> </ul> <p>Other important changes are the removal of the ReadyNAS NV/Duo/Pro devices, and Perl 5.8 in general. We actually broke Perl 5.8 compatibility somewhere around LMS 7.9.3. These platforms haven't been working correctly since then. Removing them thus doesn't really change anything. ReadyNAS users please note: this is really only about the old, legacy, generation 1/2 Raidiator v4 based devices. Any recent ReadyNAS unit, which was based on Debian, should still continue to work as before. Good or bad.</p> <p>Release notes</p>"},{"location":"reference/lyrion-music-server/#lms-80","title":"LMS 8.0","text":"<p>Initially released on Nov 22, 2020, LMS 8 adds a lot of improvements for users of online music. But there's more:</p> <ul> <li>Import your online music library to your music library. No matter whether your favorite album or artist is stored on your disk, or on some music service - it shows up right where you expect \"your music\" to be.</li> <li>https is the new http: most web sites nowadays are delivered over the secure https protocol. And so are more and more online music streams. Logitech Media Server 8 allows you to continue to listen to your favorite stations, as well as music services like TIDAL.</li> <li>Allow to paste TIDAL and Deezer web links to the Tune In field (or use the corresponding CLI command) to play those items.</li> <li>Plugins now can use SOCKS to access online sources.</li> <li>Helper applications (faad, flac) have been updated, as well as some of the Perl libraries, like Audio::Scan (not all supported platforms).</li> <li>Docker is everywhere. A Logitech Media Server image is now available on Docker Hub.</li> <li>Updated translations for Swedish and Dutch.</li> </ul> <p>Release notes</p>"},{"location":"reference/lyrion-music-server/#lms-79","title":"LMS 7.9","text":"<p>Initially released on Mar 8, 2017. LMS 7.9 comes with lots of improvements, both under the hood as well as in your preferred user interface:</p> <ul> <li>Fulltext search</li> <li>Native support of DSD</li> <li>Customizable browse modes</li> <li>Direct access to other source (LMS or UPnP)</li> <li>Playback of local tunes without adding them to the library</li> <li>Filtered views</li> </ul> <p>Release notes</p>"},{"location":"reference/lyrion-music-server/#lms-78","title":"LMS 7.8","text":"<p>Initially released on Mar 27, 2014, this is the first community supported version of LMS. Major improvements over the \"official\" 7.7.x version:</p> <ul> <li>Improved Podcast plugin to support all players</li> <li>Add new scanner step to discover new/changed/removed standalone artwork for album covers</li> <li>Improved Internet Radio integration to work independently from mysb.com if needed</li> <li>Support for Ogg FLAC in the server and Squeezeplay-based players</li> <li>Added support for setting alarm playlist shuffle mode (thanks hickinbottoms!)</li> <li>Volume adjustment for internet music services</li> <li>Add Triode's LocalFile 'loc' ProtocolHandler support for squeezelite.</li> </ul> <p>Release notes</p>"},{"location":"reference/migrate-win32-win64-de/","title":"Von der Windows 32-bit Version auf 64-bit umsteigen","text":"<p>Wenn Sie Lyrion Music Server auf einem Windows 64-Bit System betreiben, empfehlen wir Ihnen dringend, das 64-Bit-Paket zu installieren. Es enth\u00e4lt aktuellere Bibliotheken und verl\u00e4sst sich nicht auf ein Tool, das von seinen Entwicklern vor vielen Jahren aufgegeben wurde.</p> <p>Das 32-Bit Buildsystem l\u00e4uft derzeit auf einer virtuellen Maschine, die auf einem Mac Mini von 2014 l\u00e4uft... wenn diese Maschine ihren Betrieb einstellt, wird die 32-Bit Version verschwinden. Das Buildsystem wird nicht aktualisiert werden.</p>"},{"location":"reference/migrate-win32-win64-de/#gut-zu-wissen","title":"Gut zu wissen","text":"<p>Die neue 64-Bit-Version verf\u00fcgt weder \u00fcber ein Symbol in der Taskleiste, noch \u00fcber ein Kontrollfeld. Es gibt ein Werkzeug im Startmen\u00fc zur Konfiguration des Lyrion Music Server Startmodus. Die restliche Konfiguration erfolgt \u00fcber die LMS Web UI http://localhost:9000.</p>"},{"location":"reference/migrate-win32-win64-de/#logitech-media-server-or-lyrion-music-server-32-bit-entfernen","title":"Logitech Media Server (or Lyrion Music Server) 32-bit entfernen","text":"<p>Rufen Sie das Windows-Startmen\u00fc auf, um das LMS-Deinstallationsprogramm zu starten. Wenn Sie gefragt werden, ob Sie auch Voreinstellungen und Daten entfernen m\u00f6chten, ablehnen!</p> <p>Die 64-Bit-Version ist in der Lage, die Daten einer \u00e4lteren Installation zu \u00fcbernehmen. Sie m\u00fcssen also nicht alles neu konfigurieren.</p>"},{"location":"reference/migrate-win32-win64-de/#die-64-bit-version-installieren","title":"Die 64-bit Version installieren","text":"<p>Wenn Sie die 64-Bit-Version zum ersten Mal installieren, m\u00fcssen Sie etwas Geduld haben: Das Installationsprogramm bringt Strawberry Perl auf Ihr System. Dies kann einige Minuten dauern, muss aber nur einmal durchgef\u00fchrt werden.</p> <p>Sobald die Installation abgeschlossen ist, sollte LMS laufen und Sie sollten in der Lage sein, unter http://localhost:9000 darauf zuzugreifen.</p>"},{"location":"reference/migrate-win32-win64/","title":"How to migrate from Windows 32-bit build to 64-bit","text":"<p>If you're running Lyrion Music Server on a Windows 64-bit system, we strongly recommend you install the 64-bit package. It comes with more up to date libraries and doesn't rely on a tool which has been abandoned by its developers many years ago.</p> <p>The 32-bit build system is currently relying on a virtual machine running on a 2014 Mac Mini... if that machine ceases operation, the 32-bit Windows build will be gone. The build system will not be updated.</p>"},{"location":"reference/migrate-win32-win64/#important-to-know","title":"Important to know","text":"<p>The new 64-bit version doesn't provide a toolbar icon, or a control panel. There's a tool in the Start menu to configure the Lyrion Music Server startup mode. The remaining configuration happens through the LMS web UI http://localhost:9000.</p>"},{"location":"reference/migrate-win32-win64/#uninstall-logitech-media-server-or-lyrion-music-server-32-bit","title":"Uninstall Logitech Media Server (or Lyrion Music Server) 32-bit","text":"<p>Go to the Windows Start menu to run the LMS uninstaller. When asked whether you want to remove prefs and data, too, decline! The 64-bit version is able to pick up the data from an older installation. So you won't have to re-configure everything.</p>"},{"location":"reference/migrate-win32-win64/#install-the-64-bit-version","title":"Install the 64-bit version","text":"<p>The first time you install the 64-bit version you'll have to be patient: the installer will bring Strawberry Perl to your system. This can take several minutes, but only needs to be done once.</p> <p>Once the installation has completed LMS should be running, and you should be able to access it on http://localhost:9000.</p>"},{"location":"reference/music-service-plugin/","title":"Music Service Plugin Implementation Guide","text":"<p>This documen tries to outline how to implement an integration with a music service. It's base on the experience made with eg. Spotty or Qobuz. Check out one of those plugins if you want to get more ideas.</p>"},{"location":"reference/music-service-plugin/#filemodule-organization","title":"File/Module Organization","text":"<p>Here's a rough layout of a typical folder and file structure for a plugin:</p> <ul> <li><code>Plugins/MyMusicService</code><ul> <li><code>Plugin.pm</code>: this is the entry point to the plugin. It deals with setting up all dependencies and gives shared code a home. It initializes the settings, importer, protocol handler etc.</li> <li><code>API.pm</code>: this module implements the API interaction with the music service. In many cases we want to further split it up (see below) for async (server) and sync (scanner/importer) modes. In this case I put shared code in <code>API.pm</code>, eg. URLs, data manipulation routines etc. I usually provide one method per API call.<ul> <li><code>API/Async.pm</code>: these API call implementations use LMS' own <code>Slim::Networking::SimpleAsyncHTTP</code> class to run non-blocking requests. This is crucial to not interrupt playback, as LMS is single threaded.</li> <li><code>API/Sync.pm</code>: in order to run synchronous API calls you can use <code>LWP::UserAgent</code>. This is important for eg. the importer code, as the scanner doesn't provide the aforementioned support for async calls.</li> </ul> </li> <li><code>OPML.pm</code> (or <code>Browse.pm</code>): the <code>OPML</code> name is a bit outdated. What I put in there is the code which provides the browse modes, the navigation tree. All API calls done within this module must use async HTTP requests to not block the server. I try to separate out navigation tree nodes into their own subs. Typically such a sub would call the API to get back the raw data, then transform this data into navigation elements.</li> <li><code>ProtocolHandler.pm</code>: the protocol handler class deals with much of the playback (and deserves its own document...). LMS uses pseudo protocols like <code>spotty://</code> or <code>qobuz://</code> to deal with tracks and other aspects of these services.</li> <li><code>Settings.pm</code>: handle configuration tasks for the plugin. Sometimes there's more to it, eg. if special pages or handlers are required for authentication etc. In this case we can have additional modules in the <code>Settings</code> namespace.<ul> <li><code>Settings/Auth.pm</code>: another handler to deal with authentication</li> </ul> </li> <li><code>Importer.pm</code>: this module is used when a music service can be imported into the \"My Music\" collection. It would be called to import favorite artists, albums, etc. from the music service. All API calls done from the importer must use synchronous HTTP requests!<ul> <li><code>startScan()</code>: this is the entry point called from the scanner code. Everything called from here must not use any of the async stuff usually used in the server.</li> <li><code>needsUpdate()</code>: this method tells the Online Music Library Integration plugin whether any change in a user's music service account requires a rescan of the library. This method must use async calls, as it's run in the server. It should be a relatively cheap call or series of calls to get a fingerprint of the user's library with the service. If the fingerprint changes, OMLI should re-run a scan. Some services would have such a fingerprint or \"last changed\" timestamp in the user's profile. On others it can be helpful to see how many itemst there are (albums, playlists, artists), and/or the latest change to any of them happened etc. This avoids pulling in all the library just to figure out whether a rescan was even required.</li> </ul> </li> <li><code>HTML/EN/plugins/MyMusicService</code>: this folder provides the home for HTML templates, static content like stylesheets, JavaScript etc.<ul> <li><code>html</code>: this additional subfolder is the home of static content. It can be accessed without an additional page handler. Images belong here.</li> <li><code>settings</code>: if there's a need for more than the basic settings page I often put the templates in their own subfolder. That's absolutely optional.</li> </ul> </li> <li><code>Bin/*</code>: provide a home for platform specific binaries, if needed.</li> <li><code>lib</code>: put your additional CPAN modules in there.</li> <li><code>install.xml</code>: the plugin's manifest file.</li> <li><code>strings.txt</code>: a simple text file with string translations. See Adding Translations for details about the format.</li> </ul> </li> </ul>"},{"location":"reference/music-service-plugin/#important-notes","title":"Important Notes","text":"<ul> <li>Be kind to the music service. Try to avoid unnecessary requests by using caching etc. You don't want to run into request rate limitations.</li> <li>Don't cache too aggressively: users know when they changed something on the service. They want changes to show up in LMS immediately. Therefore I'd often cache user specific data like favorites for a minute or two, only.</li> <li>Read the API documentation.<ul> <li>Some APIs allow you to tell what data to return. Don't request data you don't need!</li> <li>Respect rate limitations. Many services return headers with information about available requests etc. Use them, don't run blindly until you're blocked. It could harm the plugin's reputation.</li> <li>Sometimes there are requests like profile information, which can tell us whether favorites have changed or not. This usually is more efficient than requesting that data whenever needed.</li> <li>Don't try to avoid paywalls! We want to be good citizens. Doing illegal activity could not only harm you, but all of the LMS community!</li> </ul> </li> <li>Start small, release often. Start with a basic plugin and add features as requests come up. This allows you to optimize your code along the way, before you've got too much code.</li> <li>Try to support multiple accounts. Your users sooner or later will ask for them. In order to do this you should make the API implementation instantiable. That way each client can carry a reference to their API instance.</li> <li>Don't hard code textual content. Always use localizable string tokens.</li> </ul>"},{"location":"reference/repository-dev/","title":"LMS Repositories Developers","text":"<p>LMS 7.3+ includes a plugin which enables extensions to be downloaded to LMS and Jive (for example Squeezebox Radio). 3rd party authors may host their own content for download and define a repository xml file which refers to it. The xml format is:</p> <pre><code> &lt;?xml version=\"1.0\"?&gt;\n &lt;extensions&gt;\n   &lt;details&gt;\n     &lt;title lang=\"EN\"&gt;The Repository's Title&lt;/title&gt;\n   &lt;/details&gt;\n   &lt;applets&gt;\n     &lt;applet name=\"AppletName\" version=\"1.0\" target=\"jive\" minTarget=\"7.3\" maxTarget=\"7.3\"&gt;\n       &lt;title lang=\"EN\"&gt;English Title&lt;/title&gt;\n       &lt;title lang=\"DE\"&gt;German Title&lt;/title&gt;\n       &lt;desc lang=\"EN\"&gt;English description&lt;/desc&gt;\n       &lt;desc lang=\"DE\"&gt;German description&lt;/desc&gt;\n       &lt;changes lang=\"EN\"&gt;English change log&lt;/changes&gt;\n       &lt;changes lang=\"DE\"&gt;German change log&lt;/changes&gt;\n       &lt;creator&gt;Name of Author&lt;/creator&gt;\n       &lt;email&gt;email of Author&lt;/email&gt;\n       &lt;url&gt;url for zip file&lt;/url&gt;\n       &lt;sha&gt;digest of zip&lt;/sha&gt;\n     &lt;/applet&gt;\n   &lt;/applets&gt;\n   &lt;plugins&gt;\n     &lt;plugin name=\"PluginName\" version=\"1.0\" target=\"windows\" minTarget=\"7.9\" maxTarget=\"*\"&gt;\n       &lt;title lang=\"EN\"&gt;English Title&lt;/title&gt;\n       &lt;title lang=\"DE\"&gt;German Title&lt;/title&gt;\n       &lt;desc lang=\"EN\"&gt;English description&lt;/desc&gt;\n       &lt;desc lang=\"DE\"&gt;German description&lt;/desc&gt;\n       &lt;category&gt;categorycode&lt;/category&gt;\n       &lt;changes lang=\"EN\"&gt;English change log&lt;/changes&gt;\n       &lt;changes lang=\"DE\"&gt;German change log&lt;/changes&gt;\n       &lt;creator&gt;Name of Author&lt;/creator&gt;\n       &lt;email&gt;email of Author&lt;/email&gt;\n       &lt;url&gt;url for zip file&lt;/url&gt;\n       &lt;sha&gt;digest of zip&lt;/sha&gt;\n     &lt;/plugin&gt;\n   &lt;/plugins&gt;\n   &lt;wallpapers&gt;\n     &lt;wallpaper name=\"WallpaperName\" url=\"url for wallpaper file\" /&gt;\n   &lt;/wallpapers&gt;\n   &lt;sounds&gt;\n     &lt;sound name=\"SoundName\"     url=\"url for sound file\"     /&gt;\n   &lt;/sounds&gt;\n &lt;/extensions&gt;\n</code></pre> <ul> <li><code>name</code> - the name of the applet/plugin - must match the file naming of the lua/perl packages</li> <li> <p><code>version</code> - the version of the applet/plugin (used to decide if a newer version should be installed)</p> <p>an example of a set of increasing versions ... 1.0, 1.1a, 1.1b, 1.1</p> </li> <li> <p><code>target</code> - string defining the target, you can specify multiple target by separating them by '|' (optional - all if not defined)</p> <p>For applets you can use 'jive' (=SB-Controller), 'fab4' (=SB-Touch) or 'baby' (=SB-Radio). Omit the target attribute if you want your applet to be available for all devices, otherwise set to one or more targets (split by |).</p> <p>For plugins if set this specfies the target architecture and may include multiple strings from \"windows|mac|unix\"</p> </li> <li> <p><code>minTarget</code> - min version of the target software</p> </li> <li><code>maxTarget</code> - max version of the target software or * for no limit</li> <li><code>title</code> - contains localisations for the title of the applet (optional - uses name if not defined)</li> <li><code>desc</code> - localised description of the applet or plugin (optional)</li> <li><code>category</code> - (plugin only) a single category from the list shown below (optional)</li> <li><code>changes</code> - localised change log of the applet or plugin (optional)</li> <li><code>link</code> - (plugin only) url for web page describing the plugin in more detail</li> <li><code>creator</code> - name of author(s) (optional)</li> <li><code>email</code> - email of authors(s) (optional)</li> <li><code>url</code> - url for the applet/plugin itself, this should be a zip file</li> <li> <p><code>sha</code> - (plugin and applet only) sha1 digest of the zip file which is verifed before the zip is extracted</p> </li> <li> <p><code>categorycode</code> - it is used when generating lists of plugins to make it easier for users to browse by topic - pick from one of the following (without quotation marks):</p> <p>'hardware', 'information', 'misc', 'musicservices', 'playlists', 'radio', 'scanning', 'skin', 'tools'</p> <p>If you are unsure which category to pick then do not provide one or use 'misc' for miscellaneous. If the plugin could be in more than one category then pick the one that you think end-users would be most likely to think of first when trying to find it. If you invent your own categorycode then it will be ignored and the plugin will appear in the 'misc' category.</p> </li> </ul> <p>Further details are available in the comments of the Slim::Plugins::Extensions::Plugin source file.</p> <p>Take a look at pre-existing repository definition files to see how other developers have used this. You can see an aggregation of these in the auto-generated extension list at LMS-Community/lms-plugin-repository</p>"},{"location":"reference/repository-dev/#lms-plugins","title":"LMS Plugins","text":"<p>Authors should create their plugins in the standard way with packages named as Plugins::name:: where 'name' is reused for the name of the plugin in the repository.</p> <p>A common starting point for new development is to look at a pre-existing plugin (probably a simple one) to see how it was put together.</p> <p>Plugins may be packaged into a zip file zipping the contents of the directory into a zip file. A sha1 checksum of the zip file should also be created. The zip file should then be hosted at a url which is defined in the url element of the plugin xml entry with the sha1 element containing its sha1 checksum.</p> <p>Note</p> <p>It's important to include the version number in the archive's filename, as LMS otherwise might be re-using cached data, failing the upgrade.</p>"},{"location":"reference/repository-dev/#hashing-files","title":"Hashing Files","text":"<p>If developing on Windows then a good small freeware utility to produce a sha1 hash can be found at Nirsoft - HashMyFiles.</p>"},{"location":"reference/slim-utils-os-custom/","title":"Customizing Lyrion Music Server using <code>Slim::Utils::OS::Custom</code>","text":"<p>If you've been working on porting SC to a new platform, a NAS or similar, you might have seen needs to patch Squeezebox Server to achieve your goal. Many of these changes were due to different file system layouts or other OS specifics. Some of them had been hardcoded into Slim::Utils::OSDetect or other modules for the officially supported platforms. As of Squeezebox Server (formerly known as SqueezeCenter) version 7.3 there's a new infrastructure to better encapuslate and simplify such changes. While we do provide modules for the supported platforms, you can easily add your own platform support using a Slim::Utils::OS::Custom module.</p>"},{"location":"reference/slim-utils-os-custom/#how-does-it-work","title":"How does it work?","text":"<p>When Squeezebox Server is started, it's loading the module Slim::Utils::OSDetect. This module tries to detect the operating system Squeezebox Server is running on, and initializes the OS dependant code. This code is organized in classes, which inherit Slim::Utils::OS. These classes provide methods to query OS specific file paths, scanners, proxy detection and more. If OSDetect finds Slim/Utils/OS/Custom.pm, it will try to load this before doing any of the other tests. This allows you to hook into Squeezebox Server by adding your own class. Only a few simple steps are needed:</p> <ul> <li>Create a new module Slim::Utils::OS::Custom which inherits from Slim::Utils::OS or one of its sub-classes. It's minimum might look like this:</li> </ul> <pre><code>package Slim::Utils::OS::Custom;\n\nuse strict;\nuse base qw(Slim::Utils::OS);\n\n1;\n</code></pre> <ul> <li>Overwrite some of the existing methods to add your own specifics:</li> </ul> <pre><code>package Slim::Utils::OS::Custom;\n\nuse strict;\nuse base qw(Slim::Utils::OS);\n\nsub initDetails {\n    my $class = shift;\n\n    $class-&gt;{osDetails} = $class-&gt;SUPER::initDetails();\n    $class-&gt;{osDetails}-&gt;{name} = \"My very own Unix based OS\";\n\n    return $class-&gt;{osDetails};\n}\n\nsub initPrefs {\n    my ($class, $prefs) = @_;\n\n    $prefs-&gt;{scannerPriority}   = 20;\n    $prefs-&gt;{resampleArtwork}   = 0;\n    $prefs-&gt;{disableStatistics} = 1;\n}\n\n1;\n</code></pre> <p>All this does is create a new name for your OS, and override some default preferences.</p>"},{"location":"reference/slim-utils-os-custom/#available-hooks","title":"Available Hooks","text":"<ul> <li><code>initDetails()</code> - initialize a hash of OS details, called during initialization of the module</li> </ul> <pre><code>sub initDetails {\n    my $class = shift;\n\n    $class-&gt;{osDetails}-&gt;{os}     = 'Linux';\n    $class-&gt;{osDetails}-&gt;{osName} = 'My Secret Linux';\n}\n</code></pre> <ul> <li><code>details()</code> - return a reference to the details hash</li> <li><code>initPrefs()</code> - called when preferences are initialized. Can be used to eg. define performance prefs for lower end hardware (see above example)</li> <li><code>initSearchPath()</code> - initialize the search path for helper binaries</li> <li><code>dirsFor()</code> - return paths for various items (strings, plugins, modules etc. - see Slim::Utils::OS for the complete list)</li> <li><code>ignoredItems()</code> - return a hash of items which should be ignored in scans or when browsing the filesystem</li> </ul> <pre><code>sub ignoredItems {\n    return (\n        'bin'       =&gt; '/',\n        'etc'       =&gt; '/',\n        'lib'       =&gt; '/',\n        'proc'      =&gt; '/',\n        'root'      =&gt; '/',\n        'sbin'      =&gt; '/',\n        'tmp'       =&gt; '/',\n        'usr'       =&gt; '/',\n        'var'       =&gt; '/',\n        'lost+found'=&gt; 1,\n    );\n}\n</code></pre> <ul> <li><code>scanner()</code> - return path to an alternative scanner or location</li> <li><code>getProxy()</code> - read proxy settings from underlying OS</li> <li><code>getPriority()</code>/<code>setPriority()</code> - get/set server priority</li> <li><code>dontSetUserAndGroup()</code> - return true if the server should not set the user and group (allowing to be run as root)</li> <li><code>logRotate()</code> - add some method to do poor men's log rotation if the system doesn't do this for you</li> <li><code>skipPlugins()</code> - return a list of plugins you don't want to be loaded on your system</li> <li><code>canAutoUpdate()</code>, initUpdate(), getUpdateParams(), installerExtension(), installerOS() - enable and configure automatic downloading</li> <li><code>directFirmwareDownload()</code> - Return true if you don't want Squeezebox Server to download and cache firmware upgrades for your players on your system. It will then tell the player to pull them directly from the source server.</li> <li><code>canRestartServer()</code> - can the system restart the server?</li> <li><code>restartServer()</code> - restart server</li> </ul> <p>More hooks can be added if needed.</p>"},{"location":"reference/slimbrowse/","title":"SlimBrowse Protocol (\"Squeezeplay Interface\")","text":"<p>Interface specifications for browsing using Jive. What this document lays out is how browse menus sent in request responses are coded on the LMS side that SqueezePlay can read and interpret correctly.</p> <p>Note</p> <p>This page does not layout how to manage \"home menu\" items, that is, those top-level menu items sent to SqueezePlay as part of a \"menu:menu\" cli command request from SqueezePlay.</p> <p>Home Menu items are managed differently.</p>"},{"location":"reference/slimbrowse/#introduction","title":"Introduction","text":"<p>SlimBrowser is designed to browse music from SqueezeCenter. It expects data in the following form to build its menus (using approximate Perl syntax, where <code>{}</code> denotes a hash and <code>[]</code> an array):</p> <pre><code>{\n    base = {\n        &lt;base_fields&gt;\n    },\n    count = &lt;count_value&gt;,\n    rescan = 1,\n    goNow = &lt;window push directive&gt;,\n    window = {\n        &lt;window_fields&gt;\n    },\n    item_loop = [\n        {\n            &lt;item_fields&gt;\n        },\n        {\n            &lt;item_fields&gt;\n        },\n        ...,\n    ],\n}\n</code></pre> <p>where (items in bold are mandatory):</p> <ul> <li><code>base</code><ul> <li>Contains are a number of fields applicable to the entire window/menu as defined in </li> </ul> </li> <li><code>count</code><ul> <li>Positive integer indicating how many items are available for the given query (which may be different than the number of items in the item_loop array; Jive requests shall support paging).</li> </ul> </li> <li><code>rescan</code><ul> <li>If present with value 1, indicates a rescan is in progress. Jive behavior TBD.</li> </ul> </li> <li><code>goNow</code><ul> <li>If present with a supported value, will immediately push the Squeezeplay UI to another pre-defined window. Supported values are \"home\", \"nowPlaying\", and \"playlist\", which will immediately push the Squeezeplay UI to the Home screen, the Now Playing screen, or the current playlist screen, respectively.</li> </ul> </li> <li><code>window</code><ul> <li>if a window block is sent at the top level with the response data, the current rendered window on Squeezeplay should be styled with the parameters laid out in . Note that a window block contained within the base block or within an item block in the item_loop array is not for the current window but for the window created when executing a menu item callback (i.e. the \"next\" window\"). <li><code>item_loop</code><ul> <li>Array containing the items, each containing a number of fields applicable to an individual menu item as defined in . A menu item can itself be a list, i.e. contain the fields described here to define the lower level. See hierarchical support below."},{"location":"reference/slimbrowse/#base_fields","title":"<code>&lt;base_fields&gt;</code>","text":"<p>These fields allow defining values applicable to the entire menu or window.</p> <pre><code>{\n    icon = \"...\"\n    jsonrpc = \"http://...\"\n    window = {\n        &lt;window_fields&gt;\n    }\n    actions = {\n        &lt;actions_fields&gt;\n    }\n    nextWindow = \"...\"\n    setSelectedIndex = \"...\"\n    onClick = \"...\"\n}\n</code></pre> <ul> <li><code>icon</code><ul> <li>Full or partial base URL for images.</li> </ul> </li> <li><code>window</code><ul> <li>Allows specifying the elements to use for a window opened from this menu. See <code>&lt;window_fields&gt;</code>.</li> </ul> </li> <li><code>actions</code><ul> <li>Allows specifying the command(s) to use for this menu. See <code>&lt;actions_fields&gt;</code>.</li> </ul> </li> <li><code>jsonrpc</code><ul> <li>Allows to override the JSONRPC URL used by Jive (defaults to the JSON RPC server of the LMS it's browsing from).</li> </ul> </li> <li><code>nextWindow</code><ul> <li>Specify a specific <code>nextWindow</code> for items in this window to jump to. See <code>&lt;item_fields&gt;</code> section for more detail.</li> </ul> </li> <li><code>setSelectedIndex</code><ul> <li>Sets the selected index for the menu (if one exists) for the window loaded as specified by the <code>nextWindow</code> param. If no <code>nextWindow</code> is provided but a <code>setSelectedIndex</code> is, Squeezeplay will assume <code>nextWindow = 'refresh'</code>,</li> </ul> </li> <li><code>onClick</code><ul> <li>specify a specific window for items to refresh with new data when the item is selected (this is really for use with radio/checkbox/choice items). <code>refreshMe</code>, <code>refreshOrigin</code>, and <code>refreshGrandparent</code> are valid values</li> </ul> </li> </ul>"},{"location":"reference/slimbrowse/#item_fields","title":"<code>&lt;item_fields&gt;</code>","text":"<p>These fields are parsed into a menu item. Some fields are designed to complement fields defined in the <code>&lt;base_fields&gt;</code>.</p> <pre><code>{\n    text = \"...\"\n    textkey = \".\"\n    icon-id = ...\n    icon = \"...\"\n    extid = \"...\"\n    radio = val\n    checkbox = val\n    slider = val\n    selectedIndex = val\n    choiceStrings = [ array ]\n    nextWindow = val\n    setSelectedIndex = integer\n    onClick = val\n    showBigArtwork = ...\n    input = {\n        &lt;input_fields&gt;\n    }\n    window = {\n        &lt;window_fields&gt;\n    }\n    actions = {\n        &lt;actions_fields&gt;\n    }\n    &lt;action_alias&gt; = \"...\"\n}\n</code></pre> <p>Where (items in bold are mandatory):</p> <ul> <li><code>text</code><ul> <li>Menu item text. May contain <code>\\n</code>, in which case the item is displayed on multiple lines.</li> </ul> </li> <li><code>textkey</code><ul> <li>Single character indicating the sorted text key (index) of the item (introduced in 7.6).</li> </ul> </li> <li><code>icon-id</code><ul> <li>Artwork ID. Will be fetched using a separate http request to LMS using the well known URL. The size is defined by the style. <code>icon-id</code> has precedence over <code>icon</code> (defined below).</li> </ul> </li> <li><code>icon</code><ul> <li>Full or partial URL of some image to display.</li> </ul> </li> <li><code>extid</code><ul> <li>The album's external ID, if it is eg. from an online music service.</li> </ul> </li> <li><code>radio</code><ul> <li>If present, indicates a radio button is to be created for this item. Radio buttons must also involve a do action, defined in <code>&lt;action_fields&gt;</code>.</li> </ul> </li> <li><code>checkbox</code><ul> <li>If present, indicates a checkbox is to be created for this item. Must be paired with on/off actions. See checkbox-specific items \"on\" and \"off\" under <code>&lt;action_fields&gt;</code>.</li> </ul> </li> <li><code>slider</code><ul> <li>If present (typically set to a value of '1'), this item is meant to be rendered alone in a window without a menu. Currently, sliders must be the only item delivered in a request response.</li> </ul> </li> <li><code>selectedIndex</code><ul> <li>If present, indicates a choice widget is to be created for this item. Must be paired with choiceStrings and a actions-&gt;do-&gt;choices array. See choice-specific item \"choices\" under <code>&lt;action_fields&gt;</code>.</li> </ul> </li> <li><code>choiceStrings</code><ul> <li>Must be paired with <code>selectedIndex</code> and actions-&gt;do-&gt;choices. An array of strings to use in coordination with the choices array.</li> </ul> </li> <li><code>onClick</code><ul> <li>specify a specific window for items to refresh with new data when the item is selected (this is really for use with radio/checkbox/choice items). <code>refreshMe</code>, <code>refreshOrigin</code>, and <code>refreshGrandparent</code> are valid values</li> </ul> </li> <li><code>showBigArtWork</code><ul> <li>If present, indicates that the \"go\"/\"do\" action will return an artwork id or   URL, which can be used the fetch an image to display in a popup.</li> </ul> </li> <li><code>nextWindow</code><ul> <li><code>nextWindow</code> is a special directive to tell Squeezeplay to load or refresh a particular window after executing the command.</li> <li><code>nextWindow</code> param at the item level takes precedence over a <code>nextWindow</code> directive at the base level, but a <code>nextWindow</code> param at the json command level (e.g., 'go' action) is highest precedence.</li> <li>Valid <code>nextWindow</code> directives are:<ul> <li><code>nowPlaying</code>: push to the Now Playing browse window</li> <li><code>playlist</code>: push to the current playlist window</li> <li><code>home</code>: push to the top level \"home\" window</li> <li><code>parent</code>: push back to the previous window in the stack and refresh that window with the json that created it</li> <li><code>parentNoRefresh</code>: same as parent but do not refresh the window</li> <li><code>grandparent</code>: push back two windows in the stack</li> <li><code>refresh</code>: stay on this window, but resend the cli command that was used to construct it and refresh the window with the freshly returned data</li> <li><code>refreshOrigin</code>: push to the previous window in the stack, but resend the cli command that was used to construct it and refresh the window with the freshly returned data</li> <li>(7.4+) Any other value of a window that is present on the window stack and has a <code>windowId</code> in its window fields. Search the window stack backwards until a window with this <code>windowId</code> is found and pop all windows above it.</li> </ul> </li> </ul> </li> <li><code>setSelectedIndex</code><ul> <li>Sets the selected index for the menu (if one exists) for the window loaded as specified by the <code>nextWindow</code> param. If no <code>nextWindow</code> is provided but a <code>setSelectedIndex</code> is, Squeezeplay will assume <code>nextWindow = 'refresh'</code>.</li> </ul> </li> <li><code>input</code><ul> <li>If present, indicates user input is required before proceeding with the actions. See . <li><code>window</code><ul> <li>Allows specifying the elements to use for a window opened from this menu. See . <li><code>actions</code><ul> <li>Allows specifying the command(s) to use for this menu. See . <li> <p><code>&lt;action_alias&gt;</code></p> <ul> <li>If present in item, instructs the client to use a different Action for the given action.</li> <li>The actions which can be renamed and their aliases are:</li> </ul> Action Alias \"play\" \"playAction\" \"play-hold\" \"playHoldAction\" \"add\" \"addAction\" \"go\" \"goAction\" </li>"},{"location":"reference/slimbrowse/#input_fields","title":"<code>&lt;input_fields&gt;</code>","text":"<p>Used if input is required before proceeding with the action. Specifies length to input, allowed chars and help text or token.</p> <pre><code>{\n    len = ...\n    allowedChars = \"...\"\n    inputStyle = \"...\",\n    help = {\n        text = \"...\",\n        token = \"...\",\n    }\n    softbutton1 = \"...\",\n    softbutton2 = \"...\",\n}\n</code></pre> <p>Where (items in bold are mandatory):</p> <ul> <li><code>len</code><ul> <li>Min number of characters to request before proceeding.</li> </ul> </li> <li><code>allowedChars</code><ul> <li>Overrides the set of characters allowed for input. The default value is given by the localized <code>ALLOWEDCHARS_NOCAPS</code> string in share/jive/global_strings.txt. In EN, this is \" abcdefghijklmnopqrstuvwxyz!@#$%^&amp;*()_+{}|:\\\\\"'&lt;&gt;?-=,./~`[];0123456789\"</li> </ul> </li> <li><code>inputStyle</code><ul> <li>Specifies the style of text input to be performed. Defaults to 'text'. Other values are 'time' and 'ip'.</li> </ul> </li> <li><code>initialText</code><ul> <li>String that contains what should be filled into the text input entry as a default.</li> </ul> </li> <li><code>help</code><ul> <li>A help text, if any. Can be specified either using the localized text or a token (localized by Jive).</li> </ul> </li> <li><code>softbutton1</code>, <code>softbutton2</code><ul> <li>Text for softbuttons, if any. If either of these are configured, the help text widget will change from 'help' to 'softHelp' to accomodate the layout of the buttons.</li> </ul> </li> </ul>"},{"location":"reference/slimbrowse/#window_fields","title":"<code>&lt;window_fields&gt;</code>","text":"<p>If selecting an item results in opening a new window (i.e. the \"go\" action), the window fields, if present, will be used instead of the item fields for the window title and style. Fields defined in an item override any field defined in <code>&lt;base_fields&gt;.&lt;window_fields&gt;</code>.</p> <pre><code>{\n    text = \"...\"\n    textarea = \"...\"\n    textareaToken = \"...\"\n    icon-id = ...\n    icon = \"...\"\n    titleStyle = \"...\"\n    menuStyle = \"...\"\n    windowStyle = \"...\"\n    help = {\n             text = \"...\"\n    }\n    windowId = \"...\"\n}\n</code></pre> <p>Where (items in bold are mandatory):</p> <ul> <li><code>text</code>, <code>icon-id</code>, and <code>icon</code><ul> <li>Same semantic as for items. Typically, these are different for each item and are defined in <code>&lt;item_fields&gt;.&lt;window_fields&gt;</code>.</li> </ul> </li> <li><code>textarea</code><ul> <li>Send block of text for display of a textarea in the opened window. For use when window will not have a menu to display, or when the menu to display is without any decorated widgets like radio buttons, checkboxes, or choice items.</li> </ul> </li> <li><code>textareaToken</code><ul> <li>Same as textarea, but send a string token that is translated on the client-side. Same caveats as textarea apply. <code>textareaToken</code> is used for a specific case and is unlikely to be useful for plugin development.</li> </ul> </li> <li><code>titleStyle</code> and <code>menuStyle</code><ul> <li>Style of the title (resp. menu) of the new window. Typically, this is the same for all items and is defined in <code>&lt;base_fields&gt;.&lt;window_fields&gt;</code>. The only supported value is \"album\" (for multiline with icon title/item).</li> </ul> </li> <li><code>windowStyle</code></li> <li>Style of the new window. If absent and menuStyle is \"album\" then use \"icon_list\". Default value is \"text_list\".</li> <li>Supported values:<ul> <li>\"home_menu\"</li> <li>\"icon_list\"</li> <li>\"text_list\"</li> </ul> </li> <li><code>help{text}</code><ul> <li>Displays help text at the bottom of a window.</li> </ul> </li> <li><code>windowId</code><ul> <li>Defines an id for a window. This <code>windowId</code> can be used with the \"<code>nextWindow</code>\" item directive to move backwards to this window on the window stack.</li> </ul> </li> </ul>"},{"location":"reference/slimbrowse/#actions_fields","title":"<code>&lt;actions_fields&gt;</code>","text":"<p>The action fields specify the command sent by Jive when the user performs an action on the item, for example presses a key. In many cases, the command to be performed is the same regardless of the item (f.e., play), only one parameter will change for each item (f.e., the item id). The syntax therefore allows actions to be defined in the [<code>#base_fields &lt;base_fields&gt;</code>] and being completed in the [<code>#item_fields &lt;item_fields&gt;</code>]. It is however possible to define completely a command at the item level.</p> <pre><code>{\n    &lt;action_name&gt; = \"&lt;url_command&gt;\"\n    &lt;action_name&gt; = {\n        &lt;json_command&gt;\n    }\n    &lt;action_name&gt; = null\n\n    &lt;json_params_id&gt; = {\n        &lt;params&gt;\n    }\n}\n</code></pre> <p>Actions are identified by their name, corresponding to the keys or other controls available on Jive. Actions can refer to a JSON command or a URL (this shall remain coherent between base and item level). Actions can be set as \"null\" to have no effect (to prevent a pre-defined or base-defined command to work on a particular menu or item).</p> <p><code>&lt;json_params_id&gt;</code> is only available in items, see json commands below.</p>"},{"location":"reference/slimbrowse/#action_name","title":"<code>&lt;action_name&gt;</code>","text":"<p>Actions are defined using a string composed of the key pressed and its holding state.</p> <ul> <li><code>keys</code><ul> <li>One of \"go\"/\"do\", \"more\", \"back\", \"play\", \"add\", \"rew\", \"fwd\" or \"pause\".</li> </ul> </li> <li>holding state or \"-hold\" (not for \"go\"/\"do\", \"more\" and \"back\")</li> </ul> <p>For example, field play-hold defines the command to send when the play key is held. It can be defined at the item level (applies to the item only), or at the base level. In this last case, it can be complemented by params defined at the item level.</p>"},{"location":"reference/slimbrowse/#url_command","title":"<code>&lt;url_command&gt;</code>","text":"<p>URLs are strings, enclosed in quotes. MULTI-LEVEL</p>"},{"location":"reference/slimbrowse/#json_command","title":"<code>&lt;json_command&gt;</code>","text":"<p>JSON RPC commands consist of a hash with the following keys:</p> <pre><code>{\n    player = 0\n    cmd = [\"...\", \"...\"]\n    params = {\n        &lt;param_name&gt; = ...,\n        ...\n    }\n    itemsParams = &lt;json_params_id&gt;\n    nextWindow = \"...\",\n}\n</code></pre> <ul> <li><code>player</code><ul> <li>Player if the command requires it. The actual value is replaced by Jive.</li> </ul> </li> <li><code>cmd</code><ul> <li>Array of command terms, f.e. <code>['playlist', 'jump']</code>.</li> </ul> </li> <li><code>params</code><ul> <li>Hash of parameters, f.e. <code>{sort = new}</code>. Passed to the server in the form \"key:value\", f.e. 'sort:new'.<ul> <li>The value <code>__INPUT__</code> is replaced by any user entered data.</li> <li>The value <code>__TAGGEDINPUT__</code> is replaced by user entered data in a \"key:value\" format. For example, the param foo = <code>__TAGGEDINPUT__</code> would be replaced by 'foo:' <li><code>itemsParams</code><ul> <li>In base level commands, this defines the name of the field in the item <code>&lt;actions_fields&gt;</code> that must be used to complete the command for a particular item. See the example below.</li> </ul> </li> <li><code>nextWindow</code><ul> <li>If a <code>nextWindow</code> param is given at the json command level, it takes precedence over a <code>nextWindow</code> param at the item level, which in turn takes precendence over a <code>nextWindow</code> param at the base level. See  section for more detail on this parameter. <li><code>setSelectedIndex</code><ul> <li>Sets the selected index for the menu (if one exists) for the window loaded as specified by the <code>nextWindow</code> param. If no <code>nextWindow</code> is provided but a setSelectedIndex is, squeezeplay will assume <code>nextWindow = 'refresh'</code>. The same precedence rules apply here as do for <code>nextWindow</code> described above.</li> </ul> </li>"},{"location":"reference/slimbrowse/#slider-actions","title":"Slider actions","text":"<p>Slider objects sent from SC are a special case in that they are not contained in a menu, therefore need to be sent as a single item request response. The item needs to look something like this:</p> <pre><code>{\n    slider      =&gt; 1,\n    min         =&gt; val,\n    max         =&gt; val,\n    adjust      =&gt; val,\n    initial     =&gt; val,\n    sliderIcons =&gt; '...',\n    text        =&gt; '...',\n    help        =&gt; '...',\n    actions =&gt; {\n        do =&gt; {\n            player =&gt; 0,\n            cmd    =&gt; [ ... ],\n            params =&gt; {\n                valtag =&gt; '...',\n            },\n        },\n    },\n}\n</code></pre> <p>Where (items in __bold_ are mandatory):</p> <ul> <li><code>slider</code><ul> <li>identifies item to be delivered as a slider object.</li> </ul> </li> <li><code>min</code><ul> <li>the minimum value of the range of values to be set</li> </ul> </li> <li><code>max</code><ul> <li>the maximum value of the range of values to be set</li> </ul> </li> <li><code>adjust</code><ul> <li>the slider object on SBC doesn't cope well with values &lt;=0, so this is an adjustment, for the purpose of Squeezeplay's slider rendering only, to the min/max values. This value typically (though not necessarily) when added to min is equal to 1. For example, if you had a min of -23 and a max of 23, the adjust value would be 24.</li> </ul> </li> <li><code>initial</code><ul> <li>the initial pre-adjust value to set the slider to. When absent, defaults to min.</li> </ul> </li> <li><code>sliderIcons</code><ul> <li>In the absence of this parameter, a - and + icon are added to either end of the slider widget. Possible values for sliderIcons are 'volume' and 'none'. 'volume' renders vol- and vol+ icons on either end of the slider object. 'none' shows no icons, only the slider.</li> </ul> </li> <li><code>text</code><ul> <li>when present, this renders text above the slider in a textArea widget.</li> </ul> </li> <li><code>help</code><ul> <li>when present, delivers help text in a helptext box on the window</li> </ul> </li> <li><code>actions</code>, <code>actions.do</code> and <code>actions.do.params.valtag</code><ul> <li>slider objects require a 'do' action, and that do action needs to have a cli command callback that identifies, via the valtag param, the tag to be used in the callback. For example, for a command that requires a format of</li> </ul> </li> </ul> <pre><code>  &lt;player_id&gt; testcommand foo:val\n</code></pre> <p>The actions portion of the slider item would be configured like so:</p> <pre><code>actions =&gt; {\n    do =&gt; {\n        player =&gt; 0,\n        cmd    =&gt; [ 'testcommand' ],\n        params =&gt; {\n            valtag =&gt; 'foo',\n        },\n    },\n},\n</code></pre> <p>The value the user scrolls to on the slider sets the value that is sent back with the tagged parameter 'foo' For further reference Slim::Control::Jive has several spots where sliders are configured and delivered.</p>"},{"location":"reference/slimbrowse/#go-do-on-and-off-actions","title":"Go Do, On and Off actions","text":"<p>\"go\" refers to a command that opens a new window (i.e. returns results to browse), while \"do\" refers to an action to perform that does not return browsable data. \"do\" takes precedence over \"go\".</p> <p>\"on\" and \"off\" are similar to \"do\", but are used in the specific case of a checkbox item (i.e., one \"do\" action for when the checkbox is checked, one for when it is unchecked).</p> <p>Paging parameters (json: _index and _qty, url: TBD) are added automatically by Jive for \"go\".</p>"},{"location":"reference/slimbrowse/#more-actions","title":"More actions","text":"<p>\"more\" refers to a command that opens as a context menu.</p> <p>Paging parameters (json: _index and _qty, url: TBD) are added automatically by Jive.</p>"},{"location":"reference/slimbrowse/#choices-array-in-do-action","title":"Choices array in Do action","text":"<p>If a \"choices\" array of commands is sent in the do actions hashref along with a selectedIndex var and choiceStrings array in the main body of the item, each of the choices array elements will be paired with the choiceStrings and the menu item will be delivered with a choice widget. Each element in the choices array will form the command callback when that choice is selected.</p>"},{"location":"reference/slimbrowse/#pre-defined-actions","title":"Pre-defined actions","text":"<p>Some actions have \"built in\" defaults: the presence of a new action overrides Jive's standard (built in) behavior.</p> <ul> <li>back<ul> <li>Goes up one level in the browsing, closing the current window. Override not supported.</li> </ul> </li> <li>rew<ul> <li>Does <code>playlist jump -1</code> or <code>playlist jump 0</code> depending on the repetition rate of the key</li> </ul> </li> <li>fwd<ul> <li>Does <code>playlist jump +1</code></li> </ul> </li> <li>pause<ul> <li>Does <code>pause 0</code> or <code>pause 1</code> depending on the player state</li> </ul> </li> <li>pause-hold<ul> <li>Does <code>stop</code></li> </ul> </li> <li>play, play-hold, add, add-hold, rew-hold, fwd-hold<ul> <li>These have no predefined command.</li> </ul> </li> </ul>"},{"location":"reference/slimbrowse/#special-params","title":"Special params","text":"<p>Some parameters have special meaning in the client.</p> <ul> <li>slideshow<ul> <li>If present, the action is expected to return a list of images in the format described in Slideshow.</li> </ul> </li> <li>isContextMenu<ul> <li>If present, the action result shall display in a context menu instead of a new window.</li> </ul> </li> </ul>"},{"location":"reference/slimbrowse/#slideshow","title":"Slideshow","text":"<pre><code>{\n    base = {\n        &lt;base_fields&gt;\n    },\n    offset = 0,\n    title = \"...\",\n    data = [\n        {\n            &lt;image_fields&gt;\n        },\n        {\n            &lt;image_fields&gt;\n        },\n        ...,\n    ],\n}\n</code></pre>"},{"location":"reference/slimbrowse/#image_fields","title":"<code>&lt;image_fields&gt;</code>","text":"<pre><code>{\n    image = \"...\",\n    caption = \"...\"\n}\n</code></pre> <ul> <li><code>image</code><ul> <li>Full or partial URL of some image to display.</li> </ul> </li> <li><code>caption</code><ul> <li>A short piece of text that describes the image</li> </ul> </li> </ul>"},{"location":"reference/slimbrowse/#example","title":"Example","text":"<pre><code>{\n    // no base defined as most items have a very different command set\n\n    count = 3,\n    // because the top menu contains few elements, Jive got them all in one step and this is equal to the number of elements\n    // in the item_loop array below.\n\n    item_loop = [\n        {\n            text = 'Albums',\n            // this is what the menu item will show. No icon or icon-id defined, so the menu item is text only.\n\n            actions = {\n                go = {\n                    cmd = ['albums'],\n                    params = {\n                            menu = \"tracks\"\n                    }\n                }\n                // our action command will requests albums from the server using JSON\n\n                // no other actions defined, so pressing play f.e. has no effect\n            }\n        },\n        {\n            text = 'New music',\n\n            window = {\n                text = 'Surprise!',\n                icon = 'http://....'\n            },\n            // Normally Jive opens a window titled using the text of the menu item (i.e. \"text\"), but in this case\n            // we want the window title to be different and read \"Surprise!\"\n\n            actions = {\n                go = {\n                    cmd = ['albums'],\n                    params = {\n                        sort = 'new',\n                        tags = 'jsjs',\n                        menu = 'tracks',\n                    }\n                }\n            }\n        },\n        {\n            text = 'Browse SlimNetwork',\n            actions = {\n                go = \"http://slimnetwork/browse\"\n                // SN uses URLs, not JSON commands\n            }\n        },\n        {\n            text = 'Settings',\n\n            // this is hierarchical so we define here the items\n            count = 5,\n            item_loop = [\n                ...\n            ]\n        },\n        {\n            text = 'Search',\n            // ask user for at least 3 chars before firing the action\n            input = 3,\n            actions = {\n                go = {\n                    cmd = ['search'],\n                    params = {\n                        // __TAGGEDINPUT__ will be replaced by the entered text in the form \"search:\"\n                        search = '__TAGGEDINPUT__',\n                        tags = 'blabla',\n                        menu = 'tracks',\n                    }\n                }\n            }\n        },\n    ]\n}\n</code></pre> <p>Selecting albums issues the command defined in actions.action and returns the following data:</p> <pre><code>{\n    base = {\n            icon = \"art?id=\"\n            actions = {\n                    go = {\n                            cmd = ['tracks'],\n                            params = {\n                                    menu = \"songinfo\",\n                            },\n                            itemParams = 'anyParams',\n                    }\n                    play = {\n                            player = 0,\n                            cmd = ['playlistctrl'],\n                            params = {\n                                    cmd = 'load'\n                            },\n                            itemParams = 'anyParams',\n                    }\n            }\n    }\n\n    count = 12,\n\n    item_loop = [\n        {\n            text = \"Play all\",\n            actions = {\n                do = {...} // overrides go in base\n            },\n        },\n        {\n            text = \"Rock\",\n            icon = \"rock.jpg\", // a partial URL, combined with the above\n            anyParams = {\n                genre_id = 33,\n            },\n        },\n        {\n            text = \"Alternative\",\n            icon-id = 33,  // a SS artworkId\n            anyParams = {\n                genre_id = 34,\n            },\n        },\n        ...\n    ]\n}\n</code></pre>"},{"location":"reference/slimbrowse/#showbriefly-communications","title":"showBriefly communications","text":"<p>The server provides a facility for sending messages to clients via the <code>$client-&gt;showBriefly()</code> method. The purpose of the <code>showBriefly</code> is (typically) to show a brief popup message on the display to convey something to the user. This method has been in use for many years, originally for the ip3k-based Squeezeboxes (slimp3, squeezebox 1/2/3, boom), but has also been adapted for Squeezeplay-based players (Controller, Radio, Touch). For Squeezeplay-based players, this is done via the jive block in a <code>showBriefly</code> message.</p> <p><code>showBriefly</code> messages are communicated to Squeezeplay devices via the displaystatus notification subscription and are handled by the jive.slim.Player class on the Lua side. <code>showBriefly</code> messages operate independently of SlimBrowser/SlimMenu communication, and (typically) produce transient popup windows that are not part of the browse stack (but are part of the Framework stack).</p>"},{"location":"reference/slimbrowse/#jive-block","title":"<code>jive</code> block","text":"<p>A typical <code>jive</code> block in a <code>showBriefly</code> might look like this</p> <pre><code>$client-&gt;showBriefly( {\n    'jive' =&gt; {\n        'text' =&gt; [\n            $client-&gt;string('FAVORITES_ADDING'),\n            $title,\n        ],\n    },\n} );\n</code></pre> <p><code>text</code> is an array block of text to be sent for display in the showBriefly. Other parameters that can be sent in the jive block:</p> <ul> <li><code>type</code><ul> <li>tells SP what style of popup to use. Valid types are 'popupplay', 'icon', 'song', 'mixed', and 'popupalbum'. In 7.6, 'alertWindow' has been added (see next section)</li> </ul> </li> <li><code>duration</code><ul> <li>duration in seconds to display the showBriefly popup. Defaults to 3 seconds. In 7.6, a duration of -1 will create a popup that doesn't go away until dismissed.</li> </ul> </li> <li><code>style</code><ul> <li>used for specific styles to be used in popup windows, e.g. adding a + badge when adding a favorite.</li> </ul> </li> </ul> <p>See jive/slim/Player.lua code in the _process_displaystatus() method for specifics on how SP handles the variations sent from the server for showBriefly messages.</p>"},{"location":"reference/slimbrowse/#alertwindow","title":"<code>alertWindow</code>","text":"<p>7.6 introduces the ability to send a <code>showBriefly</code> message that will push a full, non-transient window to the squeezeplay UI. This is done with an alertWindow specification within the jive block. <code>alertWindow</code> supports two params inside the block: title, which is text to display in the title bar of the window, and text, which is the text to display in the body of the window as a textarea widget. The alertWindow is meant for messages that should not leave the screen without the user dismissing it explicitly, and as a full window has the ability of passing much larger text messages than in a small popup.</p> <p>An <code>alertWindow</code> can be sent by sending a type of <code>alertWindow</code> in the jive block</p> <pre><code>$client-&gt;showBriefly( {\n    'jive' =&gt; {\n        type =&gt; 'alertWindow',\n        title =&gt; $client-&gt;string('PLAYER_ON_FIRE'),\n        'text' =&gt; [\n            $client-&gt;string('OH_NO'),\n            $client-&gt;string('YOUR_PLAYER_IS_ON_FIRE_DESCRIPTION'),\n        ],\n    },\n} );\n</code></pre>"},{"location":"reference/slimbrowse/#notes","title":"NOTES","text":"<ul> <li>There is a dependency between the style (in Jive) and the data returned.</li> <li>Settings are not supported by the above syntax.</li> <li>The business with checking for multiple params should not cause performance issues as it is done \"rarely\" (at each button press, but not while scrolling, building the menu, etc.)</li> </ul>"},{"location":"reference/slimbrowse/#lms-squeezecenter-command-implementation","title":"LMS (SqueezeCenter) command implementation","text":"<p>A new \"menu\" query is defined to handle the top level menu. Other existing queries are re-used, but a new parameter \"menu\" is added that allows:</p> <ul> <li>declaring usage in menu mode (the data returned conforms to the syntax above)</li> <li>indicate the next browse level</li> </ul> <p>For example, the hierarchy [genres, artist, album] is done using a top level menu with command \"genres menu:artist\", that generates items with commands \"artists menu:albums\", etc... This is done in order to re-use the code of these queries. Experience shows they are high maintenance.</p>"},{"location":"reference/slimp3-protocol/","title":"The SLIMP3 Client Protocol","text":""},{"location":"reference/slimp3-protocol/#overview","title":"Overview","text":"<p>This documents the SLIMP3 protocol, as implemented in LMS 5.0.1 and SLIMP3 v2.2 firmware. The protocol is UDP based. The SLIMP3 communicates using a custom UDP-based protocol. This protocol is designed to be extremely light-weight. It gives the server low-level access to the hardware and full control over the user interface, so as to mimize the amount of hardware and software required on the client side.</p> <p>All packets are preceded by an 18-byte header. The first byte in this header is a token which indicates the format of the rest of the header. Some kinds of packets may have also have variable amounts of data after the header. Variable length data is not delimited - the length is taken from the UDP header. All numbers are unsigned integers, in network order. The server listens on port 1069, and replies to the source port of the packets it receives from the client. The server identifies individual clients by MAC address. The last 6 bytes of any Client -&gt; Server message are the client's MAC address.</p>"},{"location":"reference/slimp3-protocol/#server-client","title":"Server -&gt; Client","text":""},{"location":"reference/slimp3-protocol/#d-discovery-response","title":"'D' - Discovery response","text":"Field Value/Description 0 'D' as in \"discovery\" 1 reserved 2..5 server's IP address, or 0.0.0.0 6..7 server's port 8..17 reserved <p>On receiving a (d)iscovery request broadcast (see below) from a supported client, the server replies with a unicast (D)iscovery response, containing the IP and port number that the client should contact. If the server's IP address is left blank (0.0.0.0), then the client will instead get the IP address and port from the IP/UDP packet headers. A server replying to a discovery request may redirect a client to another server (for load balancing) using this mechanism. If multiple discovery responses are received, the client will select the first one it receives.</p>"},{"location":"reference/slimp3-protocol/#h-say-hello","title":"'h' - Say hello","text":"<pre><code>Field   Value/Description0       'h' as in \"hello\"1..17   reserved\n</code></pre> <p>This is used by the server to determine if previous known clients are up, and to obtain the model and firmware revision of those clients. Clients reply with another (h)ello, see below.</p>"},{"location":"reference/slimp3-protocol/#l-send-data-to-the-lcdvfd-display","title":"'l' - Send data to the lcd/vfd display","text":"<pre><code>Field   Value/Description0       'l' as in \"lcd\"1..17   reserved (ignored)18...   variable length string of 16-bit codes\n</code></pre> <p>The Noritake vacuum fluorescent display used in the SLIMP3 implements the standard Hitachi LCD interface, plus additional codes for controlling brightness. The data sheet is in CVS under docs/datasheets. The SLIMP3 protocol allows both \"character data\" and \"commands\" to be sent directly to the display. It also allows you to insert a delay between characters. This is used to insert the required delay after the \"clear screen\" command, and can also be used to create animated sequences. The delay feature is not currently used by the server, and probably shouldn't be used in its current implementation, because the player has to spin for the specified time and can not be interrupted. Instead, delays should be implemented in an interruptible manner on the server side.</p> <p>The 16-bit codes are:</p> <pre><code>00XX, where XX specifies a delay in ms, up to 25502XX, where XX is a command03XX, where XX is one of the 256 characters supported by the display\n</code></pre>"},{"location":"reference/slimp3-protocol/#m-write-mpeg-data-into-the-players-buffer","title":"'m' - write MPEG data into the player's buffer","text":"<pre><code>Field   Value/Description0       'm' as in \"mpeg\"1       control signal2..5    reserved (used in earlier protocols)6..7    write pointer8..9    reserved10..11  sequence number12..17  reserved18..    variable length string of data (length must be even # of bytes)\n</code></pre> <p>This message feeds data into the client's buffer, and also controls whether the decoder is running. The control signal indicates what the decoder should be doing:</p> <pre><code>0       decoding1       stopped (but do not reset buffer)3       stopped, reset read pointer to 0\n</code></pre> <p>The write pointer gives the address in the buffer to which the data should be written. The sequence number is an identifier for the packet. The client must acknowledge each MPEG data packet received with an \"ack\" message.</p>"},{"location":"reference/slimp3-protocol/#2-readwrite-the-i2c-bus","title":"'2' - read/write the i2c bus","text":"<pre><code>Field    Value/Description0        '2' as in \"i2c\"1..17    reserved18..     string of i2c commands and data\n</code></pre> <p>The protocol allows the i2c bus to be manipulated down to the level of discrete start / stop / ack / nack / read / write operations. The data sent after the header is a string of these operations, specified as follows:</p> <pre><code>wX   write the byte X onto the busr    read a byte from the buss    startp    stopa    ackn    nack\n</code></pre> <p>The client acknowledges all i2c packets. See '2' under the \"Client-&gt;Server\" section.</p> <p>Please see the Philips web site for more information on i2c. At the bottom of that page, you'll find the i2c spec sheet in PDF format.</p>"},{"location":"reference/slimp3-protocol/#client-server","title":"Client -&gt; Server","text":""},{"location":"reference/slimp3-protocol/#d-discovery-request","title":"'d' - Discovery request","text":"<p>|Field|Value/Description| |0|'d' as in \"discovery\"| |1|reserved| |2|Device ID, '1' for SLIMP3| |3|Firmware rev, eg 0x11 for version 1.1| |4..11|reserved| |12..17|MAC address|</p> <p>This packet is sent to the broadcast address on port 1069. The client sends this during startup to discover the server's IP address, after the client has configured his own IP interface. The server replies with a unicast 'D' packet - see above. Firmware v2.2 identifies itself as 1.1.</p>"},{"location":"reference/slimp3-protocol/#h-say-hello_1","title":"'h' - Say hello","text":"<pre><code>Field   Value/Description0       'h' as in \"hello\"1       Device ID, '1' for SLIMP32       Firmware rev, eg 0x11 for version 1.13..11   reserved12..17  MAC address\n</code></pre> <p>The SLIMP3 sends a hello packet to the server when it first starts up, and whenever it receives a hello from the server. This is for the server to learn that a new client is ready, or for the server to query a client to see if here's still there.</p> <p>NB whilst this may be what the client sends, the server is only interested in the MAC address, and ignores the device id and firmware completely.</p>"},{"location":"reference/slimp3-protocol/#i-ir-code","title":"'i' - IR code","text":"<pre><code>Field   Value/Description0       'i' as in \"IR\"1       0x002..5    player's time since startup in ticks @625 KHz6       0xFF (will eventually be an identifier for different IR code sets)7       number of meaningful bits - always 16 (0x10) for JVC8..11   the 32-bit IR code12..17  MAC address\n</code></pre>"},{"location":"reference/slimp3-protocol/#2-i2c-response","title":"'2' - i2c response","text":"<pre><code>Field    Value/Description0        '2' as in \"i2c\"1..17    reserved18...    string of bytes in response to the requested i2c         read operations, if any\n</code></pre>"},{"location":"reference/slimp3-protocol/#a-ack-response","title":"'a' - ack response","text":"<pre><code>Field    Value/Description0        'a' as in ack1..5     reserved6..7     write pointer8..9     read pointer10..11   sequence number12..17   MAC address\n</code></pre> <p>This packet is sent in response to an mpeg data packet. Write pointer is ignored by the server (this makes sense, because the client no longer maintains the write pointer). The read pointer is the position in the buffer that the decoder is reading from. The sequence number is the sequence number from the packet being acknowledged. Streaming and Buffering</p> <p>The SLIMP3's buffer chip is a 128K x 8 (1Mbit) SRAM. It is presented to the server as a 64K x 16 circular buffer. The server sends packets to the client, with the address in the buffer where they are to be stored, and with a sequence identifier. The client acks each packet as it receives it. The server ensures that each packet has been acknowledged by the client, and will resend any packets that are not acknowledged promptly. Once the server has filled the client's buffer it will send zero length data packets, and will monitor the read pointer returned in the client's acknowledgement, sending further packets as necessary to keep the buffer full.</p> <p>The read pointer is maintained by the client, and is the position from which the decoder is currently reading. The server can order this read pointer to be reset to the beginning of the buffer by sending a control code of \"3\" to the client in a data packet. These control codes also control whether the decoder is running or not (see 'm' write MPEG data).</p> <p>At the start of each track, the server will send a number of packets with the control set to \"3\", in order to allow the client to build up a small buffer before starting decoding. The control with then switch to \"0\". \"1\" is used to pause the player.</p> <p>The SLIMP3's buffer chip is a 128K x 8 (1Mbit) SRAM. It is presented to the server as a 64K x 16 circular buffer. The SLIMP3 maintains two pointers, called rptr and wptr, which track the position at which the DMA controller is reading (out to the decoder) and writing (in from the network). When a new stream is started, the SLIMP3 begins by initializing an empty buffer, with rptr == wptr == 0. It then begins requesting data from the server, starting from 0. The server replies with some data, which the SLIMP3 writes into the buffer. Once the buffer reaches 50% capacity, the decoder is started, and the rptr begins to increment. The SLIMP3 continues requesting data until the buffer is 90% full. Once the buffer reaches this \"almost full\" state, the SLIMP3 continually checks buffer usage, requesting more data only when the buffer usage drops below the \"almost full\" level.</p> <p>Timeouts due to a lost packet are handled by the client. It the SLIMP3 does not receive a response from the server after 100ms, then it sends the request again.</p>"},{"location":"reference/slimp3-protocol/#other-protocols-supported-by-the-player","title":"Other protocols supported by the player","text":"<ul> <li>ICMP</li> </ul> <p>ICMP echo (ping): The SLIMP3 will send an ICMP response and display a message indicating where the ping came from.</p> <p>ICMP unreachable: This indicates that the server machine is up, but the server process is not running. The SLIMP3 will display a message to the effect of \"10.0.0.1: service unreachable - are you sure the SLIMP3 server is running?\"</p> <p>Other ICMP messages are displayed on the screen in a similar manner, but they are otherwise ignored (eg ICMP redirect does nothing, but the player will still tell you, so you know to fix your gateway setting).</p> <ul> <li>UDP echo</li> </ul> <p>The player will echo any packet sent to it on UDP port 7. This could be used to obtain an RTT estimate. Unlike ping, it does not cause anything to be displayed on the screen.</p> <ul> <li>DHCP</li> </ul> <p>As of firmware version 1.1, the SLIMP3 can use DHCP to discover its own IP address.</p>"},{"location":"reference/slimproto-protocol/","title":"SlimProto Protocol","text":"<p>Note</p> <p>Always check the Perl source code, this documentation is not in sync with actual byte length in multiple places</p> <p>The SlimProto protocol is the new protocol developed for the squeezebox and replaces the SLIMP3 one. It is designed to allow the players to communicate effectively over WANs as well as LANs.</p> <p>This document describes the SlimProto for Squeezebox firmware versions 20 and above. The current version of the firmware shipped with SqueezeCenter 7.2.1 is 113. This document describes both version imperfectly.</p> <p>The server listens on TCP port 3483 for connections by players. To register a player with the server, they exchange \"helo\"s and then any of the commands below are valid.</p> <p>The client also listens on UDP port 3483 for SlimProto commands from the server it has already established a TCP connection with. It also seems to respond to data sent back in the TCP connection (you send frames back this way).</p> <p>The byte order is critical for several of the fields. The best way to check this out is to look at the server source code.</p>"},{"location":"reference/slimproto-protocol/#client-server-communications","title":"Client -&gt; Server Communications","text":"<p>For an authoritative answer on the format of the packets see the file Slim/Networking/Slimproto.pm. Different versions of the firmware send different formatted packets.</p> <p>A command to the server consists of three parts:</p> <ol> <li> <p>The 1st 4 bytes specify the operation. The following operations are supported:</p> <ul> <li>HELO</li> <li>BYE!</li> <li>STAT  heartbeat and play-event notification</li> <li>RESP  HTTP headers (from data stream)</li> <li>BODY  HTTP body (from data stream)</li> <li>META  metadata from stream</li> <li>DSCO  data stream disconnected</li> <li>DBUG  reports firmware revision</li> <li>IR    (note the two spaces after IR)</li> <li>RAWI  raw infra-red</li> <li>ANIC  animation complete</li> <li>BUTN  hardware button (transporter)</li> <li>KNOB  hardware knob (transporter)</li> <li>SETD  update preferences</li> <li>UREQ  firmware update request</li> </ul> </li> <li> <p>The 2nd part (of four bytes) is simply the length of the data packet (in network order).</p> </li> <li> <p>The 3rd part is the data itself.</p> </li> </ol> <p>Most of the operations above are detailed below:</p>"},{"location":"reference/slimproto-protocol/#helo","title":"HELO","text":"<p>This alerts the server to a clients presence and is the first thing normally transmitted by a client powering up.</p> <p>Data Length: 10, 20, or 36 bytes, depending upon deviceID and firmware revision.</p> <p>Format:</p> Field Length Notes DeviceID 1 byte The Device ID of the player. '2' is squeezebox. '3' is softsqueeze, '4' is squeezebox2,. '5' is transporter, '6' is softsqueeze3, '7' is receiver, '8' is squeezeslave, '9' is controller, '10' is boom, '11' is softboom, '12' is squeezeplay Revision 1 byte A number specifying the firmware revision MAC 0-5 6 bytes The player's MAC address UUID 0-15 16 bytes Unique identifier of device (only in newer firmware)(not sent by softsqueeze) WLanChannelList 2 bytes A list of 802.11 channels that are enabled on a given device as a bitfield 0x07ff means that channels 0 through 11 are enabled which means it's configured for the US. Bytes received 8 bytes Number of data-stream bytes received (not sent by softsqueeze) Language 2 bytes Country code (not sent by softsqueeze)"},{"location":"reference/slimproto-protocol/#capabilities","title":"Capabilities","text":"<p>This is an extension implemented in LMS 7.4 or later.</p> <p>The basic HELO packet above can be augmented by a list of capabilities, in which case the packet will be longer than 36 bytes. Capabilities form a comma-separated list. By convention CODEC capabilities are three or four letters all lower case and other capabilities start with an upper-case letter.</p> <p>Unrecognized capabilities will probably be ignored.</p> <p>CODECs should be stated in order of preference. The following are recognized at the time of writing:</p> <ul> <li>wma</li> <li>wmap - WMAPro</li> <li>wmal - WMA Lossless</li> <li>ogg</li> <li>flc</li> <li>pcm</li> <li>aif</li> <li>mp3</li> <li>alc - Apple Lossless</li> <li>aac - AAC &amp; HE-AAC, with or without MP4 wrapper</li> </ul> <p>The following could be anticipated:</p> <ul> <li>rtsp</li> <li>aud</li> </ul> <p>The following other capabilities are supported (case sensitive):</p> <ul> <li>MaxSampleRate=96000 - frames/s, should be multiples of 11025 or 12000</li> <li>Model=controller</li> <li>ModelName=Controller</li> <li>Rhap - supports Rhapsody</li> <li>AccuratePlayPoints - indicates that playpoints are precise and can be used in synchronization calculations without further filtering.</li> <li>SyncgroupID=nnnnnnnnnn - the sync-group which the player wants to join; used when a group of players is moved from one server to another.</li> <li>HasDigitalOut - somewhat of a misnomer. Currently, its only use is to enable the setting (via the SqueezeboxServer WebUI or CLI) of a preference to tie output volume at 100%.</li> <li>HasPreAmp - does the player have a separate analogue volume control.</li> <li>HasDisableDac - can the player's DAC be disabled.</li> </ul>"},{"location":"reference/slimproto-protocol/#ir-note-padded-with-two-spaces-to-make-it-up-to-4-characters","title":"\"IR \" (Note: padded with two spaces to make it up to 4 characters.)","text":"<p>One of these packets is received for each IR code received by the player.</p> <p>Data Length: Fixed at 10 bytes.</p> <p>Format:</p> <pre><code> Time   4 bytes Time since player startup in ticks (@1kHz)\n Format 1 byte  Code Format (ignored by the server for now.\n                Code represents type of IR code - NEC, JVC or Sony)\n NoBits 1 byte  Length of IR Code.\n                (ignored by the server for now\n                16 bits for JVC, 32 bits for NEC?)\n IRCode 4 bytes the IR Code itself (upto 32 bits)\n</code></pre>"},{"location":"reference/slimproto-protocol/#resp","title":"RESP","text":""},{"location":"reference/slimproto-protocol/#body","title":"BODY","text":"<p>HTTP (or MMS) response headers or message body from the data stream. These can be parsed for metadata (title, format, bitrate, etc.), or (in the case of a body) for a playlist.</p>"},{"location":"reference/slimproto-protocol/#meta","title":"META","text":"<p>Embedded metadata from the data stream from which useful information may be extracted,</p>"},{"location":"reference/slimproto-protocol/#stat","title":"STAT","text":"<p>These are sent by the player in response to commands and periodically when there are no commands as a sort of keep-alive. They inform the server of the status of various player internals.</p> <p>Format:</p> Size Notes u32 Event Code (a 4 byte string) u8 Number of consecutive CRLF recieved while parsing headers u8 MAS Initalized - 'm' or 'p' u8 MAS Mode - serdes mode? u32 buffer size - in bytes, of the player's (network/stream) buffer u32 fullness - data bytes in the player's (network/stream) buffer u64 Bytes Recieved u16 Wireless Signal Strength (0-100 - Larger values mean hardwired) u32 jiffies - a timestamp from the player (@1kHz) u32 output buffer size - the decoded audio data buffer size u32 output buffer fullness - bytes in the decoded audio data buffer u32 elapsed seconds - of the current stream u16 voltage u32 elapsed milliseconds - of the current stream u32 server timestamp - reflected from an strm-t command u16 error code - used with STMn <p>The Bytes Received field is how many data bytes the player has recieved (since it started playing?).</p> <p>Output buffer size/fullness, elapsed time, voltage, elapsed milliseconds, server timestamp &amp; error code, along with the STMo were added with more-recent firmware revisions.</p> <p>Earlier firmware revisions report the read and write pointers for the player's decoder input buffer, rather than the buffer size and fullness. The bytes received and the read/write pointers are used in this case to update the elapsed time count.</p> <p>Event code may be one of the following:</p> EventCode Description Notes vfdc vfd received Not observed, presumably an ack to a VFD (display) message i2cc i2c confirmation STMa Autostart Track started. Probably Squeezebox v1 only. STMc Connect srtm-s command received. Guaranteed to be the first response to an strm-s. STMd Decoder ready Instruct server that we are ready for the next track (if any). Sometimes (unfortunately) this will also indicate an error. STMe Stream connection Established STMf Connection flushed Streaming track flushed (in response to strm-f) or playback stopped (in response to strm-q). The number of STMf responses which  may be received in various circumstances is not well defined. STMh HTTP headers received from the streaming connection. STMl Buffer threshold reached When strm-s autostart=0/2. STMn Not Supported Decoder does not support file format or a decoding error has occurred. May include format-specific error code. STMo Output Underrun No more decoded (uncompressed) data to play; triggers rebuffering. STMp Pause Confirmation of Pause. STMr Resume Confirmation of resume. (Not used during playout) STMs Track Started Playback of a new track has started. STMt Timer A simple hearbeat, can be periodic or a response to strm-t STMu Underrun Normal end of playback. <p>The event code is a method of triggering events in the server. For example, STMd which occurs on decoder buffer underrun causes the server to switch to the next track.</p> <p>The error codes are internal and codec-specific. Not all decoders make use of error codes. The current ones are:</p> Code Name 0 N/A 100 OGG_ERROR_TOO_MANY_CHANNELS 101 OGG_ERROR_HIGH_MEMORY 102 OGG_ERROR_INVALID_SAMPLE_RATE 103 OGG_ERROR_NOTVORBIS 104 OGG_ERROR_BADHEADER 200 WMA_ERROR_SPEECH_SUPERFRAMES 201 WMA_ERROR_LOSSLESS"},{"location":"reference/slimproto-protocol/#anic","title":"ANIC","text":"<p>The display animation is complete. This seems to be undocumented. in the squeezecenter code Slim\\Display\\Display.pm there a brief description of the client capabilities.</p>"},{"location":"reference/slimproto-protocol/#bye","title":"BYE!","text":"<p>The player is disconnecting.</p> <p>If the first data byte to this command is 0x01 then the player is going out for an upgrade...</p>"},{"location":"reference/slimproto-protocol/#server-client-communication","title":"Server -&gt; Client Communication","text":"<p>Data from the server to the player consists of 2 bytes of length data (in network order), a 4 byte command header, then the command data itself. The length sent is the size of the data plus the 4 byte command header; it does not include the 2 byte length field itself.</p>"},{"location":"reference/slimproto-protocol/#command-strm","title":"Command: \"strm\"","text":"<p>This takes 24 bytes data of the form:</p> Field Length Notes $command 1 byte 's' start, 'p' pause, 'u' unpause, 'q' stop, 't' status, 'f' flush, 'a' skip-ahead $autostart 1 byte '0' = don't auto-start, '1' = auto-start, '2' = direct streaming, '3' = direct+auto $formatbyte 1 byte 'p' = PCM, 'm' = MP3, 'f' = FLAC, 'w' = WMA, 'o' = Ogg., 'a' = AAC (&amp; HE-AAC), 'l' = ALAC $pcmsamplesize 1 byte '0' = 8, '1' = 16, '2' = 20, '3' = 32;   usually '1', '?' for self-describing formats. $pcmsamplerate 1 byte '0'=11kHz, '1'=22kHz, '2'=32kHz, '3'=44.1kHz, '4'=48kHz, '5'=8kHz, '6'=12kHz, '7'=16kHz, '8'=24kHz, '9'=96kHz; usually 3, '?' for self-describing formats. $pcmchannels 1 byte '1'=mono, '2'=stereo; usually '2', '?' for self-describing formats. $pcmendian 1 byte '0' = big, '1' = little; '1' for WAV, '0' for AIFF, '?' for self-describing formats. $threshold 1 byte KB of input buffer data before autostart or notify $spdif_enable 1 byte '0'=auto, '1'=on, '2'=off; usually 0 $trans_period 1 byte transition duration in seconds $trans_type 1 byte '0' = none, '1' = crossfade,'2' = fade in, '3' = fade out, '4' = fade in &amp; fade out $flags 1 byte 0x80 - loop infinitely, 0x40 - stream without restarting decoder, 0x01 - polarity inversion left, 0x02 - polarity inversion right $output_threshold. 1 byte amount of output buffer data before playback starts, in tenths of second RESERVED 1 byte reserved $replay_gain 4 bytes replay gain in 16.16 fixed point, 0 = none (for the 's' command - see below for further discussion). $server_port 2 bytes Server Port to use (9000 is the default) $server_ip 4 bytes 0 means use IP of control server <p>This is followed by an HTTP header itself. This is used to obtain the stream data eg:</p> <pre><code> GET /stream.mp3?player=$client-id HTTP/1.0\n (Authorization: Basic $password)\n (blank line)\n</code></pre> <p>The Auth line is only sent if authorization is in use. $client-id is the usually the MAC address of the player and $password is a password generated by the server.</p> <p>Other headers to be included in the HTTP request may also be supplied.</p>"},{"location":"reference/slimproto-protocol/#u-p-a-t-commands-and-replay_gain-field","title":"u, p, a &amp; t commands and replay_gain field","text":"<p>The u, p, a &amp; t commands all make special use of the replay_gain field, as follows:</p> <p>u - if non-zero, the player-specific internal timestamp (ms) at which to unpause (this is used by the server to coordinate the start of multiple synchronized players).</p> <p>p - if non-zero, an interval (ms) to pause for and then automatically resume - no STMp &amp; STMr status messages are sent in this case.</p> <p>a - if non-zero, an interval (ms) to skip over (not play).</p> <p>t - a timestamp field from the server to be returned in the corresponding STMt status message (used to measure round-trip latency).</p>"},{"location":"reference/slimproto-protocol/#flac-specific-notes","title":"FLAC-specific notes","text":"<p>For FLAC, some of the fields are reused, as follows:</p> <p>pcmsamplesize - container type: '?' (flac), 'o' (ogg/flac)</p>"},{"location":"reference/slimproto-protocol/#wma-specific-notes","title":"WMA-specific notes","text":"<p>For WMA, some of the fields are reused, as follows:</p> <p>pcmsamplesize - response will include HTTP/MMS chunking;</p> <p>pcmsamplerate - the audio stream number to play;</p> <p>pcmchannels - the metadata stream number, if any.</p>"},{"location":"reference/slimproto-protocol/#aac-specific-notes","title":"AAC-specific notes","text":"<p>For AAC, some of the fields are reused, as follows:</p> <p>pcmsamplesize - container type and bitstream format: '1' (adif), '2' (adts), '3' (latm within loas), '4' (rawpkts), '5' (mp4ff), '6' (latm within rawpkts);</p>"},{"location":"reference/slimproto-protocol/#command-aude","title":"Command: \"aude\"","text":"<p>Tell the client to enable/disable the audio outputs.</p> <p>2 bytes</p> <pre><code> $spdif_enable   1 byte  0x0 = disable SPDIF, 0x1 = enable SPDIF\n $dac_enable     1 byte  0x0 = disable DAC, 0x1 = enable DAC output\n</code></pre>"},{"location":"reference/slimproto-protocol/#command-audg","title":"Command: \"audg\"","text":"<p>Tell the client to adjust the audio gain (volume level)</p> <p>10 bytes (all ints are network byte order)</p> <pre><code> $old_left      4 bytes unsigned int\n $old_right     4 bytes unsigned int\n $dvc           1 byte  Digital volume control 0/1\n $preamp        1 byte  Preamp (byte 255-0)\n $new_left      4 bytes 16.16 fixed point\n $new_right     4 bytes 16.16 fixed point\n $sequence      4 bytes unsigned int, optional\n</code></pre> <p>total: 18-22 bytes (+ 4 bytes command header \"audg\")</p> <pre><code>old_left/old_right should range from 0..128 new_left/new_right are 16.16 fixed point\n</code></pre> <pre><code>Firmware v22+ on the SB2 use the new style; older use the old-style.\n</code></pre>"},{"location":"reference/slimproto-protocol/#command-grfb","title":"Command: \"grfb\"","text":"<p>Tells the client to adjust the brightness of the display.</p> <p>Send a short int (2 bytes, network byte order) with a brightness level from 0-4 (on Squeezebox2). On newer firmwares (squeezecenter 7.3), it seems to range from -1 up to and including 5. -1 means totally off, 5 is the brightest.</p>"},{"location":"reference/slimproto-protocol/#command-grfe","title":"Command: \"grfe\"","text":"<p>Sends a bitmap to the client for display. It starts with a header of 4 bytes, followed by 1280 bytes of data. The header is: <pre><code> $offset        2 bytes short int\n $transition    1 byte ('L','R','U' or 'D')\n $param         1 byte\n</code></pre></p> <p>On Squeezebox3, the data is 1280 bytes; each one is a bitfield (0=off 1=on for that bit). Bits are layed out from top to bottom in column 1 of the display, then top to bottom in column 2, etc. The Squeezebox3 has a 320x32 display, so each column is 4 bytes.</p> <p>if $transition is a capital, the frame is bounced a few pixels, a lowercase value results in a full scroll. the parameter determines how many pixels are part of the animation (from bottom to top). More information on the transition can be found in pushBumpAnimate() of slim\\display\\Squeezebox2.pm in the squeezecenter source code.</p> <p>For instance, the 4-byte sequence (in binary):</p> <pre><code> 1000 0000\n 0000 0000\n 0000 0000\n 0000 0011\n</code></pre> <p>would light up the top pixel and the two bottom pixels on the row; send a grfe with that sequence 320 times and you get a thin line across the top of the display and a thicker line across the bottom.</p> <p>It is also possible to send compressed graphics. the highest byte of 'g' in the 'grfe' command should be set. The frame is then assumed to be compressed using LZF. The length in the header is the length of the compressed data (+4 for the command code).</p>"},{"location":"reference/slimproto-protocol/#command-i2cc","title":"Command: \"i2cc\"","text":"<p>Squeezebox1 only, sends an i2c command to the client.</p> <p>The data is the i2c command to send in the same format as for the SLIMP3 protocol.</p> <p>This is used to control the setup of the mas chip. Volume commands are embedded in this.</p>"},{"location":"reference/slimproto-protocol/#command-serv","title":"Command: \"serv\"","text":"<p>Tells the client to switch to another server.</p> <pre><code> $ip_address   4 bytes in network order; 0x1 means switch to squeezenetwork\n $syncgroupid  (optional) 10 ASCII digits;\n               this should be reflected in the HELO command\n               (**SyncgroupID** capability) when the player connects\n               to the new server so that it may re-join its sync-group.\n</code></pre>"},{"location":"reference/slimproto-protocol/#command-stat","title":"Command \"stat\"","text":"<p>Request a STAT update from the player</p>"},{"location":"reference/slimproto-protocol/#command-vfdc","title":"Command: \"vfdc\"","text":"<p>Sends VFD data to the client.</p> <p>The data is the vfd data to send in the same format as for the SLIMP3 protocol.</p>"},{"location":"reference/slimproto-protocol/#command-vers","title":"Command: \"vers\"","text":"<p>Sends server version string to the client.</p> <p>The data is the human readable version information for the server (a simple string)</p>"},{"location":"reference/slimproto-protocol/#command-visu","title":"Command \"visu\"","text":"<p>Tells the server to activate/deactivate visualizer for the music.</p> <pre><code> $which      1 byte    Which visualizer to use\n $count      1 byte    How many parameters there are\n $param_1    4 bytes   first parameter...\n $param_N    4 bytes   last parameter\n</code></pre> <p>Values for $which:</p> <pre><code> 0    Blank\n 1    Vumeter\n 2    Spectrum\n 3    Waveform\n</code></pre> <pre><code> $channels    0=stereo 1=mono\n $style       0=digital 1=analog\n $position    left/right position in pixels (0=left side)\n $width       width in pixels\n $r_position  left/right position of the right channel (stereo only)\n $r_width     width in pixels of the right channel (stereo only)2    Spectrum analyzer\n $channels   as for vumeter\n $bandwidth   0=0..22050Hz, 1=0..11025Hz\n $Preemphasis in dB per KHz\n $position    left/right position in pixels (0=left side)\n $width       width in pixels   $orientation 0=left to right  1=right to left\n $bar_width   Bar width in pixels   $bar_space   Bar spacing in pixels\n $clipping    0 = show all subbands  1= clip higher bands\n $intensity   Bar intensity (greyscale) 1-3\n $cap         Bar cap intensity (greyscale) 1-3For stereo, repeat the channel-specific\n $r_position  Right side position   ...\n $r_cap       Right side bar cap intensity\n</code></pre>"},{"location":"reference/slimproto-protocol/#undocumented-commands-brief-rundown","title":"Undocumented commands, brief rundown","text":""},{"location":"reference/slimproto-protocol/#command-audc","title":"Command \"audc\"","text":"<p>Transporter only, update clock source</p>"},{"location":"reference/slimproto-protocol/#command-audp","title":"Command \"audp\"","text":"<p>Transporter only, update audio source</p>"},{"location":"reference/slimproto-protocol/#command-body","title":"Command \"body\"","text":"<p>Request part of the body of a file from the player (to get remotely downloaded playlists, find bit rates of mp3, etc)</p>"},{"location":"reference/slimproto-protocol/#command-cont","title":"Command \"cont\"","text":"<p>Content-type related, related to playing remote songs</p>"},{"location":"reference/slimproto-protocol/#command-grfd","title":"Command \"grfd\"","text":"<p>SqueezeboxG only, draw graphics</p>"},{"location":"reference/slimproto-protocol/#command-irtm","title":"Command \"irtm\"","text":"<p>Send timing info to client about when IR messages are processed</p>"},{"location":"reference/slimproto-protocol/#command-knoa","title":"Command \"knoa\"","text":"<p>Knob on a remote control?</p>"},{"location":"reference/slimproto-protocol/#command-knob","title":"Command \"knob\"","text":"<p>Transporter only, knob-related</p>"},{"location":"reference/slimproto-protocol/#command-rhap","title":"Command \"rhap\"","text":"<p>Rhapsody-specific</p>"},{"location":"reference/slimproto-protocol/#command-rsps","title":"Command \"rsps\"","text":"<p>Transporter only, adjust RS232 baud rate</p>"},{"location":"reference/slimproto-protocol/#command-rstx","title":"Command \"rstx\"","text":"<p>Transporter only, send RS232 TX</p>"},{"location":"reference/slimproto-protocol/#command-setd","title":"Command \"setd\"","text":"<p>Get/set player firmware settings</p>"},{"location":"reference/slimproto-protocol/#command-upda","title":"Command \"upda\"","text":""},{"location":"reference/slimproto-protocol/#command-updn","title":"Command \"updn\"","text":""},{"location":"reference/slimproto-protocol/#command-ureq","title":"Command \"ureq\"","text":"<p>The last 3 are firmware update related commands</p>"},{"location":"reference/special-ir-keys-reset/","title":"Special IR Keys on Reboot for Factory Reset and Last Firmware","text":"<p>Some system operations require you to point your remote control at the Squeezebox while starting the Squeezebox.</p> <p>Question</p> <p>To be sure you're doing it right, pull the power from the unit, press and hold the appropriate button on the remote while keeping it pointed at the unit, and give the unit power again, while all the time keeping the remote button pressed and the remote pointed at the unit.</p>"},{"location":"reference/special-ir-keys-reset/#ip3k-based-players","title":"ip3k-based Players","text":"<p>These codes apply to the ip3k-based players: Squeezebox1 (G), Squeezebox2, Squeezebox3, Boom.</p> <ul> <li><code>ADD</code> - Factory reset</li> <li><code>1</code> - Re-program Xilinx</li> <li><code>2</code> - Factory test mode</li> <li><code>3</code> - Audio sine test</li> </ul>"},{"location":"reference/special-ir-keys-reset/#squeezeos-based-players","title":"SqueezeOS-based players","text":"<p>These tips are applicable to SqueezePlay-based players only: Controller, Touch, and Radio.</p> <ul> <li> <p>Revert to previous firmware - hold down Volume UP (with a non-Boom remote), or REW (on device, where available), and power up the device. Keep the button held down until you see the \"Free Your Music\" screen.</p> </li> <li> <p>Factory Reset - hold down Add (\"+\") (with a non-Boom remote) and press the fab4 rear power button. Keep button held down until you see the \"Free Your Music\" screen.</p> </li> </ul>"},{"location":"reference/special-ir-keys-reset/#taking-screenshots","title":"Taking screenshots","text":""},{"location":"reference/special-ir-keys-reset/#on-the-radio-or-using-remote-control","title":"On the Radio or using remote control","text":"<p>Press and hold <code>pause</code> and <code>rew</code> until you get an audible signal and a popup telling you the screenshot's file name.</p>"},{"location":"reference/special-ir-keys-reset/#on-the-squeezebox-touch","title":"On the Squeezebox Touch","text":"<p>You'll need to plug in a keyboard to the USB port. Then press uppercase \"<code>S</code>\" or <code>shift prntscrn</code>.</p>"},{"location":"reference/special-ir-keys-reset/#getting-the-screenshots-off-of-your-device","title":"Getting the screenshots off of your device","text":"<p>Screenshots are stored as <code>squeezeplay9999.bmp</code> in <code>/etc/squeezeplay/userpath</code>. The <code>9999</code> is an increment for each image. Enable SSH and use <code>scp</code> to copy the file to your host system.</p> <p>Warning</p> <p>On more recent clients (eg. macOS Ventura and later) <code>scp</code> might fail with a message like <code>sh: /usr/libexec/sftp-server: not found</code>. In that case use <code>scp -O ...</code> to fall back to \"outdated\" protocols.</p> <p>If you've inserted an SD card or USB stick to the SB Touch or Controller, the screenshots will be stored in <code>/media/sda1</code> (USB) or <code>/media/mmcblk0p1</code> (SD card).</p>"},{"location":"reference/squeezeplay-applet/","title":"SqueezePlay Applet Developing Guide","text":""},{"location":"reference/squeezeplay-applet/#introduction","title":"Introduction","text":"<p>This document serves as a starting point for those wanting to develop Lua applets for SqueezePlay (and, by extention, the SqueezeboxController).</p> <p>It is not intended as a Lua programming guide, which can be found online here.</p> <p>First things first, check yourself out a copy of SqueezePlay. Once you have a working desktop version of SqueezePlay, beginning development will be much easier.</p> <p>Please also not that the sourcecode provided here was written for the 7.3 firmware. 7.4 changes some variables names when creating menus or popup-windows. Please study the 'Test'-applet provided with SqueezePlay so you can adapt the needed changes.</p>"},{"location":"reference/squeezeplay-applet/#applet-files","title":"Applet Files","text":"<p>The two main files in any SqueezePlay applet are the Meta and Applet files. The naming convention is AppletNameMeta.lua and AppletNameApplet.lua, respectively. You can also have any number of helper files, notably a strings.txt file to translate string tokens into other languages, and a settings.lua file that contains saved configuration information that your applet might need to store.</p>"},{"location":"reference/squeezeplay-applet/#meta-file","title":"Meta file","text":"<p>The Meta file registers your applet to SqueezePlay for use. It is required for your applet to load correctly. Typically, a registerApplet function lets SqueezePlay add a menu item(s) for your applet, and an applet function to run when drilling into that menu item.</p>"},{"location":"reference/squeezeplay-applet/#example-doomsdaymetalua","title":"Example: DoomsdayMeta.lua","text":"<pre><code> local oo            = require(\"loop.simple\")\n local AppletMeta    = require(\"jive.AppletMeta\")\n local appletManager = appletManager\n local jiveMain      = jiveMain\n\n module(...)\n oo.class(_M, AppletMeta)\n\n function jiveVersion(meta)\n       return 1, 1\n end\n\n function defaultSettings(meta)\n       return {\n               currentSetting = 0,\n       }\n end\n\n function registerApplet(meta)\n       jiveMain:addItem(meta:menuItem('doomsdayApplet', 'home', \"DOOMSDAY\", function(applet, ...) applet:menu(...) end, 20))\n end\n ```\n\n#### Dissecting DoomsdayMeta.lua\n\nVariable Declaration:\n\n```lua\n local oo            = require(\"loop.simple\")\n local AppletMeta    = require(\"jive.AppletMeta\")\n local appletManager = appletManager\n local jiveMain      = jiveMain\n</code></pre> <p>In SqueezePlay it is necessary to explicitly define all functions and classes you wish to use in your applet. This is done through require() statements, and in some cases, the pulling in of global variables into local space. Note: this also needs to be done for Lua internal functions like tostring, setmetatable, etc.</p> <p>So, in this example, we are defining four things: <code>oo</code>, <code>AppletMeta</code>, <code>appletManager</code>, and <code>jiveMain</code>.</p>"},{"location":"reference/squeezeplay-applet/#module-and-class-declaration","title":"Module and Class Declaration","text":"<p>Next we define the type of file we are constructing:</p> <pre><code> module(...)\n oo.class(_M, AppletMeta)\n</code></pre> <p>In essence what these two lines say are \"this is a meta file, and we're going to define all variables to be used locally\" or \"new class (AppleNameMeta) inheriting from AppetMeta\". Note we had to define AppletMeta above by requiring our superclass jive.AppletMeta.</p>"},{"location":"reference/squeezeplay-applet/#meta-file-functions","title":"Meta File Functions","text":"<p>Now on to the meta functions:</p> <pre><code> function jiveVersion(meta)\n       return 1, 1\n end\n</code></pre> <p>sets the valid versions (min and max) that this applet will run under. In this example, min and max are set to 1, which means that the jiveVersion has to be set to 1 for this applet to load. Note: this number does not correspond to the external SqueezePlay version number, e.g., 7.0.1</p> <p>Default settings are important to define if a settings.lua file is going to be used:</p> <pre><code> function defaultSettings(meta)\n       return {\n               currentSetting = 0,\n       }\n end\n</code></pre> <p>settings.lua files are created dynamically by an applet, so it doesn't exist when first using the applet. This is where you define default settings so SqueezePlay doesn't balk when trying to getSettings()</p> <p>Finally we register our applet:</p> <pre><code> function registerApplet(meta)\n       jiveMain:addItem(meta:menuItem('doomsdayApplet', 'home', \"DOOMSDAY\", function(applet, ...) applet:menu(...) end, 20))\n end\n</code></pre> <p>This line is a bit complicated with arguments. What we are doing here is adding a menu item to the \"homeMenu\" area of Squeezeplay, which are those top-level menus that are managed by jive/ui/HomeMenu.lua. The menuItem() function general form is</p> <pre><code> menuItem(id, node, token, callback, [weight])\n</code></pre> <ul> <li>id =&gt; unique key that HomeMenu uses to reference this item</li> <li>node =&gt; HomeMenu node to add this item to. 'home' places the item in the top-most menu. Other options include 'myMusic', 'extras', 'settings', and 'advancedSettings'.</li> <li>token =&gt; string token to be used for displaying the menu item</li> <li>callback =&gt; function to callback when this menu item is drilled into. Typically in a meta file you reference the corresponding applet file function to execute.</li> <li>weight =&gt; an optional parameter given to place the item higher or lower in the list. Default weight of unweighted items is 5, and by convention items sent from SqueezeCenter (e.g., Music Library) have weights between 10 and 100.</li> </ul>"},{"location":"reference/squeezeplay-applet/#the-fruits-of-our-labor","title":"The Fruits of Our Labor","text":"<p>The Meta file has now provided a HomeMenu item for the applet:</p> <p></p>"},{"location":"reference/squeezeplay-applet/#applet-file","title":"Applet file","text":"<p>The Applet file is the main part of your applet. It typically does the majority of the \"heavy lifting\" for whatever it is you want to do.</p>"},{"location":"reference/squeezeplay-applet/#example-doomsdayappletlua","title":"Example: DoomsdayApplet.lua","text":"<pre><code> --[[\n =head1 NAME\n\n applets.Doomsday.DoomsdayApplet - Doomsday Applet\n\n =head1 DESCRIPTION\n\n This applet was created solely for the purpose of a demonstration\n\n =head1 FUNCTIONS\n\n Applet related methods are described in L&lt;jive.Applet&gt;.\n\n =cut\n --]]\n\n\n -- stuff we use\n local tostring = tostring\n local oo                     = require(\"loop.simple\")\n local string                 = require(\"string\")\n\n local Applet                 = require(\"jive.Applet\")\n local RadioButton            = require(\"jive.ui.RadioButton\")\n local RadioGroup             = require(\"jive.ui.RadioGroup\")\n local Window                 = require(\"jive.ui.Window\")\n local Popup                  = require(\"jive.ui.Popup\")\n local Textarea               = require('jive.ui.Textarea')\n local SimpleMenu             = require(\"jive.ui.SimpleMenu\")\n\n module(...)\n oo.class(_M, Applet)\n\n function menu(self, menuItem)\n\n       log:info(\"menu\")\n       local group = RadioGroup()\n       local currentSetting = self:getSettings().currentSetting\n\n       -- create a SimpleMenu object with selections to be created\n       local menu = SimpleMenu(\"menu\", {\n               -- first menu item\n               {\n                       -- text for the menu item\n                       text = self:string(\"DOOMSDAY_OPTION1\"),\n                       -- add a radiobutton with a callback function to be used when selected\n                       icon = RadioButton(\n                               -- skin style of radio button (defined in DefaultSkin)\n                               \"radio\",\n                               -- group to attach button\n                               group,\n                               -- callback function\n                               function()\n                                       log:info(\"radio button 1 selected\")\n                                       -- show the warning\n                                       self:warnMasses('DOOMSDAY_MESSAGE1')\n                                       -- store the setting to settings.lua\n                                       self:getSettings()['currentSetting'] = 1\n                                       self:storeSettings()\n                               end,\n                               -- fill the radio button if this is the currentSetting\n                               (currentSetting == 1)\n                       ),\n               },\n               {\n                       text = self:string(\"DOOMSDAY_OPTION2\"),\n                       icon = RadioButton(\n                               \"radio\",\n                               group,\n                               function()\n                                       log:info(\"radio button 2 selected\")\n                                       self:warnMasses('DOOMSDAY_MESSAGE2')\n                                       self:getSettings()['currentSetting'] = 2\n                                       self:storeSettings()\n                               end,\n                               (currentSetting == 2)\n                       ),\n               },\n               {\n                       text = self:string(\"DOOMSDAY_OPTION3\"),\n                       icon = RadioButton(\n                               \"radio\",\n                               group,\n                               function()\n                                       log:info(\"radio button 3 selected\")\n                                       self:warnMasses('DOOMSDAY_MESSAGE3')\n                                       self:getSettings()['currentSetting'] = 3\n                                       self:storeSettings()\n                               end,\n                               (currentSetting == 3)\n                       ),\n               },\n               {\n                       text = self:string(\"DOOMSDAY_OPTION4\"),\n                       icon = RadioButton(\n                               \"radio\",\n                               group,\n                               function()\n                                       log:info(\"radio button 4 selected\")\n                                       self:warnMasses('DOOMSDAY_MESSAGE4')\n                                       self:getSettings()['currentSetting'] = 4\n                                       self:storeSettings()\n                               end,\n                               (currentSetting == 4)\n                       ),\n               },\n       })\n\n       -- create a window object\n       local window = Window(\"window\", self:string(\"DOOMSDAY\"))\n\n       -- add the SimpleMenu to the window\n       window:addWidget(menu)\n\n       -- show the window\n       window:show()\n end\n\n function warnMasses(self, warning)\n       log:info(self:string(warning))\n\n       -- create a Popup object, using already established 'toast_popup_text' skin style\n       local doomsday = Popup('toast_popup_text')\n\n       -- add message to popup\n       local doomsdayMessage = Group(\"group\", {\n                       text = Textarea('toast_popup_textarea',self:string(warning)),\n             })\n       doomsday:addWidget(doomsdayMessage)\n\n       -- display the message for 3 seconds\n       doomsday:showBriefly(3000, nil, Window.transitionPushPopupUp, Window.transitionPushPopupDown)\n end\n</code></pre>"},{"location":"reference/squeezeplay-applet/#dissecting-doomsdayappletlua","title":"Dissecting DoomsdayApplet.lua","text":"<p>Embedded documentation</p> <pre><code> --[[\n =head1 NAME\n\n applets.Doomsday.DoomsdayApplet - Doomsday Applet\n\n =head1 DESCRIPTION\n\n This applet was created solely for the purpose of a demonstration\n\n =head1 FUNCTIONS\n\n Applet related methods are described in L&lt;jive.Applet&gt;.\n\n =cut\n --]]\n</code></pre> <p>The section at the top of the file here that's within a Lua comment section <code>--[[ comments... ]]---</code> is in standard POD format for documentation, which Wikipedia has a nice write-up on.</p> <p>Variable Declaration</p> <p>As we did in the meta file, it is necessary to declare everything external that's going to be used in the file.</p> <pre><code> -- stuff we use\n local tostring = tostring\n local oo                     = require(\"loop.simple\")\n local string                 = require(\"string\")\n\n local Applet                 = require(\"jive.Applet\")\n local RadioButton            = require(\"jive.ui.RadioButton\")\n local RadioGroup             = require(\"jive.ui.RadioGroup\")\n local Window                 = require(\"jive.ui.Window\")\n local Popup                  = require(\"jive.ui.Popup\")\n local Textarea               = require('jive.ui.Textarea')\n local SimpleMenu             = require(\"jive.ui.SimpleMenu\")\n local Group                  = require(\"jive.ui.Group\")\n</code></pre> <p>In the case of the applet, we are going to be accessing a bunch of ui widgets (<code>RadioButton</code>, <code>RadioGroup</code>, <code>Window</code>, <code>Popup</code>, <code>Textarea</code>, <code>SimpleMenu</code>, <code>RadioGroup</code>).</p> <p>Module and Class Declaration</p> <pre><code> module(...)\n oo.class(_M, Applet)\n</code></pre> <p>This is no different from the Meta file, other than declaring that this is an Applet class, not Meta. By using these required lines, you are stating that all variables, including Lua internal functions, need to be declared explicitly above these lines (e.g., see previous section).</p> <p>Applet Functions</p> <p>There are two functions here, <code>menu()</code> and <code>warnMasses()</code>. <code>menu()</code> as you may recall is the function defined in the Meta file as the one to be called when the \"Doomsday\" menu item is selected. This function creates a menu via the <code>jive.ui.SimpleMenu</code> widget, and creates four items that can be selected for a special Doomsday popup warning, which is driven by the <code>radioButton</code> callback to <code>warnMasses()</code>.</p> <p>(Screenshots below)</p> <p>Additionally, when a radio button is selected that setting is stored in settings.lua and subsequent returns to this menu will fill in the last selected item in the menu.</p> <p>Note the first row in the menu function</p> <pre><code> log:info(\"menu\")\n</code></pre> <p>This uses a \"log\" variable that hasn't been declared in the declaration section. The reason this works is because SqueezePlay automatically declares a \"log\" variable for all registered applets. It's declared with the identity \"applet.Doomsday\" where \"Doomsday\" is the name of the applet. You can enable different log levels through the SqueezePlay menu Settings/Advanced/Logging.</p> <p>The functions are commented for clarity within the code:</p> <pre><code> function menu(self, menuItem)\n\n       log:info(\"menu\")\n       local group = RadioGroup()\n       local currentSetting = self:getSettings().currentSetting\n\n       -- create a SimpleMenu object with selections to be created\n       local menu = SimpleMenu(\"menu\", {\n               -- first menu item\n               {\n                       -- text for the menu item\n                       text = self:string(\"DOOMSDAY_OPTION1\"),\n                       -- add a radiobutton with a callback function to be used when selected\n                       icon = RadioButton(\n                               -- skin style of radio button (defined in DefaultSkin)\n                               \"radio\",\n                               -- group to attach button\n                               group,\n                               -- callback function\n                               function()\n                                       log:info(\"radio button 1 selected\")\n                                       -- show the warning\n                                       self:warnMasses('DOOMSDAY_MESSAGE1')\n                                       -- store the setting to settings.lua\n                                       self:getSettings()['currentSetting'] = 1\n                                       self:storeSettings()\n                               end,\n                               -- fill the radio button if this is the currentSetting\n                               (currentSetting == 1)\n                       ),\n               },\n               {\n                       text = self:string(\"DOOMSDAY_OPTION2\"),\n                       icon = RadioButton(\n                               \"radio\",\n                               group,\n                               function()\n                                       log:info(\"radio button 2 selected\")\n                                       self:warnMasses('DOOMSDAY_MESSAGE2')\n                                       self:getSettings()['currentSetting'] = 2\n                                       self:storeSettings()\n                               end,\n                               (currentSetting == 2)\n                       ),\n               },\n               {\n                       text = self:string(\"DOOMSDAY_OPTION3\"),\n                       icon = RadioButton(\n                               \"radio\",\n                               group,\n                               function()\n                                       log:info(\"radio button 3 selected\")\n                                       self:warnMasses('DOOMSDAY_MESSAGE3')\n                                       self:getSettings()['currentSetting'] = 3\n                                       self:storeSettings()\n                               end,\n                               (currentSetting == 3)\n                       ),\n               },\n               {\n                       text = self:string(\"DOOMSDAY_OPTION4\"),\n                       icon = RadioButton(\n                               \"radio\",\n                               group,\n                               function()\n                                       log:info(\"radio button 4 selected\")\n                                       self:warnMasses('DOOMSDAY_MESSAGE4')\n                                       self:getSettings()['currentSetting'] = 4\n                                       self:storeSettings()\n                               end,\n                               (currentSetting == 4)\n                       ),\n               },\n       })\n\n       -- create a window object\n       local window = Window(\"window\", self:string(\"DOOMSDAY\"))\n\n       -- add the SimpleMenu to the window\n       window:addWidget(menu)\n\n       -- show the window\n       window:show()\n end\n\n function warnMasses(self, warning)\n       log:info(self:string(warning))\n\n       -- create a Popup object, using already established 'toast_popup_text' skin style\n       local doomsday = Popup('toast_popup_text')\n\n       -- add message to popup\n       local doomsdayMessage = Group(\"group\", {\n                       text = Textarea('toast_popup_textarea',self:string(warning)),\n             })\n       doomsday:addWidget(doomsdayMessage)\n\n       -- display the message for 3 seconds\n       doomsday:showBriefly(3000, nil, Window.transitionPushPopupUp, Window.transitionPushPopupDown)\n end\n</code></pre> <p>The Fruits of Our Labor</p> <p>A Simple Menu with 4 Radio Button selections:</p> <p></p> <p>After a button is selected, a popup \"toast\" slides up and appears for 3 seconds before sliding back down:</p> <p></p>"},{"location":"reference/squeezeplay-applet/#settingslua","title":"settings.lua","text":"<p>Applets can write to a settings.lua through the <code>getSettings()</code> method, and allows your applet to load in stored setting information from a previous run of the applet. The contents of a settings.lua file are a Lua table that can be read in by the Applet file through the same <code>getSettings()</code> method.</p> <p>an example settings.lua file written after selecting the 4th radio button in the example applet:</p> <pre><code> settings = {};\n settings[\"currentSetting\"] = 4;\n</code></pre>"},{"location":"reference/squeezeplay-applet/#stringstxt","title":"strings.txt","text":"<p>Applets may have strings that need translation to other languages. The strings.txt file stores these tokens for use in the Meta and Applet files. The standard format for strings.txt files is listed below (note: whitespace is delimited with tabs not spaces). After defining a strings.txt file, you can add language support simply by adding the associated translations to these strings (DE given as an example in first string)</p> <p>Note, if you copy the contents below into a text file you have to replace the spaces before/after language code with a tab character</p> <pre><code> #\n # The two letter codes are defined by ISO 639-1\n # http://en.wikipedia.org/wiki/List_of_ISO_639_codes\n\n DOOMSDAY\n       EN      Doomsday Machine\n       DE      Doomstag Arbeitsmashine\n\n DOOMSDAY_OPTION1\n       EN      Dire Warning 1\n\n DOOMSDAY_OPTION2\n       EN      Dire Warning 2\n\n DOOMSDAY_OPTION3\n       EN      Dire Warning 3\n\n DOOMSDAY_OPTION4\n       EN      Dire Warning 4\n\n DOOMSDAY_MESSAGE0\n       EN      Fear is in the air!\n\n DOOMSDAY_MESSAGE1\n       EN      The End is Nigh!\n\n DOOMSDAY_MESSAGE2\n       EN      Run for the hills!\n\n DOOMSDAY_MESSAGE3\n       EN      Get your affairs in order!\n\n DOOMSDAY_MESSAGE4\n       EN      DUCK!\n</code></pre>"},{"location":"reference/squeezeplay-applet/#additional-resources","title":"Additional Resources","text":"<p>What I've laid out above is an applet that does next-to-nothing. Chances are you want your applet to do a little more than that. Here's some pointers to additonal resources to make your SqueezePlay development easier.</p>"},{"location":"reference/squeezeplay-applet/#embedded-documentation","title":"Embedded documentation","text":"<p>Much of SqueezePlay files, including the various ui widgets, are documented in POD format. From a command-line you can use <code>perldoc</code> to display the documentation for a particular file. For example, the DoomsdayApplet example above has POD documentation embedded in it.</p> <pre><code> squeezeplay/src/squeezeplay/share/applets/Doomsday: perldoc DoomsdayApplet.lua\n DOOMSDAYAPPLET.LUA(1) User Contributed Perl DocumentationDOOMSDAYAPPLET.LUA(1)\n\n NAME\n      applets.Doomsday.DoomsdayApplet - Doomsday Applet\n\n DESCRIPTION\n      This applet was created solely for the purpose of a demonstration\n\n FUNCTIONS\n      Applet related methods are described in jive.Applet.\n\n\n perl v5.8.8                       2008-04-25             DOOMSDAYAPPLET.LUA(1)\n</code></pre> <p>The POD documentation for the ui widgets are particularly helpful in understanding what methods are available. Browse to src/squeezeplay/src/share/jive and explore this area with perldoc.</p> <p>See this url http://search.cpan.org/dist/Pod-Perldoc/lib/perldoc.pod for a description of PerlDoc</p> <p>PerlDoc should normally be included in a default instance of perl.</p>"},{"location":"reference/squeezeplay-applet/#milking-the-testapplet-for-fun-and-profit","title":"Milking the TestApplet for Fun and Profit","text":"<p>Thankfully, there is a nice applet in the squeezeplay_test directory that can help you learn-by-example. It covers things like fullscreen popup windows, text input entry (text, IP address, time), checkboxes, radio buttons, textareas, etc.</p> <p>From your subversion checkout, the TestApplet can be found at src/squeezeplay_test/share/applets/TestApplet</p>"},{"location":"reference/squeezeplay-applet/#getting-your-applet-on-a-squeezeboxcontroller","title":"Getting your applet on a SqueezeboxController","text":"<p>In order to make your applet available via the applet installer, put all your files (Applet.lua, Meta.lua, strings.txt, ...) in a simple zip-file which is named like your applet. Please be aware, that the zip MUST NOT contain any subfolders ! Then create a repository-file like described here.</p> <p>Both file must be uploaded to a web-server, so that squeezebox-server can easily download the files.</p> <p>This page should guide you through the process of getting your applet on to your controller via Squeezbox-Server</p>"},{"location":"reference/squeezeplay-applet/#development-best-practices","title":"Development best practices","text":"<p>As long as possible you should try to develop and test using a desktop build of SqueezePlay. This gives you the most rapid development success. Most but not all applets are not dependent on the target hardware.</p>"},{"location":"reference/squeezeplay-applet/#bens-tips-and-tricks-on-the-desktop","title":"Ben's Tips and tricks on the desktop","text":"<p>I do a lot of development in OS X in a terminal, and it's very useful to make heavy use of the bash shell's alias function and ability to customize your terminal environment. With a couple path changes in the first few lines, these can be of general use on either an OS X or Linux development environment.</p> <pre><code>export MYHOME='/Users/bklaas'\nexport SQUEEZEPLAY='$MYHOME/svk/squeezeplay'\nexport SPAPPLETS='squeezeplay/src/squeezeplay/share'\nexport SC74='$MYHOME/svk/slim/7.4/trunk/server'\nexport SC75='$MYHOME/svk/slim/7.5/trunk/server'\n\n# alias to quickly jump to the OS X directory where squeezeplay settings files are kept\nalias settings='cd $MYHOME/Library/Preferences/SqueezePlay/userpath/settings'\n\n# 7.4 trunk branch\nexport    SP74PATH=\"$SQUEEZEPLAY/7.4/trunk/squeezeplay\"\nalias   make74jive=\"cd $SP74PATH/src &amp;&amp; make -f Makefile.osx &amp;&amp; go74jive\"\nalias       74jive=\"cd $SQUEEZEPLAY/7.4/trunk/$SPAPPLETS\"\nalias         74up=\"cd $SP74PATH &amp;&amp; svk update -s &amp;&amp; 74jive\"\nalias     go74jive=\"cd $SP74PATH/build/osx/bin &amp;&amp; source ~/7.4rc\"\n\n# 7.5 trunk branch\nexport    SP75PATH=\"$SQUEEZEPLAY/7.5/trunk/squeezeplay\"\nalias   make75jive=\"cd $SP75PATH/src &amp;&amp; make -f Makefile.osx &amp;&amp; go75jive\"\nalias       75jive=\"cd $SQUEEZEPLAY/7.5/trunk/$SPAPPLETS\"\nalias       75test=\"cd $SQUEEZEPLAY/7.5/trunk/squeezeplay/src/squeezeplay_test/share/applets\"\nalias         75up=\"cd $SP75PATH &amp;&amp; svk update -s &amp;&amp; 75jive\"\nalias     go75jive=\"cd $SP75PATH/build/osx/bin &amp;&amp; source ~/7.5rc\"\nalias       75fab4=\"cd $SQUEEZEPLAY/7.5/trunk/squeezeplay/src/squeezeplay_fab4/share/applets\"\nalias  75squeezeos=\"cd $SQUEEZEPLAY/7.5/trunk/squeezeplay/src/squeezeplay_squeezeos/share/applets\"\nalias       75baby=\"cd $SQUEEZEPLAY/7.5/trunk/squeezeplay/src/squeezeplay_baby/share/applets\"\n\n# 7.4 SC\nalias         74scup=\"cd $SC74 &amp;&amp; svk update -s\"\nalias         74sc=\"cd $SC74/Slim\"\n\n# 7.5 SC\nalias         scup=\"cd $SC75 &amp;&amp; svk update -s\"\nalias         75sc=\"cd $SC75/Slim\"\n</code></pre> <p>You'll note in the above file there are a few alias directives to source rc files, which I manage separately. The purpose of these rc files is to set the LUA_PATH environmental variable so changes that I make in the subversion source area are reflected when running the build. Without these, only changes in the applet files of the build itself will be seen-- Or to put it another way, if you make a change in the source area without redefining LUA_PATH you need to rebuild before you see the change.</p> <p>Here's an example of an rc file for my 7.5 checkout:</p> <pre><code>export LUA_PATH='/Users/bklaas/svk/squeezeplay/7.5/trunk/squeezeplay/src/squeezeplay/share/?.lua'\nexport LUA_PATH=$LUA_PATH\\;/Users/bklaas/svk/squeezeplay/7.5/trunk/squeezeplay/src/squeezeplay_desktop/share/?.lua\nexport LUA_PATH=$LUA_PATH\\;/Users/bklaas/svk/squeezeplay/7.5/trunk/squeezeplay/src/squeezeplay_contrib/share/?.lua\nexport LUA_PATH=$LUA_PATH\\;/Users/bklaas/svk/squeezeplay/7.5/trunk/squeezeplay/src/squeezeplay_test/share/?.lua\n</code></pre>"},{"location":"reference/squeezeplay-applet/#testing-custom-changes-on-the-target-hardware","title":"Testing custom changes on the target hardware","text":"<p>For testing on the target device (e.g., Squeezebox Radio) use secure copy (scp) to transfer the appropiate files to the device. You can do this with scp on a console like</p> <pre><code>scp APPLETNAMEApplet.lua root@192.168.?.?:/usr/share/jive/applets/APPLETNAME/\n</code></pre> <p>the path for applets on the target device is /usr/share/jive/applets/</p> <p>On windows a program like WinSCP or Filezilla can copy the files, or alternatively use a windows shell environment that will give you a command-line, Cygwin.</p> <p>Remember to restart SqueezePlay after the changes. Rebooting is one way to accomplish this, but even faster the following line, issued directly from the SSH-console of your device:</p> <pre><code>/etc/init.d/squeezeplay stopwdog &amp;&amp; /etc/init.d/squeezeplay restart\n</code></pre> <p>If you do this often, it's recommended to upload this as a little script to your device:</p> <pre><code>#!/bin/sh\n/etc/init.d/squeezeplay stopwdog &amp;&amp; /etc/init.d/squeezeplay restart\n</code></pre> <p>To watch the messages produced by your applet just follow the messages file</p> <pre><code>tail -f /var/log/messages\n</code></pre>"},{"location":"reference/uninstall-legacy-mac/","title":"How to uninstall the legacy Mac Settings Pane Item","text":"<p>Once you have migrated to Lyrion Music Server 9 or later on your Apple Mac computer, you'll realize it's now a Menu Bar item. You can therefore easily remove the legacy Settings Pane using a right click right there in the System Settings:</p> <p>Don't worry: all your preferences and the library cache will survive and stay in place to be used with your latest Lyrion Music Server.</p>"},{"location":"reference/winscp/","title":"How to transfer files using WinSCP","text":""},{"location":"reference/winscp/#install-winscp","title":"Install WinSCP","text":"<p>Download the latest version of WinSCP and install according to their instructions.</p>"},{"location":"reference/winscp/#transfer-a-file","title":"Transfer a file","text":"<p>This is the method to transfer a opml file but it demonstrates the general procedure to transfer any file or folder e.g. music folders, if one does not use SMB.</p> <p>Note</p> <p>This tutorial is written with a piCorePlayer (or short pCP) as the remote machine. The same principles apply to any SSH server. Change machine- and/or username as needed.</p> <ul> <li> <p>Both the Windows computer and the Raspberry Pi have to be on the same network.</p> </li> <li> <p>On the Windows computer make a new folder on the desktop and paste the favourites.opml inside</p> </li> </ul> <p>Tip</p> <p>When one starts WinSCP for the first time one is given the option to start in two different modes; we recommend the one that gives two panes side by side.</p> <ul> <li> <p>Stop LMS from running (on pCP you find the button on the LMS tab page)</p> </li> <li> <p>Leave the File Profile at SFTP (Note; this setting can be changed, but for pCP it seems to work without a problem)</p> </li> <li> <p>Then Log in to the Raspberry Pi, you need the IP address (or use its host name, like eg. pcp.local)</p> </li> <li> <p>Leave the port # at 22</p> </li> <li> <p>Enter the user name (which on pCP is <code>tc</code> by default)</p> </li> <li> <p>Enter the user password (pCP: <code>piCore</code> by default)</p> </li> <li> <p>Click on Login</p> </li> </ul> <p></p> <ul> <li>When the Warning Box appears click on Update</li> </ul> <p></p> <p>You are presented with two screens:</p> <p></p> <p>The one on the left is the Windows computer you are using and the one on the right the remote machine (a Raspberry Pi with pCP).</p> <ul> <li> <p>In the Left Pane, select the location from the dropdown and then double click on the rewuired folder to open it.</p> </li> <li> <p>In the right pane select <code>&lt;root&gt;</code> from the dropdown</p> </li> <li> <p>From the list that appears below, navigate to <code>/usr/local/slimserver/prefs</code></p> </li> </ul> <p></p> <p>And this is where we go; one can either overwrite or rename the existing <code>favourite.opml</code> to <code>oldfavourite.opml</code> (I choose the latter; right click on the folder and click on rename from the dropdown).</p> <p></p> <ul> <li>Then in the left pane right click on the folder and choose upload from the dropdown.</li> </ul> <p></p> <ul> <li>Then click on OK in the box that appears</li> </ul> <p></p> <p>The file is uploaded.</p> <p></p> <p>Close WinSCP (click yes on the Termination warning box) and reboot the Pi.</p> <p></p>"},{"location":"reference/winscp/#transfer-a-file-as-user-root","title":"Transfer a file as user <code>root</code>","text":"<p>Normally I use SFTP or SCP as File Protocal but sometimes one is denied permission to perform the task and one needs to utilise the user <code>root</code>.</p> <ul> <li>Fill in the login detail as required and then click on Advanced</li> </ul> <p></p> <ul> <li>In the window that opens click on the following areas in sequence: \"Shell\"</li> </ul> <p></p> <ul> <li>then \"<code>sudo su</code>\" from the dropdown</li> </ul> <p></p> <ul> <li>then on OK</li> </ul> <p></p> <ul> <li>The window will close and then click on Login</li> </ul> <p>This is a rpi 4B with LMS installed on the Raspberry Pi OS Bookworm Lite 64 bit:</p> <p></p>"},{"location":"reference/cli/alarms/","title":"CLI - Alarms commands","text":""},{"location":"reference/cli/alarms/#alarm-commands-and-queries","title":"Alarm commands and queries","text":"<p>Two main commands:- <code>alarm</code> and <code>alarms</code></p> <p>See also</p> <ul> <li><code>alarm</code> under Notifications.</li> <li><code>playerpref</code> under Players</li> </ul>"},{"location":"reference/cli/alarms/#alarm","title":"alarm","text":"<p><code>&lt;playerid&gt; alarm &lt;add|update|delete|enableall|disableall|defaultvolume&gt; &lt;taggedParameters&gt;</code></p> <p>The <code>alarm</code> command allows to manipulate player alarms.</p> <p>Accepted tagged parameters:</p> Tag Description <code>id</code> The id of an existing alarm. This value is mandatory unless you <code>add</code> a new alarm. <code>dow</code> Day Of Week. 0 is Sunday, 1 is Monday, etc. up to 6 being Saturday. You can define a group of days by concatenating them with <code>,</code> as separator. Default: 0-6. <code>dowAdd</code> Add a single day of the week to the alarm list This takes precendence over anything sent in the dow tag. <code>dowDel</code> Removes a single day (0-6) of the week from the alarm list This takes precendence over anything sent in the dow tag. <code>enabled</code> 1 if the alarm is enabled. Default: 0. <code>repeat</code> 1 if the alarm repeats. Default: 1. <code>time</code> Time of the alarm, in seconds from midnight. Mandatory when add command is issued. <code>volume</code> Mixer volume of the alarm.Default: use the default volume for alarms. Mandatory when defaultvolume command is issued. <code>url</code> (or <code>playlisturl</code>) URL of the alarm playlist. Default: the current playlist.<code>url</code> should be a valid LMS audio url.The special value 0 means the current playlist.You can also use these URLs which trigger various flavours of random play:-<code>randomplay:track</code><code>randomplay:contributor</code><code>randomplay:album</code><code>randomplay:year</code> <p>See also \"favorites items\". CLARIFICATION-NEEDED</p> <p>Returned tagged parameters:</p> Tag Description <code>id</code> The id of the newly created or edited alarm. <p>Examples:</p> <p>Defining a new alarm <pre><code>Request: \"bd:a5:a9:9b:9d:df alarm add dow:1 enabled:1 playlist:file://some/playlist.m3u time:9000&lt;LF&gt;\"\nResponse: \"bd:a5:a9:9b:9d:df alarm add dow:1 enabled:1 playlist:file://some/playlist.m3u time:9000 id:eaf39&lt;LF&gt;\"\n</code></pre></p> <p>Deleting an alarm <pre><code>Request: \"bd:a5:a9:9b:9d:df alarm delete id:eaf39&lt;LF&gt;\"\nResponse: \"bd:a5:a9:9b:9d:df alarm delete id:eaf39&lt;LF&gt;\"\n</code></pre></p> <p>Enabling a previously defined alarm for Mo-Fr <pre><code>Request: \"bd:a5:a9:9b:9d:df alarm update id:eaf39 dow:1,2,3,4,5 enabled:1&lt;LF&gt;\"\nResponse: \"bd:a5:a9:9b:9d:df alarm update id:eaf39 dow:1,2,3,4,5 enabled:1 count:1 &lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/alarms/#alarm-playlists","title":"alarm playlists","text":"<p><code>alarm playlists</code></p> <p>The <code>alarm playlists</code> returns all the playlists, sounds, favorites etc. available to alarms.</p> <p>Returned tagged parameters:</p> Block Tag Description First block: \u2060 \u2060 Count The number of items available For each playlist: \u2060 \u2060 <code>title</code> The item's name or title <code>category</code> The category under which the item is grouped (eg. Favorites, Natural Sounds etc.) <code>url</code> The item's URL, or the empty value as a placeholder for the current playlist. <code>singleton</code> 1 if the item is the only one in its category, or 0 if there's more than one item. <p>Example: <pre><code>Request: \"alarm playlists 0 3&lt;LF&gt;\"\nResponse: \"alarm playlists 0 100 category:The current playlist\ntitle:Use Current Playlist url: singleton:1 category:Favorites\ntitle:Random%20Artists url:randomplay://contributor singleton:0 category:Favorites\ntitle:Random%20Tracks url:randomplay://track singleton:0 count:29 &lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/alarms/#alarms","title":"alarms","text":"<p><code>&lt;playerid&gt; alarms &lt;start&gt; &lt;itemsPerResponse&gt; &lt;taggedParameters&gt;</code></p> <p>The <code>alarms</code> query returns information about player alarms. <code>&lt;start&gt;</code> is the indexid of the first player to be reported on (eg 0, 1, 2), while <code>&lt;itemsPerResponse&gt;</code> is the numbers of players whose information will be returned.</p> <p>Accepted tagged parameters:</p> Tag Description <code>dow</code> If present, the query returns information about this Day Of Week only. Note this takes precedence over any <code>filter</code> parameter. 0 is Sunday, 1 is Monday, etc. up to 6 being Saturday. <code>filter</code> Two possible values: <code>all</code> returns all alarms,<code>enabled</code> returns just those alarms which are enabled. <p>Returned tagged parameters:</p> Block Preference Description First block: \u2060 \u2060 <code>fade</code> 1 if the alarms fade in. <code>count</code> Number of alarms returned, based on the filters above. For each alarm: \u2060 \u2060 <code>id</code> The alarm's ID. <code>dow</code> Days Of Week of this alarm. <code>enabled</code> 1 if the alarm is enabled. <code>repeat</code> 1 if the alarm is repeated. <code>shufflemode</code> 0 if off, 1 for songs, 2 for albums. <code>time</code> The time for this alarm. <code>volume</code> Mixer volume of the alarm. <code>url</code> URL of track or playlist to be played. <p>Example: <pre><code>Request: \"bd:a5:a9:9b:9d:df alarms 0 3&lt;LF&gt;\"\nResponse: \"bd:a5:a9:9b:9d:df alarms 0 3 count:2 fade:0\ndow:1 enabled:1 time:3600 volume:50 url:randomplay://track\ndow:5 enabled:1 time:81000 volume:77 playlist url:file:///Volumes/Smurf/playlists/Playlists/AAA.m3u &lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/alarms/#alarm-related-player-preferences","title":"Alarm related Player Preferences","text":"<p>Additionally, the following player preferences control the operation of the alarm and can be set/queried using the <code>playerpref</code> command.</p> <p>This command is described more fully in the Players page. Jump to <code>playerpref</code> under Players</p> Preference Description <code>alarmfadeseconds</code> (note the case!) Whether alarms should fade in on this player. Despite the name, this preference is only a boolean and does not control the number of seconds over which alarms fade in. Set to 0 to disable fading; 1 to enable it. <code>alarmTimeoutSeconds</code> The number of seconds that an alarm will play for before being automatically stopped. Set to 0 to disable the automatic timeout. <code>alarmSnoozeSeconds</code> The number of seconds that a snooze will last for. <code>alarmsEnabled</code> Whether any alarm can sound on this player. Set to 0 to prevent any alarm from sounding; 1 to allow them to sound. <code>alarmDefaultVolume</code> The volume level (0-100) at which alarms will sound unless they have their own volume specifically set (see <code>alarm volume</code>)."},{"location":"reference/cli/compoundqueries/","title":"CLI - Compound Queries commands","text":""},{"location":"reference/cli/compoundqueries/#compound-queries","title":"Compound queries","text":"<p>These queries were set up in order to get most of the information about the server or a player in one convenient query, that can be updated by the server automatically.</p>"},{"location":"reference/cli/compoundqueries/#serverstatus","title":"serverstatus","text":"<p><code>serverstatus &lt;start&gt; &lt;itemsPerResponse&gt; &lt;taggedParameters&gt;</code></p> <p>The <code>serverstatus</code> query returns a complete status about the server, including its players.</p> <p>Clients can subscribe to <code>serverstatus</code> queries, so that the query results are automatically returned asynchronously whenever a change occurs to the server. Please note this mechanism is completely distinct from the <code>listen</code> and <code>subscribe</code> commands described elsewhere in this document.</p> <p>Accepted tagged parameters:</p> Tag Description <code>prefs</code> Comma separated list of server preference values to return. <code>playerprefs</code> Comma separated list of player preference values to return (for each player). <code>subscribe</code> This optional parameter controls the subscription to the server status. Only one status subscription is possible per connection. <p>Subscription is enabled by using this parameter with a positive integer. It is disabled by using <code>-</code>. When the subscription is enabled, normal <code>serverstatus</code> queries (i.e. not using the <code>subscribe</code> parameter) can be performed and will have no effect on the subscription in place.</p> <p>When enabled, the <code>serverstatus</code> query is automatically re-generated on server change (and sent asynchronously to the CLI client). The number indicates the time interval in seconds between automatic generations in case nothing happened to the server info in the interval. Use <code>0</code> to disable this last feature and only be notified on changes. Please see the example.</p> <p>Some situations will lead to multiple status queries generated very close to another. This is a limitation of the change detection \"algorithm\".</p> <p>Please note this mechanism is completely distinct from the <code>listen</code> and <code>subscribe</code> commands described above.</p> <p>Returned tagged parameters:</p> Block Tag Description First block: \u2060 \u2060 <code>rescan</code> Returned with value <code>1</code> if the server is still scanning the database. The results may therefore be incomplete. Not returned if no scan is in progress. <code>lastscan</code> Returned with the timestamp when the last scan finished. Not returned if no scan has been run yet. <code>progressname</code> Returned with the name for the current scan phase. Not returned if no scan is in progress. <code>progressdone</code> Returned with the current value of items completed for current scan phase. Not returned if no scan is in progress. <code>progresstotal</code> Returned with the total value of items found for current scan phase. Not returned if no scan is in progress. <code>lastscanfailed</code> Information about a possible failure in case a scan has not finished in an attended manner. <code>version</code> LMS version. Equivalent to <code>version ?</code> <code>mac</code> The MAC address of the computer on which the server software is running. <code>ip</code> The IP address of the computer on which the server software is running. <code>httpport</code> The port on which the server software is listening. <code>uuid</code> The server's unique identifier string. <code>info total albums</code> Number of albums known to the server. Equivalent to <code>info total albums ?</code> <code>info total artists</code> Number of artists known to the server. Equivalent to <code>info total artists ?</code> <code>info total genres</code> Number of genres known to the server. Equivalent to <code>info total genres ?</code> <code>info total songs</code> Number of songs known to the server. Equivalent to <code>info total songs ?</code> For each defined pref requested: \u2060 \u2060 <code>prefName</code> Preference value. Only if the value is defined. Equivalent to <code>pref prefName ?</code>. <code>player count</code> Number of players known by the server. Equivalent to <code>player count ?</code>. For each player:  Essentially, this list is equivalent to the one returned by <code>players</code>. \u2060 \u2060 <code>playerid</code> Player unique identifier. Item delimiter. Equivalent to <code>player id ?</code>. <code>uuid</code> Player unique identifier. Equivalent to <code>player uuid ?</code>. <code>ip</code> Player IP and port. Equivalent to <code>player ip ?</code>. <code>name</code> Player name. Equivalent to <code>player name ?</code>. <code>model</code> Whether the player is powered on or off. <code>power</code> Player model. Equivalent to <code>player model ?</code>. <code>isplayer</code> Whether a player is a known player model. Will return 0 for streaming connections. Equivalent to <code>player isplayer ?</code>. <code>displaytype</code> Player display type. Not returned for streaming connections. Equivalent to <code>player displaytype &lt;playerindex&gt; ?</code>. <code>canpoweroff</code> Whether the player can be powered off. This value is false for streaming connections. <code>connected</code> Connected state. Equivalent to <code>&lt;playerid&gt; connected ?</code>. <code>player_needs_upgrade</code> Connected player needs a firmware upgrade. <code>player_is_upgrading</code> Connected player is in the process of performing a firmware update. <code>other player count</code> Number of players connected to other discovered servers in the local network. For each player connected to some other server in the local network: \u2060 \u2060 <code>playerid</code> Player unique identifier (MAC address). <code>name</code> Player name. <code>server</code> The server to which the player is connected <code>model</code> Player model. Please note that only Squeezebox2 and later can be remotely disconnected. For each defined player pref requested: \u2060 \u2060 <code>prefName</code> Preference value. Only if the value is defined. Equivalent to <code>playerpref prefName ?</code>. <p>Examples: showing response to same command from Telnet and as output as JSON <pre><code>request: \"serverstatus\"\n\nresponse: via TELNET (some line breaks added here to improve readability)\nresponse: \"serverstatus   lastscan%3A1711201749 version%3A8.5.0\nuuid%3A9caf975e-f502-47db-ad3e-135ab16a86fa ip%3A192.168.5.75 httpport%3A9005\ninfo%20total%20albums%3A539 info%20total%20artists%3A515\ninfo%20total%20genres%3A116 info%20total%20songs%3A8880\ninfo%20total%20duration%3A7091295.34500001 player%20count%3A4\nother%20player%20count%3A0\"\n\nresponse: via JSON\n{'lastscan': '1711201749',\n 'version': '8.5.0',\n 'uuid': '9caf975e-f502-47db-ad3e-135ab16a86fa',\n 'ip': '192.168.5.75',\n 'httpport': '9005',\n 'info total albums': 539,\n 'info total artists': 515,\n 'info total genres': 116,\n 'info total songs': 8880,\n 'info total duration': 7091295.34500001,\n 'player count': 4,\n 'other player count': 0}\n</code></pre></p>"},{"location":"reference/cli/compoundqueries/#status","title":"status","text":"<p><code>&lt;playerid&gt; status &lt;start&gt; &lt;itemsPerResponse&gt; &lt;taggedParameters&gt;</code></p> <p>The <code>status</code> query returns the complete status about a given player, including the current playlist. Set the  parameter to <code>-</code> to get the playlist data starting from the current song. <p>In this <code>current</code> mode and if repeat is on, the server will attempt to return <code>&lt;itemsPerResponse&gt;</code> elements, by repeating the playlist at most once, unless shuffling is on and the server is configured to re-shuffle the playlist at each loop (in which case it is impossible to predict the song following the last one in the playlist until this last song has finished playing).</p> <p>Similarly, in the <code>current</code> mode, if repeat is one, only the current song is returned, regardless of the value of <code>&lt;itemsPerResponse&gt;</code>.</p> <p>Clients can subscribe to <code>status</code> queries, so that the query results are automatically returned asynchronously whenever a change occurs to a player. Please note this mechanism is completely distinct from the <code>listen</code> and <code>subscribe</code> commands described elsewhere in this document.</p> <p>Accepted tagged parameters:</p> Tag Description <code>tags</code> Determines which tags are returned. Each returned tag is identified by a letter (see command <code>songinfo</code> for a list of possible fields and their identifying letter). The default tags value for this query is <code>gald</code>. In addition to the tags supported by <code>songinfo</code> there's the special <code>DD</code> tag, which would return no track information, but the total duration of the current playlist only. <code>alarmData</code> If set to a truthy value will return information about the next upcoming alarm. <code>subscribe</code> This optional parameter controls the subscription to the player status. Only one status subscription is possible per player and connection. <p>Subscription is enabled by using this parameter with a positive integer. It is disabled by using <code>-</code>. When the subscription is enabled, normal <code>status</code> queries (i.e. not using the <code>subscribe</code> parameter) can be performed and will have no effect on the subscription in place.</p> <p>When enabled, the <code>status</code> request is automatically re-generated on player change (and sent asynchronously to the CLI client). The number indicates the time interval in seconds between automatic generations in case nothing happened to the player in the interval. Use <code>0</code> to disable this last feature and only be notified on player or playlist changes. Please see the example.</p> <p>Some situations will lead to multiple status queries generated very close to another. This is a limitation of the change detection \"algorithm\".</p> <p>If the player is manually (through the web page) or automatically deleted from the server, the status query returns the <code>error</code> tag with value <code>invalid player</code> and the subscription is terminated.</p> <p>Please note this mechanism is completely distinct from the <code>listen</code> and <code>subscribe</code> commands described above.</p> <p>Returned tagged parameters:</p> Tag Description <code>rescan</code> Returned with value 1 if the server is still scanning the database. The results may therefore be incomplete. Not returned if no scan is in progress. <code>error</code> Returned with value <code>invalid player</code> if the player this subscription query referred to no longer exists. <p>In non subscription mode, the query simply echoes itself (i.e. produces no result) if  is wrong. Tag Description <code>player_name</code> Name of the player. <code>player_connected</code> Connected state of the player. <code>player_needs_upgrade</code> Connected player needs a firmware upgrade. <code>player_is_upgrading</code> Connected player is in the process of performing a firmware update. <code>power</code> Power state of the player. Not returned for remote streaming connections. <code>signalstrength</code> Signal strength (only for Squeezeboxen and Transporters). <code>waitingToPlay</code> A flag telling whether the player isn't actually playing, but still waiting for data or something. <code>alarm_state</code> One of 'active' (means alarm currently going off), 'set' (alarm set to go off in next 24h on this player), 'none' (no alarm set to go off in next 24h on this player), 'snooze' (alarm is active but currently snoozing). <code>alarm_next</code> Epochtime seconds when the next alarm within the next 24h is due. <code>alarm_days</code> A list of 0 or 1, for the days on which the alarm is set (0=Sunday). <code>alarm_snooze_seconds</code> The snooze duration for the upcoming alarm. <code>alarm_timeout_seconds</code> The alarm timeout for the upcoming alarm. If player is on: <code>mode</code> Player mode. <code>remote</code> Returns 1 if a remote stream is currently playing. <code>current_title</code> Returns the current title for remote streams. Only if remote stream is playing. <code>time</code> Elapsed time into the current song. Decimal seconds. Only if current song. <code>rate</code> Player rate. Only if there is a current song. <code>duration</code> Duration of the current song. Decimal seconds. Only if current song and if the duration is known (it is not for remote streams). <code>sleep</code> If set to sleep, the amount (in seconds) it was set to. <code>will_sleep_in</code> Seconds left until sleeping. Only if set to sleep. <code>sync_master</code> ID of the master player in the sync group this player belongs to. Only if synced. <code>sync_slaves</code> Comma-separated list of player IDs, slaves to sync_master in the sync group this player belongs to. Only if synced. <code>mixer volume</code> Not returned for remote streaming connections. <code>mixer treble</code> Only for SliMP3 and Squeezebox1 players. <code>mixer bass</code> Only for SliMP3 and Squeezebox1 players. <code>mixer pitch</code> Only for Squeezebox1 players. <code>playlist duration</code> Duration of the full playlist. Decimal seconds. Only if tag <code>DD</code> was requested and for the duration of tracks where it is known (it is not for eg. radio streams). <code>playlist repeat</code> 0 no repeat, 1 repeat song, 2 repeat playlist. <code>playlist shuffle</code> 0 no shuffle, 1 shuffle songs, 2 shuffle albums. <code>playlist_id</code> Playlist id, if the current playlist is a stored playlist. <code>playlist_name</code> Playlist name, if the current playlist is a stored playlist. Equivalent to <code>playlist name ?</code>. <code>playlist_modified</code> Modification state of the saved playlist (if the current playlist is one). Equivalent to <code>playlist modified ?</code>. <code>playlist_timestamp</code> Timestamp of the current playlist, in seconds. Changes to the playlist (insertion/removal/shuffling) result in an increase of this value. This can be used to detect the entire playlist has to be reacquired. <code>playlist_tracks</code> Number of tracks in the current playlist. Only if there is a playlist. If playlist information exist/requested, for each song in the playlist: <code>playlist index</code> Index (first item is 0) of the playlist entry in the player playlist. Unless  is <code>-</code>, the first returned instance of this field is equal to start. If  is <code>-</code>, the first returned instance of this field contains the index of the currently playing song in the player playlist. Item separator. <code>Tags</code> Same tags as defined in command <code>songinfo</code>. Additionally, when returning the playlist_loop (ie current contents of the play queue) tag <code>2</code> will return a flag <code>contiguous_groups</code> indicating whether the play queue entries are contiguous with respect to work/grouping/performance, to assist UI formatting of the play queue. <p>Examples:</p> <p>Simple example <pre><code>Request: \"a5:41:d2:cd:cd:05 status 0 2 tags:&lt;LF&gt;\"\nResponse: \"a5:41:d2:cd:cd:05 status 0 2 tags: player_name:127.0.0.1 player_connected:1 power:1 mode:play rate:1 time:13.7129358076728 duration:252.630204081633 mixer%20volume:50 mixer%20treble:50 mixer%20bass:50 mixer%20pitch:100 playlist%20repeat:2 playlist%20shuffle:0 playlist_cur_index:1 playlist_tracks:3 playlist%20index:0 title:Left%20Outside%20Alone playlist%20index:1 title:Bounce%20[Original%20Version]&lt;LF&gt;\"\n</code></pre></p> <p>Current mode example <pre><code>Request: \"a5:41:d2:cd:cd:05 status - 2 tags:&lt;LF&gt;\"\nResponse: \"a5:41:d2:cd:cd:05 status - 2 tags: player_name:127.0.0.1 player_connected:1 power:1 mode:play rate:1 time:18.721127818274 duration:252.630204081633 mixer%20volume:50 mixer%20treble:50 mixer%20bass:50 mixer%20pitch:100 playlist%20repeat:2 playlist%20shuffle:0 playlist_cur_index:1 playlist_tracks:3 playlist%20index:1 title:Bounce%20[Original%20Version] playlist%20index:2 title:Open%20Up%20[Radio%20Edit]&lt;LF&gt;\"\n</code></pre></p> <p>Subscribe mode example <pre><code>Request: \"a5:41:d2:cd:cd:05 status - 2 subscribe:30&lt;LF&gt;\"\nResponse: \"a5:41:d2:cd:cd:05 status - 2 subscribe:30 player_name:127.0.0.1 ... (same as above)\n\n10 seconds later, player is turned off, CLI generates and sends:\n\"a5:41:d2:cd:cd:05 status - 2 subscribe:30 player_name:127.0.0.1 player_connected:1 power:0&lt;LF&gt;\"\n\n30 seconds (the subscribe value) elapse, no changes to the player, the CLI generates and sends:\n\"a5:41:d2:cd:cd:05 status - 2 subscribe:30 player_name:127.0.0.1 player_connected:1 power:0&lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/compoundqueries/#displaystatus","title":"displaystatus","text":"<p><code>displaystatus &lt;taggedParameters&gt;</code></p> <p>The <code>displaystatus</code> query allows subscription to display update events for a player. Details of the latest display change are automatically returned whenever the relevant display update event occurs on that player.</p> <p>Clients may subscribe to only receive status and warning (<code>showbriefly</code>) messages, receive normal display updates (<code>update</code>), or receive all display updates including menu transitions ('all').</p> <p>Clients may also subscribe to receive the bitmap which comprises each display update ('bits'). For SB2 and later players, this forwards the display bitmap to the client encoded in base64. Clients may request a reduced width display by setting the width parameter in the status subscription. Note this reduces the width of the display shown on the live player screen as well as for the display forwarded to the cli client.</p> <p>Accepted tagged parameters:</p> Tag Description <code>subscribe</code> 'showbriefly', 'update', 'all' or 'bits' to subscribe and nothing to unsubscribe <code>width</code> Reduced width for the display, only used with a subscription for 'bits'"},{"location":"reference/cli/compoundqueries/#readdirectory","title":"readdirectory","text":"<p><code>readdirectory &lt;start&gt; &lt;itemsPerResponse&gt; &lt;taggedParameters&gt;</code></p> <p>The <code>readdirectory</code> query allows to browse filesystems from the server's point of view. This can be used to eg. select music folders. Local filesystems are supported, as are UNC paths on Windows systems (eg. \\server\\musicshare).</p> <p>Please note that on Windows systems the back slashes must either be escaped or replaced by normal slashes. The above path would better be written <code>//server/musicshare.</code></p> <p>Accepted tagged parameters:</p> Tag Description <code>folder</code> the path to the folder to be displayed, eg. c:/music, /Users/mh/Music, //server/share etc. <code>filter</code> Filter the output according to one of the following keywords (regular expressions can be used): <code>filter:foldersonly</code> list folders only <code>filter:filesonly</code> list files only <code>filter:musicfiles</code> list all files  considered music files by the server; this is the same filter as is used when scanning the disk for music <code>filter:filetype:xyz</code> list file type .xyz only <code>filter:xyz</code> any expression filter path/filenames <p>Returned tagged parameters:</p> Tag Description <code>item</code> The folder's item: folder, files etc. <code>isfolder</code> A flag whether an item is a folder or not. <p>Example: <pre><code>Request: \"readdirectory 0 10 folder://media/mp3\"\nResponse: \"readdirectory 0 10 folder%3A%2F%2Fmedia%2Fmp3 count%3A251 item%3A%5C%5Cmedia%5Cmp3%5CAerosmith isfolder%3A1 item%3A%5C%5Cmedia%5Cmp3%5CAir isfolder%3A1 item%3A%5C%5Cmedia%5Cmp3%5CAlanis%20Morissette isfolder%3A1 item%3A%5C%5Cmedia%5Cmp3%5CAldo%20Romano%2C%20Michel%20Benita%2C%20Glenn%20Ferris%2C%20Paolo%20Fresu isfolder%3A1 item%3A%5C%5Cmedia%5Cmp3%5CAli%20Farka%20Toure isfolder%3A1 item%3A%5C%5Cmedia%5Cmp3%5CAll%20Saints isfolder%3A1 item%3A%5C%5Cmedia%5Cmp3%5CManu%20Katche isfolder%3A1 item%3A%5C%5Cmedia%5Cmp3%5CSinead%20O'Connor isfolder%3A1 item%3A%5C%5Cmedia%5Cmp3%5CShakira isfolder%3A1 item%3A%5C%5Cmedia%5Cmp3%5CAnastacia isfolder%3A1\"\n</code></pre></p>"},{"location":"reference/cli/database/","title":"CLI - Database commands","text":""},{"location":"reference/cli/database/#database-commands-and-queries","title":"Database commands and queries","text":""},{"location":"reference/cli/database/#rescan","title":"rescan","text":"<p><code>rescan &lt;|playlists|onlinelibrary|external|full singlefolder|?&gt;</code></p> <p>The <code>rescan</code> command causes the server to rescan the entire music library, reloading the music file information.</p> <ul> <li>If <code>playlists</code> is indicated (<code>rescan playlists</code>), only the playlist directory is rescanned.</li> <li>If <code>onlinelibrary</code> is indicated (<code>rescan onlinelibrary</code>), only the import from online music services is run.</li> <li>If <code>external</code> is requested, the rescan will be performed using the external scanner process instead of the in-process scanner.</li> <li>If <code>full file://some/path</code> is defined, then only this path will be scanned. Issued with a <code>?</code>, <code>rescan ?</code> returns if the server is currently scanning.</li> </ul> <p>Scanning occurs when the server starts and following <code>rescan</code> and <code>wipecache</code> commands.</p> <p>Examples: <pre><code>Request: \"rescan&lt;LF&gt;\"\nResponse: \"rescan&lt;LF&gt;\"\n\nRequest: \"rescan ?&lt;LF&gt;\"\nResponse: \"rescan 1&lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/database/#rescanprogress","title":"rescanprogress","text":"<p><code>rescanprogress</code></p> <p>The <code>rescanprogress</code> query returns details on the scanning progress. This query does not take any parameters.</p> <p>Returned tagged parameters:</p> Tag Description <code>rescan</code> Returned with value 1 if the server is still scanning the database, otherwise returned with value 0 and the fields below are not returned. <code>totaltime</code> Total elapsed time since the start of the scan, format <code>hh:mm:ss</code>. <code>importer</code> A completion percentage for each importer. Importers include:- <code>directory</code> (Music folder), <code>playlist</code>(Playlist folder), <code>iTunes</code> (iTunes), <code>musicip</code> (MusicIP),  as well as more technical ones such as  <code>mergeva</code> (Various Artists merging) and  <code>dboptimize</code> (Database optimization). The type, quantity and order of importers is determined dynamically as rescan progresses. <code>info</code> Additional information about the current scanning step, like eg. the currently scanned file name. <code>steps</code> Scanning steps in the order they've been executed. <code>lastscanfailed</code> Information about a possible failure in case a scan has not finished in an attended manner. <p>Example: <pre><code>Request: \"rescanprogress&lt;LF&gt;\"\nResponse: \"rescanprogress rescan:1 totaltime:00:00:07 directory:100 playlist:100 itunes:15 &lt;LF&gt;\"\n\nRequest: \"rescanprogress&lt;LF&gt;\"\nResponse: \"rescanprogress rescan:1 totaltime:00:01:04 directory:100 playlist:100 itunes:100 itunes_playlists:100 mergeva:100 cleanup1:100 cleanup2:100 dboptimize:47 &lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/database/#abortscan","title":"abortscan","text":"<p><code>abortscan</code></p> <p>The <code>abortscan</code> command causes the server to cancel a running scan. Please note that after stopping a scan this way you'll have to fully rescan your music collection to get consistent data.</p> <p>Examples: <pre><code>Request: \"abortscan&lt;LF&gt;\"\nResponse: \"abortscan&lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/database/#wipecache","title":"wipecache","text":"<p><code>wipecache</code></p> <p>The <code>wipecache</code> command allows the caller to have the server rescan its music library, reloading the music file information. This differs from the <code>rescan</code> command in that it first clears the tag database. During a rescan triggered by <code>wipecache</code>, <code>rescan ?</code> returns true.</p> <p>Examples: <pre><code>Request: \"wipecache&lt;LF&gt;\"\nResponse: \"wipecache&lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/database/#libraries","title":"libraries","text":"<p><code>libraries</code></p> <p>The <code>libraries</code> query returns a list of known library views with their ID to the caller.</p> <p>Examples: <pre><code>Request: \"libraries&lt;LF&gt;\"\nResponse: \"libraries id:8c7ee510 name:FLAC%20files%20only&lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/database/#libraries-getid","title":"libraries getid","text":"<p><code>&lt;playerid&gt; libraries getid</code></p> <p>The <code>libraries getid</code> query returns the ID and the name of library set to be used by the given player. Returns id:0 and no name if no library is active.</p> <p>Examples: <pre><code>Request: \"04:20:00:12:23:45 libraries getid&lt;LF&gt;\"\nRequest: \"04:20:00:12:23:45 libraries getid id:8c7ee510 name:FLAC%20files%20only&lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/database/#info-total-genres","title":"info total genres","text":"<p><code>info total genres ?</code></p> <p>The <code>info total genres ?</code> query returns the number of unique genres in the server music database.</p> <p>Examples: <pre><code>Request: \"info total genres ?&lt;LF&gt;\"\nResponse: \"info total genres 18&lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/database/#info-total-artists","title":"info total artists","text":"<p><code>info total artists ?</code></p> <p>The <code>info total artists ?</code> query returns the number of unique artists in the server music database. The <code>Composer, band and orchestra in artists</code> preference (Server Settings, Behavior) determines which contributors are considered artists.</p> <p>Examples: <pre><code>Request: \"info total artists ?&lt;LF&gt;\"\nResponse: \"info total artists 18&lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/database/#info-total-albums","title":"info total albums","text":"<p><code>info total albums ?</code></p> <p>The <code>info total albums ?</code> query returns the number of unique albums in the server music database.</p> <p>Examples: <pre><code>Request: \"info total albums ?&lt;LF&gt;\"\nResponse: \"info total albums 18&lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/database/#info-total-songs","title":"info total songs","text":"<p><code>info total songs ?</code></p> <p>The <code>info total songs ?</code> query returns the number of unique songs in the server music database.</p> <p>Examples: <pre><code>Request: \"info total songs ?&lt;LF&gt;\"\nResponse: \"info total songs 18&lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/database/#info-total-duration","title":"info total duration","text":"<p><code>info total duration ?</code></p> <p>The <code>info total duration ?</code> query returns the number of seconds playtime in the server music database.</p> <p>Examples: <pre><code>Request: \"info total duration ?&lt;LF&gt;\"\nResponse: \"info total duration 66109&lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/database/#genres","title":"genres","text":"<p><code>genres &lt;start&gt; &lt;itemsPerResponse&gt; &lt;taggedParameters&gt;</code></p> <p>The <code>genres</code> query returns all genres known by the server.</p> <p>Note that the server supports multiple genres per track, depending on the <code>Multiple items in tags</code> preference (Server Settings, Behavior).</p> <p>Accepted tagged parameters:</p> Tag Description <code>search</code> Search string. The search is case insensitive and obeys the <code>Search Within Words</code> server parameter. <code>artist_id</code> Limit results to those genres proposed by the artist identified by <code>artist_id</code>. <code>album_id</code> Limit results to those genres available on the album identified by <code>album_id</code>. <code>track_id</code> Limit results to the genres of the track identified by <code>track_id</code>. If present, other filters are ignored. <code>genre_id</code> Limit results to the genre identified by <code>genre_id</code>. The genre_id may be a list of comma separated IDs. If present, other filters are ignored. <code>library_id</code> Virtual library ID, to restrict the results to a virtual library view. <code>year</code> Limit results to the genres of the tracks of the given <code>year</code>. <code>tags</code> Determines which tags are returned. Each returned tag is identified by a letter (see below). The default value is empty. <p>Returned tagged parameters:</p> Block Tag Description First block: \u2060 \u2060 <code>rescan</code> Returned with value 1 if the server is still scanning the database. The results may therefore be incomplete. Not returned if no scan is in progress. <code>count</code> Number of results returned by the query. If no filter parameter is present, this is the same value as returned by <code>info total genres ?</code>. <code>CC</code> <code>count</code> - Only return the number of results, but not the results themselves. <code>Z</code> <code>indexList</code> An array of arrays indicating how many items start with each key letter. For each genre: \u2060 \u2060 <code>id</code> Genre ID. Item delimiter. <code>genre</code> Genre name. <code>s</code> textkey <p>The genre's <code>textkey</code> is the first letter of the sorting key.</p> <p>Example: <pre><code>Request: \"genres 0 5&lt;LF&gt;\"\nResponse: \"genres 0 5 rescan:1 count:6 id:3 genre:Acid%20Jazz id:4 genre:Alternative%20&amp;%20Punk id:5 genre:French id:6 genre:No%20Genre id:7 genre:Pop &lt;LF&gt;\"\n\nRequest: \"genres 0 5 search:unk&lt;LF&gt;\"\nResponse: \"genres 0 5 search:unk count:1 id:4 genre:Alternative%20&amp;%20Punk&lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/database/#artists","title":"artists","text":"<p><code>artists &lt;start&gt; &lt;itemsPerResponse&gt; &lt;taggedParameters&gt;</code></p> <p>The <code>artists</code> query returns all artists known by the server. The results of this query depend in part on the <code>Compilations</code> preference (Server Settings, Behavior). The <code>Various Artists</code> pseudo-artist appears if the server groups compilations.</p> <p>Accepted tagged parameters:</p> Tag Description <code>search</code> Search substring. The search is case insensitive and obeys the <code>Search Within Words</code> server parameter. <code>genre_id</code> Genre ID, to restrict the results to those artists with songs of that genre. The genre_id may be a list of comma separated IDs. <code>album_id</code> Album ID, to restrict the results to those artists with songs of that album. <code>track_id</code> Track ID, to restrict the results to the artist of <code>track_id</code>. If specified, all other filters are ignored. <code>artist_id</code> Artist ID, to restrict the results to a single artist. If specified, all other filters are ignored. <code>role_id</code> Contributor role ID, to restrict the results to the artist of <code>role_id</code>. This parameter must be a comma separated list of role IDs, or a comma separated list of role tokens (eg. ALBUMARTIST, ARTIST) <code>library_id</code> Virtual library ID, to restrict the results to a virtual library view. <code>include_online_only_artists</code> Include external artists from music services, even if they don't have any track or album in the current collection. This allows callers to browse those artists on the external service.  Please note that this parmeter would be ignored if some kind of filtering argument was given which didn't apply to artists without related tracks (eg. genre_id, album_id etc.). <code>tags</code> Determines which tags are returned. Each returned tag is identified by a letter (see below). The default value is empty. <p>Returned tagged parameters:</p> Block Tag Description First block: \u2060 \u2060 <code>rescan</code> Returned with value 1 if the server is still scanning the database. The results may therefore be incomplete. Not returned if no scan is in progress. <code>count</code> Number of results returned by the query. If no search string is present, this is the same value as returned by <code>info total artists ?</code> <code>CC</code> <code>count</code> Only return the number of results, but not the results themselves. <code>Z</code> <code>indexList</code> An array of arrays indicating how many items start with each key letter. For each artist: \u2060 \u2060 <code>id</code> Artist ID. Item delimiter. <code>artist</code> Artist name. <code>s</code> <code>textkey</code> The artist's <code>textkey</code> is the first letter of the sorting key. CLARIFICATION-NEEDED <code>E</code> <code>extid</code> The contributor's external ID, if it is eg. from an online music service. CLARIFICATION-NEEDED <code>4</code> <code>portraitid</code> The contributor's portrait ID <p>Example: <pre><code>Request: \"artists 0 5&lt;LF&gt;\"\nResponse: \"artists 0 5 count:7 id:2 artist:Anastacia id:3 artist:Calogero id:4 artist:Evanescence id:5 artist:Leftfield%20%26%20Lydon id:18 artist:Llorca &lt;LF&gt;\"\n\nRequest: \"artists 0 5 genre_id:7&lt;LF&gt;\"\nResponse: \"artists 0 5 genre_id:7 count:2 id:2 artist:Anastacia id:19 artist:Sarah%20Connor &lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/database/#roles","title":"roles","text":"<p><code>roles &lt;start&gt; &lt;itemsPerResponse&gt; &lt;taggedParameters&gt;</code></p> <p>The <code>roles</code> query returns all roles known by the server for a given track, or releases.</p> <p>Accepted tagged parameters:</p> Tag Description <code>track_id</code> Track ID, to restrict the results to the album of <code>track_id</code>. If specified, all other filters are ignored. <code>artist_id</code> Artist ID, to restrict the results to those albums by <code>artist_id</code>. <code>album_id</code> Album ID, to restrict the results to a single album. Or a comma sparated list of album IDs, to restrict the results to a specific list of albums. If specified, all other filters are ignored. <code>year</code> Year, to restrict the results to those albums of that year. <code>work_id</code> Limit results to an individual <code>work</code>. <code>library_id</code> Virtual library ID, to restrict the results to a virtual library view. <code>tags</code> Determines which tags are returned. Each returned tag is identified by a letter. The only valid values currently are <code>t</code> (textual representation of the contributor type), and <code>CC</code> (only return count of results, but no other data). <p>Returned tagged parameters:</p> Block Tag Description First block: \u2060 \u2060 <code>rescan</code> Returned with value 1 if the server is still scanning the database. The results may therefore be incomplete. Not returned if no scan is in progress. For each role: \u2060 \u2060 <code>role_id</code> The role ID. <code>role_name</code> The contributor role name (only if requested with <code>tag:t</code>) <p>Example: <pre><code>Request: \"roles 0 1 tags:t&lt;LF&gt;\"\nResponse: \"roles 0 1 rescan:1 count:6 role_id:1 role_name:ARTIST &lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/database/#albums","title":"albums","text":"<p><code>albums &lt;start&gt; &lt;itemsPerResponse&gt; &lt;taggedParameters&gt;</code></p> <p>The <code>albums</code> query returns all albums known by the server. The results of this query depend in part on the <code>Group discs</code> preference (Server Settings, Behavior).</p> <p>Accepted tagged parameters:</p> Tag Description <code>search</code> Search substring. The search is case insensitive and obeys the <code>Search Within Words</code> server parameter. <code>genre_id</code> Genre ID, to restrict the results to those albums with songs of that genre. The genre_id may be a list of comma separated IDs. <code>artist_id</code> Artist ID, to restrict the results to those albums by <code>artist_id</code>. <code>track_id</code> Track ID, to restrict the results to the album of <code>track_id</code>. If specified, all other filters are ignored. <code>album_id</code> Album ID, to restrict the results to a single album. Or a comma sparated list of album IDs, to restrict the results to a specific list of albums. If specified, all other filters are ignored. <code>role_id</code> Contributor role ID, to restrict the results to those albums by artist of role <code>role_id</code>. This parameter must be a comma separated list of role IDs, or a comma separated list of role tokens (eg. ALBUMARTIST, ARTIST) <code>library_id</code> Virtual library ID, to restrict the results to a virtual library view. <code>year</code> Year, to restrict the results to those albums of that year. <code>compilation</code> Compilation, to restrict the results to those albums that are (1) or aren't (0) compilations. <code>sort</code> Sort order of the returned list of albums. One of: <code>album</code>, (the default), <code>new</code> (sort by the date the item was added to the library, in descending order), <code>changed</code> (sort by change date in descending order), <code>lastplayed</code> (last time the item was played, in descending order), <code>playcount</code> (total count of the item's tracks playcount), <code>artflow</code> which sorts by artist, year, album for use with artwork-centric interfaces, <code>artistalbum</code>, <code>yearalbum</code>, <code>yearartistalbum</code>, <code>random</code>. <code>tags</code> Determines which tags are returned. Each returned tag is identified by a letter (see below). The default value is <code>l</code>. <p>Returned tagged parameters:</p> Block Tag Description First block: \u2060 \u2060 <code>rescan</code> Returned with value 1 if the server is still scanning the database. The results may therefore be incomplete. Not returned if no scan is in progress. <code>count</code> Number of results returned by the query. If no filter is present, this is the same value as returned by <code>info total albums ?</code> <code>CC</code> <code>count</code> Only return the number of results, but not the results themselves. CLARIFICATION-NEEDED <code>Z</code> <code>indexList</code> An array of arrays indicating how many items start with each key letter (or year for a year-dominated sort order). CLARIFICATION-NEEDED For each album: \u2060 \u2060 <code>id</code> Album ID. Item delimiter. <code>l</code> <code>album</code> Album name, including the server's added <code>(N of M)</code> if the server is set to group multi disc albums together. See tag <code>title</code> for the unmodified value. CLARIFICATION-NEEDED <code>y</code> <code>year</code> Album year. This is determined by the server based on the album tracks. <code>j</code> <code>artwork_track_id</code> Identifier of one of the album tracks, used by the server to display the album's artwork. <code>t</code> <code>title</code> <code>Raw</code> album title as found in the album tracks ID3 tags, as opposed to <code>album</code>. Note that <code>title</code> and <code>album</code> are identical if the server is set to group discs together. <code>i</code> <code>disc</code> Disc number of this album. Only if the server is not set to group multi-disc albums together. <code>q</code> <code>disccount</code> Number of discs for this album. Only if known. <code>w</code> <code>compilation</code> 1 if this album is a compilation. <code>W</code> <code>release_type</code> The release type of an album, eg. <code>album</code>, <code>ep</code>, etc. <code>a</code> <code>artist</code> The album artist (depends on server configuration). <code>aa</code> <code>artists</code> A comma separated list of album artists (depends on server configuration). <code>S</code> <code>artist_id</code> The album artist id (depends on server configuration). <code>SS</code> <code>artist_ids</code> A comma separated list of album artist ids (depends on server configuration). <code>s</code> <code>textkey</code> The album's <code>textkey</code> is the first letter of the sorting key. <code>E</code> <code>extid</code> The album's external ID, if it is eg. from an online music service. <code>R</code> <code>role_ids</code> A comma separated list of role ids for the album. <code>X</code> <code>album_replay_gain</code> The album's replay-gain. <code>2</code> <code>group_count &amp; contiguous_groups</code> Returns a count of distinct works/groupings/performances on the album and a flag indicating whether the groups are contiguous, to assist UI formatting of the album results. <code>4</code> <code>portraitid</code> The contributor's portrait ID <p>Examples: <pre><code>Request: \"albums 0 4&lt;LF&gt;\"\nResponse: \"albums 0 4 count:14 id:1 album:Amadeus%20(Disc%201%20of%202) id:4 album:Anastacia id:5 album:Bounce%20[Single] id:6 album:Fallen&lt;LF&gt;\"\n\nRequest: \"albums 0 5 genre_id:7&lt;LF&gt;\"\nResponse: \"albums 0 5 genre_id:7 count:2 id:4 album:Anastacia id:5 album:Bounce%20[Single]&lt;LF&gt;\"\n\nRequest: \"albums 0 5 artist_id:19&lt;LF&gt;\"\nResponse: \"albums 0 5 artist_id:19 count:1 id:5 album:Bounce%20[Single]&lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/database/#works","title":"works","text":"<p><code>works &lt;start&gt; &lt;itemsPerResponse&gt; &lt;taggedParameters&gt;</code></p> <p>The <code>works</code> query returns all works known by the server.</p> <p>A Work is a (usually classical) piece of music made up of one or more movements, acts, scenes etc, each of which is usually a separate track.</p> <p>A Work is defined by its name and its composer.</p> <p>An Album can contain many Works, and an instance of a Work can exist on many Albums. There is therefore a many-to-many relationship between Works and Albums. This many-to-many relationship is resolved in the Tracks table which contains the album id and the work id.</p> <p>Accepted tagged parameters:</p> Tag Description <code>search</code> Search string. The search is case insensitive and obeys the <code>Search Within Words</code> server parameter. <code>artist_id</code> Limit results to those works on which the artist identified by <code>artist_id</code> performs. <code>genre_id</code> Limit results to the genre(s) identified by <code>genre_id</code>. The genre_id may be a list of comma separated IDs. <code>library_id</code> Virtual library ID, to restrict the results to a virtual library view. <code>work_id</code> Limit results to an individual <code>work</code>. <code>role_id</code> Limit results to the role(s) identified by <code>role_id</code>. The role_id may be a list of comma separated IDs. <p>Returned parameters:</p> Block Tag Description First block: \u2060 \u2060 count <code>count</code> Number of results returned by the query. For each work: \u2060 \u2060 <code>single_composer</code> only returned if the results contain works from a single composer who is also the searched-for contributor <code>composer</code> the name of the composer of the work <code>work</code> the name of the work <code>composer_id</code> the id of the composer of the work <code>artwork_track_id</code> the id of the artwork for the first album found containing the work <code>artwork_track_ids</code> a list of all artwork ids of albums containing the work <code>album_id</code> a list of the ids of all albums containing the work <code>textkey</code> if <code>single_composer</code> (see above), the first letter of the work name, otherwise, the first letter of the composer name <code>favorites_url</code> the URL for favoriting the work <code>favorites_title</code> the text to be used for the favorite"},{"location":"reference/cli/database/#years","title":"years","text":"<p><code>years &lt;start&gt; &lt;itemsPerResponse&gt; &lt;taggedParameters&gt;</code></p> <p>The <code>years</code> query returns all years known by the server.</p> <p>Accepted tagged parameters:</p> Tag Description <code>year</code> Return only the specified year. <code>hasAlbums:1</code> Return only years which are valid for albums. <p>Returned tagged parameters:</p> Block Tag Description First block: \u2060 \u2060 <code>rescan</code> Returned with value 1 if the server is still scanning the database. The results may therefore be incomplete. Not returned if no scan is in progress. For each year: \u2060 \u2060 <code>year</code> Year. Item delimiter. <p>Example: <pre><code>Request: \"years 0 5&lt;LF&gt;\"\nResponse: \"years 0 5 rescan:1 count:6 year:1985 year:1987 year:1988 year:2002 year:2003 year:2004 &lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/database/#musicfolder","title":"musicfolder","text":"<p><code>musicfolder &lt;start&gt; &lt;itemsPerResponse&gt; &lt;taggedParameters&gt;</code></p> <p>The <code>musicfolder</code> query returns the content of a given music folder, starting from the top level directory configured in the server.</p> <p><code>mediafolder</code> is an alias to <code>musicfolder</code>.</p> <p>Accepted tagged parameters:</p> Tag Description <code>folder_id</code> Browses the folder identified by <code>folder_id</code>. <code>return_top</code> If set to 1, and <code>folder_id</code> is provided, will return the data about the listed folder instead of the child folders. <code>url</code> Browses the folder identified by <code>url</code>. If the content of <code>url</code> did not happen to be in the server database, it is added to it. <code>url</code> has precedence over <code>folder_id</code> if both are provided. <code>type</code> One of <code>audio</code>, or <code>list</code>. Select the media type you want to browse in the given folder. <code>tags</code> Determines which tags are returned. Each returned tag is identified by a letter (see below). The default value is empty. <code>recursive</code> If set to 1, the query will return information about the requested folder and its sub-folders, and all files in there. <p>Returned tagged parameters:</p> Block Tag Description First block: \u2060 \u2060 <code>rescan</code> Returned with value 1 if the server is still scanning the database. The results may therefore be incomplete. Not returned if no scan is in progress. <code>count</code> Number of results returned by the query. For each item in the folder: \u2060 \u2060 <code>id</code> Track, playlist or folder ID. Item delimiter. <code>type</code> One of <code>track</code>, <code>folder</code>, <code>playlist</code>, or <code>unknown</code>. <code>c</code> <code>coverid</code> coverid to use when constructing an artwork URL, such as /music/$coverid/cover.jpg <code>d</code> <code>duration</code> Song duration in seconds. <code>s</code> <code>textkey</code> The item's <code>textkey</code> is the first letter of the sorting key. <code>u</code> <code>url</code> The item's full URL. <p>Example: <pre><code>Request: \"musicfolder 0 10&lt;LF&gt;\"\nResponse: \"musicfolder 0 10 count:26 id:1 title:03%20Barbie%20Girl.mp3 type:audio id:2 title:12%20-%20If%20I%20Had%20You.mp3 type:audio id:313 title:A-Ha type:dir id:50 title:Test.m3u type:playlist&lt;LF&gt;\"\n\nRequest: \"musicfolder 0 10 folder_id:313&lt;LF&gt;\"\nResponse: \"musicfolder 0 10 folder_id:313 count:2 id:335 title:Lifelines type:dir id:336 title:Minor%20Earth%20Major%20Sky type:dir&lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/database/#mediafolder","title":"mediafolder","text":"<p><code>mediafolder</code> is an alias of <code>musicfolder</code></p>"},{"location":"reference/cli/database/#playlists","title":"playlists","text":"<p><code>playlists &lt;start&gt; &lt;itemsPerResponse&gt; &lt;taggedParameters&gt;</code></p> <p>The <code>playlists</code> query returns all playlists known by the server.</p> <p>Accepted tagged parameters:</p> Tag Description <code>search</code> Search substring. The search is case insensitive and obeys the <code>Search Within Words</code> server parameter. <code>tags</code> Determines which tags are returned. Each returned tag is identified by a letter (see below). The default value is empty. <p>Returned tagged parameters:</p> Block Tag Description First block: \u2060 \u2060 <code>rescan</code> Returned with value 1 if the server is still scanning the database. The results may therefore be incomplete. Not returned if no scan is in progress. <code>count</code> Number of results returned by the query. For each playlist: \u2060 \u2060 <code>id</code> Playlist ID. Item delimiter. <code>playlist</code> Playlist name <code>s</code> <code>textkey</code> The playlist's <code>textkey</code> is the first letter of the sorting key. <code>u</code> <code>url</code> The playlist's url. <code>E</code> <code>extid</code> The playlist's external ID, if it is eg. from an online music service. <code>x</code> <code>remote</code> If 1, this is a remote playlist. <p>Example: <pre><code>Request: \"playlists 0 2&lt;LF&gt;\"\nResponse: \"playlists 0 2 count:5 id:37 name:Funky%20Beats id:57 name:SUPER&lt;LF&gt;\"\n\nRequest: \"playlists 0 2 search:SUPER tags:u&lt;LF&gt;\"\nResponse: \"playlists 0 2 search:SUPER tags:u count:1 id:57 name:SUPER url:playlist:///Volume/path/file.m3u&lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/database/#playlists-tracks","title":"playlists tracks","text":"<p><code>playlists tracks &lt;start&gt; &lt;itemsPerResponse&gt; &lt;taggedParameters&gt;</code></p> <p>The <code>playlists tracks</code> query returns the tracks of a given playlist.</p> <p>Accepted tagged parameters:</p> Tag Description <code>playlist_id</code> Playlist ID as returned by the <code>playlists</code> query. This is a mandatory parameter. <code>tags</code> Determines which tags are returned. Each returned tag is identified by a letter (see command <code>songinfo</code> for a list of possible fields and their identifying letter). The default tags value for this command is <code>gald</code>. <p>Returned tagged parameters:</p> Block Tag Description First block: \u2060 \u2060 <code>rescan</code> Returned with value 1 if the server is still scanning the database. The results may therefore be incomplete. Not returned if no scan is in progress. <code>count</code> Number of tracks in the playlist. For each track: \u2060 \u2060 <code>playlist index</code> Index (first item is 0) of the track in the playlist. The first returned instance of this field is equal to start. Item seperator. <code>Tags</code> Same tags as defined in command <code>songinfo</code>."},{"location":"reference/cli/database/#playlists-rename","title":"playlists rename","text":"<p><code>playlists rename &lt;taggedParameters&gt;</code></p> <p>This command renames a saved playlist.</p> <p>Accepted tagged parameters:</p> Tag Description <code>playlist_id</code> The id of the playlist to rename. <code>newname</code> The new name of the playlist (without .m3u). <code>dry_run</code> Used to check if the new name is already used by another playlist. The command performs the name check but does not overwrite the existing playlist. If a name conflict occurs, the command will return a <code>overwritten_playlist_id</code> parameter. <p>Returned tagged parameters:</p> Tag Description <code>overwritten_playlist_id</code> This returns the playlist id of the playlist overwritten (if <code>dry_run</code> is 0 or not present) by renaming the playlist. Only present if a playlist is overwritten. <p>Examples: <pre><code>Request: \"playlists rename playlist_id:22 newname:Hello&lt;LF&gt;\"\nResponse: \"playlists rename playlist_id:22 newname:Hello&lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/database/#playlists-new","title":"playlists new","text":"<p><code>playlists new &lt;taggedParameters&gt;</code></p> <p>This command creates an empty saved playlist, to be further manipulated by other commands.</p> <p>Accepted tagged parameters:</p> Tag Description <code>name</code> The name of the playlist (without .m3u). <p>Returned tagged parameters:</p> Tag Description <code>playlist_id</code> This returns the playlist id of the created playlist. <code>overwritten_playlist_id</code> This returns the playlist id of an existing playlist with the same name. The new playlist is not created. <p>Examples: <pre><code>Request: \"playlists new name:Hello&lt;LF&gt;\"\nResponse: \"playlists new name:Hello playlist_id:345&lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/database/#playlists-delete","title":"playlists delete","text":"<p><code>playlists delete &lt;taggedParameters&gt;</code></p> <p>This command deletes a saved playlist.</p> <p>Accepted tagged parameters:</p> Tag Description <code>playlist_id</code> The id of the playlist to delete. <p>Examples: <pre><code>Request: \"playlists delete playlist_id:22&lt;LF&gt;\"\nResponse: \"playlists delete playlist_id:22&lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/database/#playlists-edit","title":"playlists edit","text":"<p><code>playlists edit &lt;taggedParameters&gt;</code></p> <p>This command manipulates the track content of a saved playlist.</p> <p>Accepted tagged parameters:</p> Tag Description <code>playlist_id</code> The id of the playlist to manipulate. <code>cmd</code> One of <code>up</code>, <code>down</code>, <code>move</code>, <code>delete</code> or <code>add</code>, in order to move up, down, delete or add a track. <code>index</code> For <code>cmd:up</code>, <code>cmd:down</code>, <code>cmd:move</code> and <code>cmd:delete</code> the index of the track to edit. <code>toindex</code> For <code>cmd:move</code> the new index of the track to be moved. <code>title</code> For <code>cmd:add</code>, the title of the track to add. <code>url</code> For <code>cmd:add</code>, the url of the track to add. <p>Examples: <pre><code>Request: \"playlists edit cmd:up playlist_id:22 index:3&lt;LF&gt;\"\nResponse: \"playlists edit cmd:up playlist_id:22 index:3&lt;LF&gt;\"\n\nRequest: \"playlists edit cmd:add playlist_id:22 title:Song url:file://...&lt;LF&gt;\"\nResponse: \"playlists edit cmd:add playlist_id:22 title:Song url:file://...&lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/database/#songinfo","title":"songinfo","text":"<p><code>songinfo &lt;start&gt; &lt;itemsPerResponse&gt; &lt;taggedParameters&gt;</code></p> <p>The <code>songinfo</code> command returns all the information on a song known by the server. Please note that the  and  parameters apply to the individual data fields below and not, as they do in other extended CLI queries, to the number of songs (or artists, genres, etc.) returned; the <code>songinfo</code> only ever returns information about a single song. <p>Accepted tagged parameters:</p> Tag Description <code>url</code> Song path as returned by other CLI commands. This is a mandatory parameter, except if <code>track_id</code> is provided. <code>track_id</code> Track ID as returned by other CLI commands. This is a mandatory parameter, except if <code>url</code> is provided. <code>tags</code> Determines which tags are returned. Each returned tag is identified by a letter (see below). The default value is all info except the url (<code>u</code>) and the multi-valued tags for genre(s) (<code>G</code> &amp; <code>P</code>) and artists (<code>A</code> &amp; <code>S</code>) <p>Returned tagged parameters:</p> Tag Description <code>rescan</code> Returned with value 1 if the server is still scanning the database. The results may therefore be incomplete. Not returned if no scan is in progress. <code>count</code> Number of results returned by the query, that is, total number of elements to return for this song. <code>id</code> Track ID. <code>title</code> Song title <code>a</code> <code>artist</code> Artist name. <code>A</code> <code>&lt;role&gt;</code> For every artist role (one of <code>artist</code>, <code>composer</code>, <code>conductor</code>, <code>band</code>, <code>albumartist</code> or <code>trackartist</code>), a comma and space (', ') separated list of names. <code>AA</code> <code>&lt;role&gt;</code> This is like <code>A</code>, but without the space after the comma. This should simplify parsing/splitting when required. <code>B</code> <code>buttons</code> A hash with button definitions. Only available for certain plugins such as Pandora. <code>c</code> <code>coverid</code> coverid to use when constructing an artwork URL, such as /music/$coverid/cover.jpg <code>C</code> <code>compilation</code> 1 if the album this track belongs to is a compilation <code>K</code> <code>artwork_url</code> A full URL to remote artwork. Only available for certain online music services. <code>W</code> <code>release_type</code> The release type of the track's album, eg. <code>album</code>, <code>ep</code>, etc. <code>d</code> <code>duration</code> Song duration in seconds. <code>e</code> <code>album_id</code> Album ID. Only if known. <code>f</code> <code>filesize</code> Song file length in bytes. Only if known. <code>g</code> <code>genre</code> Genre name. Only if known. <code>G</code> <code>genres</code> Genre names, separated by commas (only useful if the server is set to handle multiple items in tags). <code>i</code> <code>disc</code> Disc number. Only if known. <code>I</code> <code>samplesize</code> Song sample size (in bits) <code>j</code> <code>coverart</code> 1 if coverart is available for this song. Not listed otherwise. <code>J</code> <code>artwork_track_id</code> Identifier of the album track used by the server to display the album's artwork. Not listed if artwork is not available for this album. <code>k</code> <code>comment</code> Song comments, if any. <code>K</code>  artwork_url A full URL to remote artwork. Only available for certain online music services. <code>l</code> <code>album</code> Album name. Only if known. <code>L</code> <code>info_link</code> A custom link to use for trackinfo. Only available for certain online music services. <code>m</code> <code>bpm</code> Beats per minute. Only if known. <code>M</code> <code>musicmagic_mixable</code> 1 if track is mixable, otherwise 0. <code>n</code> <code>modificationTime</code> Date and time song file was last changed on disk. <code>N</code> <code>remote_title</code> Title of the internet radio station. <code>o</code> <code>type</code> Content type. Only if known. <code>Q</code> <code>lossless</code> 1 if track is lossless, otherwise 0. <code>p</code> <code>genre_id</code> Genre ID. Only if known. <code>P</code> <code>genre_ids</code> Genre IDs, separated by commas (only useful if the server is set to handle multiple items in tags). <code>D</code> <code>addedTime</code> Date and time song file was first added to the database. <code>U</code> <code>lastUpdated</code> Date and time song file was last updated in the database. <code>q</code> <code>disccount</code> Number of discs. Only if known. <code>r</code> <code>bitrate</code> Song bitrate. Only if known. <code>R</code> <code>rating</code> Song rating, if known and greater than 0. <code>O</code> <code>playcount</code> Song play count. <code>s</code> <code>artist_id</code> Artist ID. <code>S</code> <code>&lt;role&gt;_ids</code> For each role as defined above, the list of ids (comma separated). <code>t</code> <code>tracknum</code> Track number. Only if known. <code>T</code> <code>samplerate</code> Song sample rate (in KHz) <code>u</code> <code>url</code> Song file url. <code>v</code> <code>tagversion</code> Version of tag information in song file. Only if known. <code>w</code> <code>lyrics</code> Lyrics. Only if known. <code>x</code> <code>remote</code> If 1, this is a remote track. <code>E</code> <code>extid</code> Some tracks have an external identifier (eg. from an online music service). <code>X</code> <code>album_replay_gain</code> Replay gain of the album (in dB), if any <code>y</code> <code>year</code> Song year. Only if known. <code>Y</code> <code>replay_gain</code> Replay gain (in dB), if any <code>V</code> <code>live_edge</code> The Live edge of a remote stream. -1 is not live, 0 is live at the edge, &gt;0 is number of seconds from the live edge. <code>4</code> <code>portraitid</code> The contributor's portrait ID <p>Example: <pre><code>Request: \"songinfo 0 100 track_id:2&lt;LF&gt;\"\nResponse: \"songinfo 0 100 track_id:2 count:26 id:2 title:If%20I%20Had%20You artist:Diana%20Krall duration:297.117 album_id:2 filesize:5952369 genre:Vocal comment:Pianist%2Fvocalist%20Diana%20Krall%20pays%20tribute%20to%20the%20Nat%20King%20Cole%20Trio.... album:All%20for%20You modificationTime:Thursday%2C%20March%201%2C%202007%2C%209:21:58%20PM type:mp3 genre_id:2 bitrate:160kbps%20VBR artist_id:3 tracknum:12 tagversion:ID3v2.3.0 year:1995 samplerate:44100 url:file:%2F%2F%2FUsers%2Ffred%2FPrograms%2FLyrion Music Server%2FMusic%2F12%2520-%2520If%2520I%2520Had%2520You.mp3 &lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/database/#titlessongstracks","title":"titles|songs|tracks","text":"<p><code>titles|songs|tracks &lt;start&gt; &lt;itemsPerResponse&gt; &lt;taggedParameters&gt;</code></p> <p>The <code>titles</code> command returns all titles known by the server.</p> <p><code>songs</code> and <code>tracks</code> are aliases for <code>titles</code></p> <p>Accepted tagged parameters:</p> Tag Description <code>genre_id</code> Genre ID, to restrict the results to the titles of that genre. <code>artist_id</code> Artist ID, to restrict the results to the titles of that artist. <code>album_id</code> Album ID, to restrict the results to the titles of that album. <code>track_id</code> Track ID, to restrict the results to a single track. <code>role_id</code> Contributor role ID, to restrict the results to the artist of role <code>role_id</code>. This parameter must be a comma separated list of role IDs, or a comma separated list of role tokens (eg. ALBUMARTIST, ARTIST) <code>release_type</code> The release type of the track's album, eg. <code>album</code>, <code>ep</code>, etc. <code>library_id</code> Virtual library ID, to restrict the results to a virtual library view. <code>year</code> Year, to restrict the results to the titles of that year. <code>search</code> Search substring. The search is case insensitive and obeys the <code>Search Within Words</code> server parameter. <code>tags</code> Determines which tags are returned. Each returned tag is identified by a letter (see command <code>songinfo</code> for a list of possible fields and their identifying letter). The default tags value for this command is <code>gald</code>. <code>CC</code> Only return the number of results, but not the results themselves. <code>sort</code> Sorting, one of:-<code>title</code> (the default), <code>tracknum</code> (in which case the track field (<code>t</code>) is added automatically to the response) or <code>albumtrack</code> (in which case the track and album-title fields (<code>l</code> and <code>t</code>) are added automatically to the response). Sorting by tracks is possible only if tracks are defined and for a single album. <p>Returned tagged parameters:</p> Block Tag Description First block: \u2060 \u2060 <code>rescan</code> Returned with value 1 if the server is still scanning the database. The results may therefore be incomplete. Not returned if no scan is in progress. <code>count</code> Number of results returned by the query. If no search string or album/artist/genre filter is present, this is the same value as returned by <code>info total songs ?</code>. For each title: \u2060 \u2060 <code>Tags</code> Same tags as defined in command <code>songinfo</code>. <p>Example: <pre><code>Request: \"titles 0 2&lt;LF&gt;\"\nResponse: \"titles 0 2 count:100 id:55 title:Ancestral%20Aid genre:Soundtrack artist:Various%20Artists album:The%20Hunt%20For%20Red%20October duration:136.93387755102 disc:1 track:5 year:1990 url:file://Disk | he%20Hunt%20For%20Red%20October/Ancestral%20Aid.mp3 id:1 title:Any%20How genre:Acid%20Jazz artist:Llorca album:New%20Comer duration:340.297142857143 track:5 year:2001 url:...&lt;LF&gt;\"\n\nRequest: \"titles 0 12 album:Anastacia tags:p&lt;LF&gt;\"\nResponse: \"titles 0 12 album:Anastacia tags:p count:12 id:4 title:Heavy%20On%20My%20Heart url:... id:1 title:I%20Do url:... id:2 title:Left%20Outside%20Alone url:...&lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/database/#tags","title":"tags","text":"<p><code>tags &lt;url|track_id&gt;</code></p> <p>Return the tracks found in the file referenced by the <code>url</code> or <code>track_id</code>.</p> <p>Please note that returned data depends on the file format, tagging software used, etc.</p> <p>Accepted tagged parameters:</p> Tag Description <code>url</code> The <code>file://</code> or <code>tmp://</code> URL to the audio file. <code>track_id</code> The track's ID <p>Example: <pre><code>Request: \"tags track_id:454&lt;LF&gt;\"\nResponse: tags track_id%3A454 ALBUM%3A0 ARTIST%3ALow%20Roar COMMENT%3A%40JW DATE%3A2014 GENRE%3AAlternative REPLAYGAIN_ALBUM_GAIN%3A-9.18%20dB REPLAYGAIN_ALBUM_PEAK%3A1.00000000 REPLAYGAIN_REFERENCE_LOUDNESS%3A89.0%20dB REPLAYGAIN_TRACK_GAIN%3A-3.16%20dB REPLAYGAIN_TRACK_PEAK%3A0.96447754 TITLE%3AIn%20the%20Morning TRACKNUMBER%3A8 VENDOR%3Areference%20libFLAC%201.2.1%2020070917\n</code></pre></p>"},{"location":"reference/cli/database/#search","title":"search","text":"<p><code>search &lt;start&gt; &lt;itemsPerResponse&gt; &lt;taggedParameters&gt;</code></p> <p>The <code>search</code> command returns artists, albums and tracks matching a search string.</p> <p>Please note that <code>start</code> and <code>itemsPerResponse</code> are calculated per category. If you eg. have genres and tracks with the search term in them, you'll get <code>itemsPerResponse</code> number of each of them. The total number of items returned therefore can be a multiple of <code>itemsPerResponse</code>.</p> <p>Accepted tagged parameters:</p> Tag Description <code>term</code> Search string <p>Returned tagged parameters:</p> Block Tag Description First block: \u2060 \u2060 <code>rescan</code> Returned with value 1 if the server is still scanning the database. The results may therefore be incomplete. Not returned if no scan is in progress. <code>count</code> Total number of results returned by the query. This is the sum of <code>artists_count</code>, <code>albums_count</code> and <code>tracks_count</code>. <code>artists_count</code> Total number of artists found. <code>albums_count</code> Total number of albums found. <code>genres_count</code> Total number of genres found. <code>tracks_count</code> Total number of tracks found. For each artist: \u2060 \u2060 <code>artist_id</code> Artist ID. <code>artist</code> Artist name. For each album: \u2060 \u2060 <code>album_id</code> Album ID. <code>albu</code> Album title For each genre: \u2060 \u2060 <code>genre_id</code> Genre ID. <code>genre</code> Genre title. For each track: \u2060 \u2060 <code>track_id</code> Track ID. <code>track</code> Track title. <p>Example: <pre><code>Request: \"search 0 20 term:al&lt;LF&gt;\"\nResponse: \"search 0 20 term:al count:9 artists_count:2 albums_count:1 tracks_count:6 artist_id:2 artist:Alanis%20Morissette artist_id:37 artist:Alphaville album_id:10 album:All%20Time%20Greatest%20Hits%20%5BBarry%20White%5D%20MMM track_id:11 track:All%20I%20Really%20Want track_id:68 track:The%20Sun%20Always%20Shines%20On%20TV track_id:185 track:All%20Around%20The%20World track_id:189 track:Give%20Me%20All%20Your%20Love%20%5BSingle%20Cut%5D track_id:245 track:Better%20All%20The%20Time\n</code></pre></p>"},{"location":"reference/cli/database/#pragma","title":"pragma","text":"<p><code>pragma &lt;pragma string&gt;</code></p> <p>The <code>pragma</code> command executes the given pragma string against the SQLite database engine. If using MySQL, this command has no effect. For a list of available pragmas, see sqlite.org. Warning: Do not use this function unless you know what you are doing!</p> <p>Example: <pre><code>pragma locking_mode = NORMAL\n</code></pre></p>"},{"location":"reference/cli/favorites/","title":"CLI - Favorites commands and queries","text":""},{"location":"reference/cli/favorites/#favorites-commands-and-queries","title":"Favorites commands and queries","text":""},{"location":"reference/cli/favorites/#favorites-items","title":"favorites items","text":"<p><code>favorites items &lt;start&gt; &lt;itemsPerResponse&gt; &lt;taggedParameters&gt;</code></p> <p>The <code>favorites items</code> query returns all server favorites.</p> <p>Accepted tagged parameters:</p> Tag Description <code>item_id</code> The id of a favorite to be returned. The id represents the hierarchical structure of the file using a dotted syntax similar to the one used in SNMP, like eg. 2.0.9.3 <code>search</code> When a list of items is to be returned, it can be filtered by its name or title. <code>want_url</code> If set to 1, urls are returned by the query, otherwise they aren't. <code>feedMode</code> If set to 1, the entire nested hierarchy of favorites is returned. In this case, the type will be opml and the nested sub-items will be in each level's items array. <p>Returned tagged parameters:</p> Block Tag Description First block: \u2060 \u2060 <code>count</code> The number of items available at the selected level. For each element: \u2060 \u2060 <code>id</code> An item's hierarchical id. Item delimiter. <code>name</code> An item's (favorite or folder) name. <code>hasitems</code> Whether or not an item has sub-items. May indicate the number of sub-items. <code>url</code> URL of the station or track (only returned if parameter <code>want_url</code> is set to 1). Although, the station can be played using the playlist play command, an equivalent command that operates on the id is provided below."},{"location":"reference/cli/favorites/#favorites-exists","title":"favorites exists","text":"<p><code>favorites exists &lt;id | url&gt;</code></p> <p>The <code>favorites exists</code> command is used to check whether a given track ID or URL exists in favorites.</p> <p>Returned tagged parameters:</p> Tag Description <code>exists</code> Returned with value 1 if the ID or URL exists in favorites. <code>index</code> If exists is 1, the index of the ID or URL in favorites. <p>Example: <pre><code>Request: \"favorites exists file:///... &lt;LF&gt;\"\nResponse: \"favorites exists file:///... exists:1 index:5&lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/favorites/#favorites-add","title":"favorites add","text":"<p><code>favorites add &lt;taggedParameters&gt;</code></p> <p>The <code>favorites add</code> command adds a favorite.</p> <p>Accepted tagged parameters:</p> Tag Description <code>item_id</code> The id of a favorite to be inserted. The id represents the hierarchical structure of the file using a dotted syntax similar to the one used in SNMP, like eg. 2.0.9.3.Room is made to accommodate the new favorite. If no item_id is provided, the favorite is added at position 0. <code>title</code> Favorite title (mandatory) <code>url</code> Favorite url (mandatory) <code>icon</code> Optional URL to an icon to be used with this favorite. <p>Returned tagged parameters:</p> Tag Description <code>count</code> Returned with value 1 if adding the favorite was successful. <p>Example: <pre><code>Request: \"favorites add url:file:///... title:BestSong&lt;LF&gt;\"\nResponse: \"favorites add url:file:///... title:BestSong\ncount:1&lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/favorites/#favorites-addlevel","title":"favorites addlevel","text":"<p><code>favorites addlevel &lt;taggedParameters&gt;</code> The <code>favorites addlevel</code> command adds a favorite level (a folder).</p> <p>Accepted tagged parameters:</p> Tag Description item_id The id of a level to be inserted. The id represents the hierarchical structure of the level using a dotted syntax similar to the one used in SNMP, like eg. 2.0.9.3.Room is made to accommodate the new level. If no item_id is provided, the level is added at position 0. title Level title (mandatory) <p>Returned tagged parameters:</p> Tag Description count Returned with value 1 if adding the level was successful. <p>Example: <pre><code> Request: \"favorites addlevel title:Favourites&lt;LF&gt;\"\n Response: \"favorites addlevel title:Favourites count:1&lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/favorites/#favorites-delete","title":"favorites delete","text":"<p><code>favorites delete &lt;taggedParameters&gt;</code></p> <p>The <code>favorites delete</code> command deletes a favorite or a level.</p> <p>Accepted tagged parameters:</p> Tag Description item_id The id of a favorite or level to be deleted. The id represents the hierarchical structure of the file using a dotted syntax similar to the one used in SNMP, like eg. 2.0.9.3.This parameter is mandatory. <p>Example: <pre><code>Request: \"favorites delete item_id:1.2.3.4.5&lt;LF&gt;\"\nResponse: \"favorites delete item_id:1.2.3.4.5&lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/favorites/#favorites-rename","title":"favorites rename","text":"<p><code>favorites rename &lt;taggedParameters&gt;</code></p> <p>The <code>favorites rename</code> command renames a favorite or a level.</p> <p>Accepted tagged parameters:</p> Tag Description item_id The id of a favorite or level to be renamed. The id represents the hierarchical structure of the file using a dotted syntax similar to the one used in SNMP, like eg. 2.0.9.3.This parameter is mandatory. title The new title to rename this item to. This parameter is mandatory. <p>Example: <pre><code>Request: \"favorites rename item_id:1.2.3.4.5 title:NewTitle&lt;LF&gt;\"\nResponse: \"favorites rename item_id:1.2.3.4.5 title:NewTitle&lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/favorites/#favorites-move","title":"favorites move","text":"<p><code>favorites move &lt;taggedParameters&gt;</code></p> <p>The <code>favorites move</code> command moves a favorite or a level.</p> <p>Accepted tagged parameters:</p> Tag Description from_id The id of a favorite or level to be moved. The id represents the hierarchical structure of the file using a dotted syntax similar to the one used in SNMP, like eg. 2.0.9.3.This parameter is mandatory. to_id The id to move the favorite or level to. The id represents the hierarchical structure of the file using a dotted syntax similar to the one used in SNMP, like eg. 2.0.9.3.This parameter is mandatory. <p>Example: <pre><code>Request: \"favorites move from_id:1.2.3.4.5 to_id:5.4.3.2.1&lt;LF&gt;\"\nResponse: \"favorites move from_id:1.2.3.4.5 to_id:5.4.3.2.1&lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/favorites/#favorites-playlist","title":"favorites playlist","text":"<p><code>&lt;playerid&gt; favorites playlist &lt;play|load|insert|add&gt; &lt;taggedParameters&gt;</code></p> <p>This command adds or plays a favorite. If item_id defines an item that can't be played, but contains playable subitems, then these will be played instead. This allows to eg. play all tracks of a genre.</p> <p>Accepted tagged parameters:</p> Tag Description item_id The id of an item to be played. The id represents the hierarchical structure of the file using a dotted syntax similar to the one used in SNMP, like eg. 2.0.9.3 <p>Example: <pre><code>Request: \"6e:ef:54:e9:02:b0 favorites playlist play item_id:1.1&lt;LF&gt;\"\nResponse: \"6e:ef:54:e9:02:b0 favorites playlist play item_id:1.1&lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/general/","title":"General commands","text":""},{"location":"reference/cli/general/#login","title":"login","text":"<p><code>login &lt;user&gt; &lt;password&gt;</code></p> <p>The <code>login</code> command allows the caller to authenticate itself on the server, as defined in the Security pane of the server preferences. Like any other command, the user and password must be escaped. If successful, the server replaces the password with 6 star characters. If unsuccessful, the server returns the same, then disconnects. If security is off this command is always successful.</p> <p>Examples:</p> <pre><code>Request: \"login user correctpassword&lt;LF&gt;\"\nResponse: \"login user ******&lt;LF&gt;\"\n\nRequest: \"login user wrongpassword&lt;LF&gt;\"\nResponse: \"login user ******&lt;LF&gt;\" (Connection terminated)\n</code></pre>"},{"location":"reference/cli/general/#can","title":"can","text":"<p><code>can &lt;request terms&gt; ?</code></p> <p>The <code>can</code> query allows the caller to determine if the command or query indicated by  is available. <p>Examples:</p> <pre><code>Request: \"can info total genres ?&lt;LF&gt;\"\nResponse: \"can info total genres 1&lt;LF&gt;\"\n\nRequest: \"can smurf ?&lt;LF&gt;\"\nResponse: \"can smurf 0&lt;LF&gt;\"\n</code></pre>"},{"location":"reference/cli/general/#version","title":"version","text":"<p><code>version ?</code></p> <p>The <code>version</code> query returns version number of the server.</p> <p>Examples:</p> <pre><code>Request: \"version ?&lt;LF&gt;\"\nResponse: \"version 6.5&lt;LF&gt;\"\n</code></pre>"},{"location":"reference/cli/general/#listen","title":"listen","text":"<p><code>listen &lt;0|1|?&gt;</code></p> <p>The <code>listen</code> command enables to receive asynchronously internal server commands (notifications) on the CLI connection. Notifications concern all activity in the server, not just the activity triggered by the command-line. Use <code>0</code> to clear, <code>1</code> to set, <code>?</code> to query, and no parameter to toggle the listen state of the command-line connection.</p> <p>If only certain notifications are of interrest, consider using the <code>subscribe</code> command below. The <code>listen</code> command shares some of its internal plumbing with <code>subscribe</code> so using <code>subscribe xxx</code> changes the list of echoed notifications from nothing or everything to only xxx.</p> <p>Please consult section Notifications for a list of possible notifications.</p> <p>Examples:</p> <pre><code>Request: \"listen 1&lt;LF&gt;\"\nResponse: \"listen 1&lt;LF&gt;\"\n\"04:20:00:12:23:45 mixer volume 25&lt;LF&gt;\"\n\"04:20:00:12:23:45 pause&lt;LF&gt;\"\n</code></pre>"},{"location":"reference/cli/general/#subscribe","title":"subscribe","text":"<p><code>subscribe &lt;comma_separated_notification_list&gt;</code></p> <p>The <code>subscribe</code> command is similar to <code>listen</code> but echoes only a subset of the notifications, indicated by a comma separated list. If no list is provided, the notifications are turned off. This command shares some of its internal plumbing with <code>listen</code> so using <code>listen 0</code> or <code>listen 1</code> changes the list of echoed notifications (to nothing and everything, respectively).</p> <p>Please consult section Notifications for a list of possible notifications.</p> <p>Examples:</p> <pre><code>Request: \"subscribe mixer,pause&lt;LF&gt;\"\nResponse: \"subscribe mixer,pause&lt;LF&gt;\"\n\"04:20:00:12:23:45 mixer volume 25&lt;LF&gt;\"\n\"04:20:00:12:23:45 pause&lt;LF&gt;\"\n</code></pre>"},{"location":"reference/cli/general/#pref","title":"pref","text":"<p><code>pref &lt;prefname|namespace:prefname&gt; &lt;prefvalue|?&gt;</code></p> <p>The <code>pref</code> command allows the caller to set and query the server's internal preference values. The following affect the behaviour of CLI queries and commands:</p> <ul> <li><code>authorize</code>: Security enabled or not. If enabled, usage of the <code>login</code> command is required.</li> <li><code>groupdiscs</code>: handling of multiple disc sets. Affects the <code>albums</code> query.</li> <li><code>variousArtistAutoIdentification</code>: compilation artists are listed as <code>Various Artists</code>. Affects the <code>artists</code> query.</li> <li><code>splitList</code>: delimiter for multiple items in tags. Affects all the queries returning genres, mainly <code>genres</code>.</li> <li><code>composerInArtists</code>, <code>conductorInArtists</code>, <code>bandInArtists</code>: determines which contributors are considered artists. Affects the <code>info total artists ?</code> query.</li> </ul> <p>If you want to query/set a preference from a namespace other than <code>server</code> (eg. a plugin), you'll have to prepend the desired namespace to the prefname.</p> <p>Examples:</p> <pre><code>Request: \"pref audiodir ?&lt;LF&gt;\"\nResponse: \"pref audiodir %2fUsers%2fdean%2fDesktop%2ftest%20music&lt;LF&gt;\"\n\nRequest: \"pref plugin.rescan:time ?&lt;LF&gt;\"\nResponse: \"pref plugin.rescan:time 32400&lt;LF&gt;\"\n\nRequest: \"pref playlistdir %2fUsers%2fdean%2fplaylists&lt;LF&gt;\"\nResponse: \"pref playlistdir %2fUsers%2fdean%2fplaylists&lt;LF&gt;\"\n</code></pre>"},{"location":"reference/cli/general/#pref-validate","title":"pref validate","text":"<p><code>pref validate &lt;prefname|namespace:prefname&gt; &lt;prefvalue&gt;</code></p> <p>The <code>pref validate</code> command allows the caller to validate a server's internal preference value without setting it.</p> <p>If you want to validate a preference from a namespace other than <code>server</code> (eg. a plugin), you'll have to prepend the desired namespace to the prefname.</p> <p>Examples: <pre><code>Request: \"pref validate bufferSecs 10\"\nResponse: \"pref validate bufferSecs valid:1\"\n\nRequest: \"pref validate audiodir %2fsome%2fincorrect%2ffilepath\"\nResponse: \"pref validate audiodir valid:0\"\n</code></pre></p>"},{"location":"reference/cli/general/#artworkspec","title":"artworkspec","text":"<p><code>artworkspec add &lt;specification&gt; &lt;name&gt;</code></p> <p>The <code>artworkspec</code> command allows the caller to set custom artwork resizing specifications. These are used during a media scan to pre-cache artwork in the given size and format. The name is optional, but allows to recognize, which client would have registered a specification.</p> <p>Example:</p> <pre><code>artworkspec add 300x300_p My%20Favorite%20Controller%20App\n</code></pre>"},{"location":"reference/cli/general/#logging","title":"logging","text":"<p><code>logging &lt;group:logging group&gt; [&lt;persist:1&gt;]</code></p> <p>The <code>logging</code> command allows setting some logging levels. Today you can only set one of the following logging groups: server, radio, transcoding, scanner. The optional persist parameter defines whether the change should be persistent or not.</p> <p>Examples:</p> <pre><code>Request: \"logging group:scanner&lt;LF&gt;\"\nResponse: \"logging group:scanner&lt;LF&gt;\"\n</code></pre>"},{"location":"reference/cli/general/#getstring","title":"getstring","text":"<p><code>getstring &lt;STRINGTOKEN1[,STRINGTOKEN2...]&gt;</code></p> <p>The <code>getstring</code> command allows the caller to query one or several localized strings. String tokens can be passed as a single, concatenated value.</p> <p>Examples:</p> <pre><code>Request: \"getstring HOME &lt;LF&gt;\"\nResponse: \"getstring HOME:Startseite &lt;LF&gt;\"\n\nRequest: \"getstring SETTINGS,SCREENSAVERS,HOME &lt;LF&gt;\"\nResponse: \"getstring SETTINGS:Einstellungen SCREENSAVERS:Bildschirmschoner HOME:Startseite &lt;LF&gt;\"\n</code></pre>"},{"location":"reference/cli/general/#debug","title":"debug","text":"<p><code>debug &lt;debug category&gt; &lt;OFF|FATAL|ERROR|WARN|INFO|DEBUG|?|&gt;</code></p> <p>The <code>debug</code> command allows the caller to query or set the server's internal debugging categories. </p> <ul> <li>Use 'OFF' to silence,</li> <li>'FATAL' for only seeing fatal errors,</li> <li>'ERROR' for non-fatal errors, etc.</li> <li>Finally, using ? will query the current level for the category. </li> </ul> <p>Valid categories can be found under Settings/Advanced/Logging.</p> <p>Examples:</p> <pre><code>Request: \"debug d_files ?&lt;LF&gt;\"\nResponse: \"debug d_files 0&lt;LF&gt;\"\n\nRequest: \"debug d_itunes 0&lt;LF&gt;\"\nResponse: \"debug d_itunes 0&lt;LF&gt;\"\n\nRequest: \"debug d_stream 1&lt;LF&gt;\"\nResponse: \"debug d_stream 1&lt;LF&gt;\"\n\nRequest: \"debug d_stream&lt;LF&gt;\"\nResponse: \"debug d_stream 0&lt;LF&gt;\"\n</code></pre>"},{"location":"reference/cli/general/#exit","title":"exit","text":"<p><code>exit</code></p> <p>The <code>exit</code> command closes the TCP connection with the server and terminates the Command Line Interface session.</p> <p>Example:</p> <pre><code>Request: \"exit&lt;LF&gt;\"\nResponse: \"exit&lt;LF&gt;\"\n(Connection terminated)\n</code></pre>"},{"location":"reference/cli/general/#stopserver","title":"stopserver","text":"<p><code>stopserver</code></p> <p>The <code>stopserver</code> command shuts down the server.</p> <p>Example: <pre><code>Request: \"stopserver&lt;LF&gt;\"\nResponse: \"stopserver&lt;LF&gt;\"\n(Connection terminated)\n</code></pre></p>"},{"location":"reference/cli/general/#restartserver","title":"restartserver","text":"<p><code>restartserver</code></p> <p>The <code>restartserver</code> command restarts the server. Please note that restarting the server using this command is not available on all platforms.</p> <p>Example: <pre><code>Request: \"restartserver&lt;LF&gt;\"\nResponse: \"restartserver&lt;LF&gt;\"\n(Connection terminates and server is being restarted)\n</code></pre></p>"},{"location":"reference/cli/introduction/","title":"Introduction","text":"<p>The Lyrion Music Server provides a command-line interface to the players via TCP/IP. After starting the server, commands and queries may be sent by connecting to a specific TCP/IP port. The server will reply echoing the request (for commands) or by returning the requested data (for queries). By default, the server will listen for connections on TCP/IP port 9090. This format is designed for ease of integration into AMX, Crestron and other automation systems.</p> <p>See Using the command-line interface for details.</p>"},{"location":"reference/cli/introduction/#supported-commands","title":"Supported Commands","text":"<p>The available commands and queries are listed below, grouped by their scope:</p> <ul> <li>General: general management of the Command Line Interface and of the server.</li> <li>Players: management of players.</li> <li>Database: mangement of the music database.</li> <li>Playlist: management of the playlist of each player.</li> <li>Compound Queries: queries to get most of the information about the server or a player in one convenient query, that can be updated by the server automatically.</li> <li>Notifications: internal server commands echoed to the CLI by using the \"listen\" or \"subscribe\" commands.</li> <li>Alarms: management of alarms.</li> </ul>"},{"location":"reference/cli/introduction/#changelog","title":"Changelog","text":""},{"location":"reference/cli/introduction/#migration-of-the-cli-documentation-april-2024","title":"Migration of the CLI documentation (April 2024)","text":"<ul> <li>The CLI documentation was previously included as part of the embedded help in the LMS server distribution, accessible as a single (big) HTML page on a url like <code>LMS-SERVER:LMS-PORT/html/docs/cli-api.html</code>.</li> <li>The documentation here is based on <code>cli-api.html</code> from LMS Server v8.5. It is essentially unchanged, beyond dividing it into separate pages, formatting, plus a few corrections.</li> <li>Original sections \"Deprecated\", and \"Plugins\" have not been migrated.</li> <li>Future LMS server distributions (from v9 onwards) will no longer have the CLI documentation in the embedded help.</li> </ul>"},{"location":"reference/cli/introduction/#changes-starting-from-lyrion-music-server-91","title":"Changes starting from Lyrion Music Server 9.1","text":"<ul> <li>Added new <code>albums</code> sort orders <code>recentlyplayed</code>, <code>playcount</code></li> <li>Added <code>2</code> tag to <code>albums</code> query to return the number of an album's groupings.</li> <li>Added <code>4</code> tag to <code>albums</code>, <code>artists</code>, <code>songs</code> und <code>status</code> query to get the artist portrait ID. This ID can be used in a <code>/contributor/&lt;portraitId&gt;/image</code> url to get the artist's portrait.</li> </ul>"},{"location":"reference/cli/introduction/#changes-starting-from-lyrion-music-server-90","title":"Changes starting from Lyrion Music Server 9.0","text":"<ul> <li>Added <code>tags</code> query to return a file's raw tag information.</li> <li>Restore partial Cometd/JSON support for CLI clients</li> </ul>"},{"location":"reference/cli/introduction/#changes-starting-from-logitech-media-server-85","title":"Changes starting from Logitech Media Server 8.5","text":"<ul> <li>Removed all calls and code related to MySqueezebox.com related systems.</li> <li>Added \"alarmData\" parameter to the \"status\" query to report information about the upcoming alarm.</li> </ul>"},{"location":"reference/cli/introduction/#changes-starting-from-logitech-media-server-84","title":"Changes starting from Logitech Media Server 8.4","text":"<ul> <li>Added support for release types and roles to albums, and titles queries.</li> <li>Added support for a list of album IDs while fetching albums.</li> </ul>"},{"location":"reference/cli/introduction/#changes-starting-from-logitech-media-server-82","title":"Changes starting from Logitech Media Server 8.2","text":"<ul> <li>Added query to figure out whether fulltext search is enabled or not (fulltextsearch).</li> </ul>"},{"location":"reference/cli/introduction/#changes-starting-from-logitech-media-server-80","title":"Changes starting from Logitech Media Server 8.0","text":"<ul> <li>Added support for external IDs: when libraries from online music services are imported, artists, albums, and titles store the external, service specific ID in the 'extid' field. Artists can have multiple, comma separated values, as one artist can be found on multiple services.</li> </ul>"},{"location":"reference/cli/introduction/#changes-starting-from-logitech-media-server-79","title":"Changes starting from Logitech Media Server 7.9","text":"<ul> <li>Added support for virtual library views. artists, albums, genres, titles etc. queries now accept a library_id parameter to filter the results by virtual libraries. libraries returns a list of libraries with their name and IDs.</li> <li>Added support for new \"random\" sort order for the albums query.</li> <li>Added support for these queries to filter by the contributor's role (role_id).</li> </ul>"},{"location":"reference/cli/introduction/#changes-starting-from-logitech-media-server-77","title":"Changes starting from Logitech Media Server 7.7","text":"<ul> <li>Extended \"rescan\" with optional singledir parameter.</li> <li>Added \"info total duration ?\" query to return the total number of seconds for the library.</li> <li>Added DD parameter to the \"status\" query to report total playtime of the current queue.</li> </ul>"},{"location":"reference/cli/introduction/#changes-starting-from-squeezebox-server-76","title":"Changes starting from Squeezebox Server 7.6","text":"<ul> <li>Added tag 'M' for <code>songinfo</code> to return track musicmagic_mixable value.</li> <li>Added tag 'c' for <code>songinfo</code> to return the track's coverid value, used for artwork URLs. If you were using the track's ID directly in artwork URLs, you should switch to using the coverid value.</li> <li>Added \"pragma\" command for changing SQLite behavior.</li> <li>Added artist_id tagged parameter to artists.</li> <li>Added album_id tagged parameter to albums.</li> <li>Added sort order 'albumtrack' for titles to return the tracks in the order album-title, track-number.</li> <li>Added tag 'X' for albums to return the album's replay-gain value.</li> <li>Added tag 'S' for albums to return the album's artist_id.</li> <li>Added 'play_index' tagged parameter to playlistcontrol.</li> <li>In extended queries, return all possible items if the  parameter is omitted. <li>Add the 'u' tag to the \"musicfolder\" query</li> <li>Added track_id tagged parameter to titles.</li> <li>Added genre_id tagged parameter to genres.</li> <li>Added year and hasAlbums tagged parameters to years.</li> <li>Added return_top tagged parameter to musicfolder.</li> <li>Removed the charset tagged parameter from all commands that supported it.</li> <li>Added the 'Z' tag to albums, artists and genres queries. It generates a indexList array or arrays in the result.</li>"},{"location":"reference/cli/introduction/#changes-starting-from-squeezebox-server-751","title":"Changes starting from Squeezebox Server 7.5.1","text":"<ul> <li>Added \"playlist preview\" command.</li> <li>Extended \"playlist resume\" with optional noplay and wipePlaylist tagged params.</li> <li>Extended \"playlist save\" with optional silent tagged param, which will suppress any showBriefly popup on squeezeplay players.</li> </ul>"},{"location":"reference/cli/introduction/#changes-starting-from-squeezebox-server-74","title":"Changes starting from Squeezebox Server 7.4","text":"<ul> <li>The music_services command is now apps.</li> <li>Added \"pause\" &amp; \"stop\" subtypes to \"playlist\" notifications.</li> <li>Added \"setsncredentials\" command.</li> <li>Added \"logging\" command.</li> </ul>"},{"location":"reference/cli/introduction/#changes-starting-from-squeezebox-server-73","title":"Changes starting from Squeezebox Server 7.3","text":"<ul> <li>Added 'icon' tag to radios and music_services response.</li> <li>Added \"syncgroups\" query to get a list of sync groups and their members.</li> <li>Added \"favorites exists\" query to check whether an item exists in favorites.</li> </ul>"},{"location":"reference/cli/introduction/#changes-starting-from-squeezebox-server-72","title":"Changes starting from Squeezebox Server 7.2","text":"<p>The following syntax changes apply to the CLI in Squeezebox Server 7.2. These changes may impact CLI clients.</p> <ul> <li>The \"alarm\" and \"alarms\" command and query have been modified to match the improved alarm functionality. Most important change is the switch back to Sun=0 to Sat=6 days, instead of 0-7, where 0 meant \"everyday\" and Sun=7.</li> <li> <p>The following changes or new commands &amp; queries are available starting with Squeezebox Server 7.2. These changes should not have any impact on existing clients:</p> </li> <li> <p>New notification mechanism for alarms: \"alarm  \". <li>New query to get localized strings: \"getstring \"."},{"location":"reference/cli/introduction/#changes-starting-from-squeezebox-server-70","title":"Changes starting from Squeezebox Server 7.0","text":"<p>The following syntax changes apply to the CLI in Squeezebox Server 7.0. These changes may impact CLI clients.</p> <ul> <li>Completely modified the Favorites plugin support. It is now based on XMLBrowser, like most of the internet radios, and documented in the Plugins section of this document.</li> <li>Completely modified live365 support. It is now based on XMLBrowser, like all internet radios.</li> <li>Deprecated the tag \"year_id\" in favour of \"year\" in the \"playlistcontrol\" command.</li> <li>Changed how the \"status\" query behaves if the player one is subscribed to disappears.</li> <li>Updated the \"status\" query to return the time stamp of the last change to the current player playlist.</li> <li>Updated the \"playlist newsong\" notification to return the song title and playlist index.</li> <li>Updated the \"pref\" and \"playerpref\" commands to support the namespaces for preferences.</li> <li>Changed tags in queries \"status\", \"titles\", \"playlists tracks\" and \"songinfo\" for artist(s)/contributor(s) (band, composer, conductor, trackartist, etc) and genre(s). Multiple items may now be returned.</li> <li>New notification mechanism for preference changes: \"prefset\".</li> <li> <p>The following changes or new commands &amp; queries are available starting with Squeezebox Server 7.0. These changes should not have any impact on existing clients:</p> </li> <li> <p>Added the \"years\" query, to enable Browse by Year functionality.</p> </li> <li>Added the \"musicfolder\" query, to enable Browse Music Folder functionality.</li> <li>Added the \"readdirectory\" query, to browse file systems from the server's point of view (local &amp; network shares)</li> <li>Added the \"rescanprogress\" query, to report details on scanning progress.</li> <li>Added the \"abortscan\" command, to stop a running scan.</li> <li>Added the \"serverstatus\" query, to return compound server status in a single query.</li> <li>Added the \"playlists new\" command to create a stored playlist.</li> <li>Added the \"prefs\" tag to the \"players\" query, to enable returning the given preference values along with each player.</li> <li>Added the \"canpoweroff\", \"isplayer\" and \"uuid\" tags to the \"players\", \"player\" and \"serverstatus\" queries. to enable returning the given preference values along with each player.</li> <li>Added the \"pref validate\" and \"playerpref validate\" queries to validate preferences without setting them.</li> <li>Added a tag to return the artist from the \"albums\" query.</li> <li>Added a tag to return if the item is audio from the \"XML based\" queries.</li> <li>Added a tag to allow sorting the results of the \"radios\" query.</li> <li>Added the \"name\" query/command to get/change the player name.</li> <li>Added the \"irenable\" query/command to enable/disable IR processing for a player.</li> <li>Added the \"displaystatus\" query which allows subscription to display update messages.</li> <li>Updated queries \"status\", \"titles\", \"playlists tracks\" and \"<code>songinfo</code>\" to support a new tag J to return the artwork_track_id (as returned by the \"albums\"). This enables clients to cache one image for all songs of the same album.</li> <li>Updated queries \"status\", \"titles\", \"playlists tracks\" and \"<code>songinfo</code>\" to support new tags for previously missing information like sample rate/size, rating, etc.</li> <li>Order of tracks passed to \"playlistcontrol\" command is maintained.</li> <li>Command \"playlistcontrol\" now accepts also a folder_id as returned by the new \"musicfolder\" query.</li> <li>Slightly reorganised this document to introduce a \"Compound queries\" section to document queries \"serverstatus\" and \"status\".</li> </ul>"},{"location":"reference/cli/notifications/","title":"CLI - Notifications","text":""},{"location":"reference/cli/notifications/#notifications","title":"Notifications","text":"<p>All commands listed in this document are notifications as well as being commands and can be received when using <code>listen 1</code> (if they do not originate from the command-line connection that issued them; no command is echoed twice).</p> <p>Note that queries (for example, <code>display ? ?</code>) are not notified.</p> <p>Other available notifications are listed below with their meaning.</p> <p>Please note that other notifications or commands may exist, but internal to the server and therefore not documented in this CLI document. Likewise, commands originating from the server may have more parameters than those described in this document, or parameters consisting of internal Perl data structures with strange text representations.</p>"},{"location":"reference/cli/notifications/#client","title":"client","text":"<p><code>&lt;playerid&gt; client &lt;new|disconnect|reconnect&gt;</code></p> <p>A new client is notified using <code>client new</code>. <code>client disconnect</code> is sent when a client disconnects. Unless it reconnects (as signaled by <code>client reconnect</code>) before a number of minutes, the client will be automatically forgotten by the server (as indicated by command/notification <code>client forget</code>.)</p>"},{"location":"reference/cli/notifications/#rescan-done","title":"rescan done","text":"<p><code>rescan done</code></p> <p>This signals the end of a <code>rescan</code> or <code>wipecache</code>.</p>"},{"location":"reference/cli/notifications/#library-changed","title":"library changed","text":"<p><code>library changed &lt;0|1&gt;</code></p> <p>This signals the presence or absence of a library has changed.</p>"},{"location":"reference/cli/notifications/#unknownir","title":"unknownir","text":"<p><code>&lt;playerid&gt; unknownir &lt;ircode&gt; &lt;time&gt;</code></p> <p>This signals an IR code unknown by the server. The syntax is the same than the one used by <code>ir</code>- see Info on <code>ir</code> command in Players.</p> <p>Note: This is only available on SB Classic, SB Boom and Transporter. SB Touch and SB Radio handle IR codes locally and do not report them to the server anymore.</p>"},{"location":"reference/cli/notifications/#playlist","title":"playlist","text":"<p>Various Notifications related to Playlists</p>"},{"location":"reference/cli/notifications/#playlist-newsong","title":"playlist newsong","text":"<p><code>&lt;playerid&gt; playlist newsong [&lt;current_title&gt;] [&lt;playlist index&gt;]</code></p> <p>This signals the start of a new song, along with its <code>current_title</code> and <code>playlist index</code>. For radio stations, only the <code>current_title</code> information is provided.</p>"},{"location":"reference/cli/notifications/#playlist-stop","title":"playlist stop","text":"<p><code>&lt;playerid&gt; playlist stop</code></p>"},{"location":"reference/cli/notifications/#playlist-pause","title":"playlist pause","text":"<p><code>&lt;playerid&gt; playlist pause &lt;0|1&gt;</code></p> <p>These signal a change in playing status.</p>"},{"location":"reference/cli/notifications/#prefset","title":"prefset","text":"<p><code>&lt;playerid&gt; prefset [&lt;namespace&gt;] [&lt;prefname&gt;] [&lt;value&gt;]</code></p> <p>This signals a preference change.</p>"},{"location":"reference/cli/notifications/#favorites-changed","title":"favorites changed","text":"<p><code>favorites changed</code></p> <p>Sent everytime the favorite database is changed, for any reason, by any process (so the favorites command below will result in this notification being sent).</p>"},{"location":"reference/cli/notifications/#alarm","title":"alarm","text":"<p><code>&lt;playerid&gt; alarm &lt;sound|end|snooze|snooze_end&gt; &lt;id&gt;</code></p> <ul> <li><code>alarm sound</code> is sent when an alarm sounds;</li> <li><code>alarm end</code> when an alarm ends;</li> <li><code>alarm snooze</code> when an alarm is snoozed;</li> <li><code>alarm snooze_end</code> when a snooze ends (and the alarm resumes).</li> <li><code>id</code> gives the id of the alarm.</li> </ul>"},{"location":"reference/cli/notifications/#getexternalvolumeinfo","title":"getexternalvolumeinfo","text":"<p><code>&lt;playerid&gt; getexternalvolumeinfo &lt;taggedParameters&gt;</code></p> <p>This notification notifies a client that a plugin supports volume change capability for a player. This capability will override (from a user's point of view) the <code>digitalVolumeControl</code> flag that indicates whether a player's output is fixed to a certain volume (typically 100%). This will be used by plugins providing external volume control, e.g. for an amplifier (IRBlaster being an example). In this scenario, the volume output of the player is typically fixed but there is still a volume control capability and the plugin controls the amp's volume instead. The purpose of this notification is to let a client know that there is a volume control capability associated with a player.</p> <p>Sending a <code>getexternalvolumeinfo</code> command triggers all plugins supporting the feature to return a notification about their capabilities for each player for which they provide these capabilities. The command may be sent to a specific player but typically a plugin will ignore this and respond to any getexternalvolumeinfo command for each player.</p> <p>Please note that this notification is only supported by some 3rd party plugins. It's not part of the core server functionality.</p> <p>Returned tagged parameters:</p> Tag Description <code>relative</code> A boolean value stating that a plugin is able to provide relative volume change capability for this player as in <code>mixer volume +5</code> <code>precise</code> A boolean value stating that a plugin is able to provide precise volume change capability for this player as in <code>mixer volume 75</code> <code>plugin</code> is an optional string naming the plugin providing the capability <p>Example:</p> <pre><code>Request: \"getexternalvolumeinfo&lt;LF&gt;\"\nResponse 1: \"a5:41:d2:cd:cd:05 getexternalvolumeinfo relative:1 plugin:IRBlaster\"\nResponse 2: \"a5:41:d2:cd:cd:05 getexternalvolumeinfo precise:1 plugin:DenonSerial\"\n</code></pre>"},{"location":"reference/cli/players/","title":"CLI - Players commands","text":""},{"location":"reference/cli/players/#player-commands-and-queries","title":"Player commands and queries","text":""},{"location":"reference/cli/players/#player","title":"<code>player</code>","text":"<p>Various subcommands which return information about players. Different commands are used to set player attributes.</p>"},{"location":"reference/cli/players/#player-count","title":"<code>player count</code>","text":"<p><code>player count ?</code></p> <p>The <code>player count ?</code> query returns the number of players connected to the server.</p> <p>Example: <pre><code>Request: \"player count ?&lt;LF&gt;\"\nResponse: \"player count 2&lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/players/#player-id","title":"<code>player id</code>","text":"<p><code>player id &lt;playerindex&gt; ?</code></p> <p>The <code>player id ?</code> query returns the unique identifier of a player, ( parameter of many CLI commands). For physical players this is generally the MAC address. The IP address is used for remote streams. <p>Example: <pre><code>Request: \"player id 0 ?&lt;LF&gt;\" (or) \"0 player id ?\"\nResponse: \"player id 0 04:20:00:12:23:45&lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/players/#player-uuid","title":"<code>player uuid</code>","text":"<p><code>&lt;playerindex&gt; player uuid ?</code></p> <p>The <code>player uuid ?</code> query returns the player uuid.</p> <p>Example: <pre><code>Request: \"player uuid 0 ?&lt;LF&gt;\" (or) \"0 player uuid ?\"\nResponse: \"player uuid 0 012345678901234567890123456789012&lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/players/#player-name","title":"<code>player name</code>","text":"<p><code>player name &lt;playerindex|playerid&gt; ?</code></p> <p>The <code>player name ?</code> query returns the human-readable name for the specified player. If the name has not been specified by the user in the Player Settings, then a default name will be used, usually the IP address.</p> <p>Example: <pre><code>Request: \"player name 0 ?&lt;LF&gt;\" or \"0 player name ?\"\nResponse: \"player name 0 Living Room&lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/players/#player-ip","title":"<code>player ip</code>","text":"<p><code>player ip &lt;playerindex|playerid&gt; ?</code></p> <p>The <code>player ip ?</code> query returns the IP address (along with port number) of the specified player.</p> <p>Example: <pre><code>Request: \"player ip 0 ?&lt;LF&gt;\" or \"0 player ip ?\"\nResponse: \"player ip 0 192.168.1.22:3483&lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/players/#player-model","title":"<code>player model</code>","text":"<p><code>player model &lt;playerindex|playerid&gt; ?</code></p> <p>The <code>player model ?</code> query returns the model of the player, currently one of <code>transporter</code>, <code>squeezebox2</code>, <code>squeezebox</code>, <code>slimp3</code>, <code>softsqueeze</code>, or <code>http</code> (for remote streaming connections).</p> <p>Example: <pre><code>Request: \"player model 0 ?&lt;LF&gt;\" or \"0 player model ?\"\nResponse: \"player model squeezebox&lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/players/#player-isplayer","title":"<code>player isplayer</code>","text":"<p><code>player isplayer &lt;playerindex|playerid&gt; ?</code></p> <p>Whether a player is a known player model. Currently know models are <code>transporter</code>, <code>squeezebox2</code>, <code>squeezebox</code>, <code>slimp3</code>, <code>softsqueeze</code>, or <code>http</code> (for remote streaming connections). Will return <code>0</code> for streaming connections.</p> <p>Example: <pre><code>Request: \"player isplayer 0 ?&lt;LF&gt;\" or \"0 player isplayer ?\"\nResponse: \"player isplayer 1&lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/players/#player-displaytype","title":"<code>player displaytype</code>","text":"<p><code>player displaytype &lt;playerindex|playerid&gt; ?</code></p> <p>The <code>player displaytype ?</code> query returns the display model of the player. Graphical display types start with <code>graphic-</code>, non-graphical display type with <code>noritake-</code>.</p> <p>Example: <pre><code>Request: \"player displaytype 0 ?&lt;LF&gt;\" or \"0 player displaytype ?\"\nResponse: \"player displaytype 0 noritake-katakana&lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/players/#player-canpowerpoff","title":"<code>player canpowerpoff</code>","text":"<p><code>player canpoweroff &lt;playerindex|playerid&gt; ?</code></p> <p>Returns whether a player can be powered off or not. Current hardware players and SoftSqueeze would return <code>1</code>, web clients <code>0</code>.</p> <p>Examples: <pre><code>Request: \"player canpoweroff 04:20:00:12:23:45 ?&lt;LF&gt;\"\nResponse: \"player canpoweroff 04:20:00:12:23:45 1&lt;LF&gt;\"\n\nRequest: \"player canpoweroff 192.168.0.39 ?&lt;LF&gt;\"\nResponse: \"player canpoweroff 192.168.0.39 0&lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/players/#signalstrength","title":"<code>signalstrength</code>","text":"<p><code>&lt;playerid&gt; signalstrength ?</code></p> <p>Returns the wireless signal strength for the player, range is <code>1</code> to <code>100</code>. Returns <code>0</code> if not connected wirelessly.</p> <p>Example: <pre><code>Request: \"04:20:00:12:23:45 signalstrength ?&lt;LF&gt;\"\nResponse: \"04:20:00:12:23:45 signalstrength 76&lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/players/#name","title":"<code>name</code>","text":"<p><code>&lt;playerid&gt; name &lt;newname|?&gt;</code></p> <p>Sets the name of the player. You may query the player name by passing in <code>?</code> (equivalent to <code>player name ?</code>.)</p> <p>Example: <pre><code>Request: \"04:20:00:12:23:45 name ?&lt;LF&gt;\"\nResponse: \"04:20:00:12:23:45 name Lightyears&lt;LF&gt;\"\n\nRequest: \"04:20:00:12:23:45 name Buzz&lt;LF&gt;\"\nResponse: \"04:20:00:12:23:45 name Buzz&lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/players/#connected","title":"<code>connected</code>","text":"<p><code>&lt;playerid&gt; connected ?</code></p> <p>Returns the connected state of the player, <code>1</code> or <code>0</code> depending on the state of the TCP connection to the player. SLIMP3 players, since they use UDP, always return <code>1</code>.</p> <p>Examples: <pre><code>Request: \"04:20:00:12:23:45 connected ?&lt;LF&gt;\"\nResponse: \"04:20:00:12:23:45 connected 1&lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/players/#sleep","title":"<code>sleep</code>","text":"<p><code>&lt;playerid&gt; sleep &lt;number|?&gt;</code></p> <p>The <code>sleep</code> command specifies a number of seconds to continue playing before powering off the player. You may query the amount of time until the player sleeps by passing in <code>?</code>.</p> <p>Examples: <pre><code>Request: \"04:20:00:12:23:45 sleep ?&lt;LF&gt;\"\nResponse: \"04:20:00:12:23:45 sleep 105.3&lt;LF&gt;\"\n\nRequest: \"04:20:00:12:23:45 sleep 300&lt;LF&gt;\"\nResponse: \"04:20:00:12:23:45 sleep 300&lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/players/#sync","title":"<code>sync</code>","text":"<p><code>&lt;playerid&gt; sync &lt;playerindex|playerid|-|?&gt;</code></p> <p>The <code>sync</code> command specifies the player to synchronise with the given playerid. The command accepts only one playerindex or playerid. To unsync the player, use the <code>-</code> parameter.</p> <p>Note that in both cases the first <code>&lt;playerid&gt;</code> is the player which is already a member of a sync group. When adding a player to a sync group, the second specified player will be added to the group which includes the first player, if necessary first removing the second player from its existing sync-group.</p> <p>You may query which players are already synced with this player by passing in a <code>?</code> parameter. Multiple playerids are separated by a comma. If the player is not synced, <code>-</code> is returned.</p> <p>Examples: <pre><code>Request: \"04:20:00:12:23:45 sync 1&lt;LF&gt;\"\nResponse: \"04:20:00:12:23:45 sync 1&lt;LF&gt;\"\n\nRequest: \"04:20:00:12:23:45 sync ?&lt;LF&gt;\"\nResponse: \"04:20:00:12:23:45 sync 04:20:00:12:23:21&lt;LF&gt;\"\n\nRequest: \"04:20:00:12:23:45 sync -&lt;LF&gt;\"\nResponse: \"04:20:00:12:23:45 sync -&lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/players/#syncgroups","title":"<code>syncgroups</code>","text":"<p><code>syncgroups ?</code></p> <p>The <code>syncgroups</code> query returns a comma separated list of sync groups members (IDs and names).</p> <p>Examples: <pre><code>Request: \"syncgroups ?&lt;LF&gt;\"\nResponse: \"syncgroups sync_members:04:20:00:12:23:45,04:20:00:12:34:56 sync_member_names:Living%20Room,Kitchen&lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/players/#power","title":"<code>power</code>","text":"<p><code>&lt;playerid&gt; power &lt;0|1|?|&gt;</code></p> <p>The <code>power</code> command turns the player on or off. Use <code>0</code> to turn off, <code>1</code> to turn on, <code>?</code> to query and no parameter to toggle the power state of the player. For remote streaming connections, the command does nothing and the query always returns <code>1</code>.</p> <p>Examples: <pre><code>Request: \"04:20:00:12:23:45 power 1&lt;LF&gt;\"\nResponse: \"04:20:00:12:23:45 power 1&lt;LF&gt;\"\n\nRequest: \"04:20:00:12:23:45 power ?&lt;LF&gt;\"\nResponse: \"04:20:00:12:23:45 power 1&lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/players/#mixer","title":"<code>mixer</code>","text":"<p>Various subcommands which return or set mixer settings.</p>"},{"location":"reference/cli/players/#mixer-volume","title":"<code>mixer volume</code>","text":"<p><code>&lt;playerid&gt; mixer volume &lt;0 .. 100|-100 .. +100|?&gt;</code></p> <p>The <code>mixer volume</code> command returns or sets the current volume setting for the player. The scale is <code>0</code> to <code>100</code>, in real numbers (i.e. <code>34.5</code> is valid). If the player is muted, the volume is returned as a negative value. Note that players display a <code>0</code> to <code>40</code> scale, that is, the <code>0..100</code> volume divided by <code>2,5</code> (two and a half). Likewise, using the <code>button</code> command with <code>volume_up</code> or <code>volume_down</code> parameters increases or decreases the volume by 2,5 (two and a half).</p> <p>Examples: <pre><code>Request: \"04:20:00:12:23:45 mixer volume ?&lt;LF&gt;\"\nResponse: \"04:20:00:12:23:45 mixer volume 98&lt;LF&gt;\"\n\nRequest: \"04:20:00:12:23:45 mixer volume 25&lt;LF&gt;\"\nResponse: \"04:20:00:12:23:45 mixer volume 25&lt;LF&gt;\"\n\nRequest: \"04:20:00:12:23:45 mixer volume +10&lt;LF&gt;\"\nResponse: \"04:20:00:12:23:45 mixer volume +10&lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/players/#mixer-muting","title":"<code>mixer muting</code>","text":"<p><code>&lt;playerid&gt; mixer muting &lt;0|1|toggle|?|&gt;</code></p> <p>The <code>mixer muting</code> command mutes or unmutes the player. Use <code>0</code> to unmute, <code>1</code> to mute, <code>?</code> to query and no parameter (or 'toggle') to toggle the muting state of the player. Note also the <code>mixer volume</code> command returns a negative value if the player is muted.</p> <p>Example: <pre><code>Request: \"04:20:00:12:23:45 mixer muting&lt;LF&gt;\"\nResponse: \"04:20:00:12:23:45 mixer muting&lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/players/#mixer-bass","title":"<code>mixer bass</code>","text":"<p><code>&lt;playerid&gt; mixer bass &lt;0 .. 100|-100 .. +100|?&gt;</code></p> <p>The <code>mixer bass</code> command returns or sets the current bass setting for the player. This is only supported by SliMP3 and SqueezeBox (SB1) players. For more information on the <code>0 to 100</code> scale, please refer to the <code>mixer volume</code> command.</p> <p>Example: <pre><code>Request: \"04:20:00:12:23:45 mixer bass ?&lt;LF&gt;\"\nResponse: \"04:20:00:12:23:45 mixer bass 98&lt;LF&gt;\"\n\nRequest: \"04:20:00:12:23:45 mixer bass 25&lt;LF&gt;\"\nResponse: \"04:20:00:12:23:45 mixer bass 25&lt;LF&gt;\"\n\nRequest: \"04:20:00:12:23:45 mixer bass +10&lt;LF&gt;\"\nResponse: \"04:20:00:12:23:45 mixer bass +10&lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/players/#mixer-treble","title":"<code>mixer treble</code>","text":"<p><code>&lt;playerid&gt; mixer treble &lt;0 .. 100|-100 .. +100|?&gt;</code></p> <p>The <code>mixer treble</code> command returns or sets the current treble setting for the player. This is only supported by SliMP3 and SqueezeBox (SB1) players. For more information on the <code>0 to 100</code> scale, please refer to the <code>mixer volume</code> command.</p> <p>Example: <pre><code>Request: \"04:20:00:12:23:45 mixer treble ?&lt;LF&gt;\"\nResponse: \"04:20:00:12:23:45 mixer treble 98&lt;LF&gt;\"\n\nRequest: \"04:20:00:12:23:45 mixer treble 25&lt;LF&gt;\"\nResponse: \"04:20:00:12:23:45 mixer treble 25&lt;LF&gt;\"\n\nRequest: \"04:20:00:12:23:45 mixer treble +10&lt;LF&gt;\"\nResponse: \"04:20:00:12:23:45 mixer treble +10&lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/players/#mixer-pitch","title":"<code>mixer pitch</code>","text":"<p><code>&lt;playerid&gt; mixer pitch &lt;80 .. 120|-40 .. +40|?&gt;</code></p> <p>The <code>mixer pitch</code> command returns or sets the current pitch setting for the player (only supported by SqueezeBox (SB1) players).</p> <p>Example: <pre><code>Request: \"04:20:00:12:23:45 mixer pitch ?&lt;LF&gt;\"\nResponse: \"04:20:00:12:23:45 mixer pitch 98&lt;LF&gt;\"\n\nRequest: \"04:20:00:12:23:45 mixer pitch 80&lt;LF&gt;\"\nResponse: \"04:20:00:12:23:45 mixer pitch 80&lt;LF&gt;\"\n\nRequest: \"04:20:00:12:23:45 mixer pitch +10&lt;LF&gt;\"\nResponse: \"04:20:00:12:23:45 mixer pitch +10&lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/players/#show","title":"<code>show</code>","text":"<p><code>&lt;playerid&gt; show &lt;taggedParameters&gt;</code></p> <p>The <code>show</code> command displays a message on the player display for a given duration. Various options are provided to customize the appearance of the message (font size, centering). If the mesage is too long to fit on the display, it scrolls.</p> <p>This command is designed to display the message, and by default temporarily cancels any screensaver and increases the brightness to the maximum value.</p> <p>This command is only echoed once the message display is done.</p> <p>Please note the CLI expects parameters to be encoded using percent-style escaping (see above): space is represented by <code>%20</code>. See the examples.</p> <p>Accepted tagged parameters:</p> Tag Description <code>line1</code> First line of the display. <code>line2</code> Second line of the display. This is the line used for single line display mode (font = huge). <code>duration</code> Time in seconds to display the message; this time does not take into account any scrolling time necessary, which will be performed to its completion. The default is <code>3</code> seconds. <code>brightness</code> Brightness to use to display the message, either 'powerOn', 'powerOff', 'idle' or a value from <code>0</code> to <code>4</code>. The default value is <code>4</code>. The display brightness is reset to its configured value after the message. <code>font</code> Use value <code>huge</code> to have <code>line2</code> displayed in a large font using the entire display. The actual font used depends on the player model. Otherwise the command uses the standard, <code>2</code> lines display font. <code>centered</code> Use value <code>1</code> to center the lines on the display. There is no scrolling in centered mode. <code>screen</code> Screen to display text on. Use to display on transporter second screen, i.e. screen:2 <p>Examples: <pre><code>Request: \"04:20:00:12:23:45 show line1:Hello%20World line2:Second%20line duration:1 centered:1&lt;LF&gt;\"\nResponse: \"04:20:00:12:23:45 show line1:Hello%20World line2:Second%20line duration:1 centered:1&lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/players/#display","title":"<code>display</code>","text":"<p><code>&lt;playerid&gt; display &lt;line1&gt; &lt;line2&gt; &lt;duration&gt;</code></p> <p>The <code>display</code> command specifies some text to be displayed on the player screen for a specified amount of time (in seconds). Please note the CLI expects parameters to be encoded using percent-style escaping (see above): space is represented by <code>%20</code>. See the examples.</p> <p>Examples: <pre><code>Request: \"04:20:00:12:23:45 display Hello World 5&lt;LF&gt;\"\nResponse: \"04:20:00:12:23:45 display Hello World 5&lt;LF&gt;\"\n\nRequest: \"04:20:00:12:23:45 display Hello%20World Second%20Line 5&lt;LF&gt;\"\nResponse: \"04:20:00:12:23:45 display Hello%20World Second%20Line 5&lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/players/#linesperscreen","title":"<code>linesperscreen</code>","text":"<p><code>&lt;playerid&gt; linesperscreen ?</code></p> <p>The <code>linesperscreen</code> command returns how many lines of text can fit in the display, depending on its current setting or font.</p> <p>Examples: <pre><code>Request: \"04:20:00:12:23:45 linesperscreen ?&lt;LF&gt;\"\nResponse: \"04:20:00:12:23:45 linesperscreen 1&lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/players/#display_1","title":"<code>display</code>","text":"<p><code>&lt;playerid&gt; display ? ?</code></p> <p>The <code>display ? ?</code> command may be used to obtain the text that is currently displayed on the screen.</p> <p>Examples: <pre><code>Request: \"04:20:00:12:23:45 display ? ?&lt;LF&gt;\"\nResponse: \"04:20:00:12:23:45 display Hello World&lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/players/#displaynow","title":"<code>displaynow</code>","text":"<p><code>&lt;playerid&gt; displaynow ? ?</code></p> <p>The <code>displaynow</code> command provides access to the data currently on the display. This differs from the <code>display ? ?</code> command in that it returns the latest data sent to the display, including any animation, double-size fonts, etc...</p> <p>Examples: <pre><code>Request: \"04:20:00:12:23:45 displaynow ? ?&lt;LF&gt;\"\nResponse: \"04:20:00:12:23:45 display Hello World&lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/players/#playerpref","title":"<code>playerpref</code>","text":"<p><code>&lt;playerid&gt; playerpref &lt;prefname|namespace:prefname&gt; &lt;prefvalue|?&gt;</code></p> <p>The <code>playerpref</code> command allows the caller to set and query the server's internal player-specific preferences values.</p> <p>If you want to query/set a preference from a namespace other than <code>server</code> (eg. a plugin), you'll have to prepend the desired namespace to the prefname.</p> <p>Examples: <pre><code>Request: \"04:20:00:12:23:45 playerpref doublesize ?\"\nResponse: \"04:20:00:12:23:45 playerpref doublesize 1\"\n\nRequest: \"04:20:00:12:23:45 playerpref doublesize 0\"\nResponse: \"04:20:00:12:23:45 playerpref doublesize 0\"\n</code></pre></p> <p><code>&lt;playerid&gt; playerpref validate &lt;prefname|namespace:prefname&gt; &lt;prefvalue&gt;</code></p> <p>The <code>playerpref validate</code> command allows the caller to validate a server's internal player-specific preference value without setting it.</p> <p>If you want to validate a preference from a namespace other than <code>server</code> (eg. a plugin), you'll have to prepend the desired namespace to the prefname.</p> <p>Examples: <pre><code>Request: \"04:20:00:12:23:45 playerpref validate scrollPause 3\"\nResponse: \"04:20:00:12:23:45 playerpref validate scrollPause valid:1\"\n\nRequest: \"04:20:00:12:23:45 playerpref validate scrollRate fast\"\nResponse: \"04:20:00:12:23:45 playerpref validate scrollRate valid:0\"\n</code></pre></p>"},{"location":"reference/cli/players/#button","title":"<code>button</code>","text":"<p><code>&lt;playerid&gt; button &lt;buttoncode&gt;</code></p> <p>The <code>button</code> command simulates a button press. Valid button codes correspond to the functions defined in the Default.map file.</p> <p>Example: <pre><code>Request: \"04:20:00:12:23:45 button stop&lt;LF&gt;\"\nResponse: \"04:20:00:12:23:45 button stop&lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/players/#ir","title":"<code>ir</code>","text":"<p><code>&lt;playerid&gt; ir &lt;ircode&gt; &lt;time&gt;</code></p> <p>The <code>ir</code> command simulates an IR code. Valid IR codes are defined in the Default.map file.</p> <p>Example: <pre><code>Request: \"bd:a5:a9:9b:9d:df ir 768910ef 11073.575&lt;LF&gt;\"\nResponse: \"bd:a5:a9:9b:9d:df ir 768910ef 11073.575&lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/players/#irenable","title":"<code>irenable</code>","text":"<p><code>&lt;playerid&gt; irenable &lt;0|1|?|&gt;</code></p> <p>The <code>irenable</code> command enables or disables IR processing for the player on or off. Use <code>0</code> to disable, <code>1</code> to enable, <code>?</code> to query and no parameter to toggle IR processing of the player. For remote streaming connections, the command does nothing and the query always returns <code>1</code>.</p> <p>Examples: <pre><code>Request: \"04:20:00:12:23:45 irenable 1&lt;LF&gt;\"\nResponse: \"04:20:00:12:23:45 irenable 1&lt;LF&gt;\"\n\nRequest: \"04:20:00:12:23:45 irenable ?&lt;LF&gt;\"\nResponse: \"04:20:00:12:23:45 irenable 1&lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/players/#connect","title":"<code>connect</code>","text":"<p><code>&lt;playerid&gt; connect &lt;ip&gt;</code></p> <p>The <code>connect</code> command tells a Squeezebox 2 or newer player to connect to a different server address.</p> <p>Supported values are:</p> <p>ip - A dotted IP address to connect to.</p> <p>If the player is currently a member of a sync-group, then all players in the sync-group will be instructed to switch to the new server and re-establish the sync-group.</p> <p>Example: <pre><code>Request: \"bd:a5:a9:9b:9d:df connect 192.168.1.10&lt;LF&gt;\"\nResponse: \"bd:a5:a9:9b:9d:df connect 192.168.1.10&lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/players/#client-forget","title":"<code>client forget</code>","text":"<p><code>&lt;playerid&gt; client forget</code></p> <p>The <code>client forget</code> command deletes the client/player from the server database.</p> <p>Example: <pre><code>Request: \"bd:a5:a9:9b:9d:df client forget&lt;LF&gt;\"\nResponse: \"bd:a5:a9:9b:9d:df client forget&lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/players/#disconnect","title":"<code>disconnect</code>","text":"<p><code>disconnect &lt;playerid&gt; &lt;ip&gt;</code></p> <p>The <code>disconnect</code> command tells a Squeezebox 2 or newer player on another server instance to disconnect from its server and connect to us. This is the opposite of <code>connect</code>, where we tell a player connected to us to connect to a different server.</p> <p>Supported values are:</p> <p>ip - A dotted IP address to connect to.</p> <p>Example: <pre><code>Request: \"disconnect bd:a5:a9:9b:9d:df 192.168.1.10&lt;LF&gt;\"\nResponse: \"disconnect bd:a5:a9:9b:9d:df 192.168.1.10&lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/players/#players","title":"<code>players</code>","text":"<p><code>players &lt;start&gt; &lt;itemsPerResponse&gt;</code></p> <p>The <code>players</code> query returns information about all <code>players</code> (physical players as well as streaming clients) known by the server.</p> <ul> <li><code>players 0</code> will return info about all players.</li> <li><code>players 3 2</code> will return information about two players starting with playerindex 3</li> <li><code>players 2 1</code> will return info about the player with playerindex 2</li> </ul> <p>Accepted tagged parameters:</p> Tag Description playerprefs Comma separated list of preference values to return (for each player). <p>Returned tagged parameters:</p> <p>Results returned as two blocks.</p> <ul> <li>First a block containing just the count of players</li> <li>Secondly a standard set of data for each player<ul> <li>Info for each player can in addition include values as per the list of preferences included in the optional playerprefs parameter.</li> </ul> </li> </ul> Block Tag Description First block: \u2060 \u2060 count Number of players known by the server. Equivalent to <code>player count ?</code>. For each player: \u2060 \u2060 playerindex Player index. Values 0, 1, 2 etc playerid Player unique identifier. Equivalent to <code>player id &lt;playerindex&gt; ?</code>. uuid Player uuid. Equivalent to <code>player uuid &lt;playerindex&gt; ?</code>. ip Player IP and port. Equivalent to <code>player ip &lt;playerindex|playerid&gt; ?</code>. name Player name. Equivalent to <code>player name &lt;playerindex|playerid&gt; ?</code>. seq_no Not clear what this is. model Player model. Values like <code>squeezebox3</code>, <code>baby</code>, <code>squeezelite</code>. Equivalent to <code>player model &lt;playerindex|playerid&gt; ?</code>. modelname Model name, values like <code>Squeezebox Classic</code>, <code>Squeeezebox Radio</code>, <code>Squeezelite-X</code>. power Indicatess if player is powered on. Returns 1 for True, 0 for False. Equivalent to <code>&lt;playerid&gt; power ?</code>. isplaying Indicates if player currently playing. Returns 1 for True, 0 for False. displaytype Player display type. Not returned for streaming connections. Equivalent to <code>player displaytype &lt;playerindex|playerid&gt; ?</code>. isplayer Whether a player is a known player model. Will return 0 for streaming connections. Equivalent to <code>player isplayer &lt;playerindex|playerid&gt; ?</code>. canpoweroff Whether the player can be powered off. This value is false for streaming connections. Equivalent to <code>player canpoweroff &lt;playerindex|playerid&gt; ?</code> connected Connected state. Equivalent to <code>&lt;playerid&gt; connected ?</code>. firmware Firmware version For each defined pref requested: \u2060 \u2060 prefName Preference value. Only if the value is defined. Equivalent to <code>&lt;playerid&gt; playerpref &lt;prefname|namespace:prefname&gt; &lt;prefvalue|?&gt;</code>. <p>Examples: <pre><code>Request: \"players\"\nResponse: \"players  count:3\"\n\nRequest: \"players 0 2 playerprefs:doublesize,idleBrightness&lt;LF&gt;\"\nResponse: \"players 0 2 count:2\nplayerindex:0 playerid:a5:41:d2:cd:cd:05 ip:127.0.0.1:60488 name:127.0.0.1 model:softsqueeze displaytype:graphic-280x16 connected:1 doublesize:0 idleBrightness:2\nplayerindex:1 playerid:00:04:20:02:00:c8 ip:192.168.1.22:3483 name:Movy model:slimp3 displaytype:noritake-katakana connected:1 doublesize:1 idleBrightness:1\n&lt;LF&gt;\"\n\nRequest: \"players 0 4\"\nResponse: \"players 0 4 count:4\nplayerindex:0 playerid:a0:ce:c8:ce:a1:3b uuid: ip:192.168.5.20:50591 name:Squeezelite-X seq_no:0 model:squeezelite modelname:Squeezelite-X power:1 isplaying:1 displaytype:none isplayer:1 canpoweroff:1 connected:1 firmware:v1.9.9-1419\nplayerindex:1 playerid:00:04:20:28:c7:f1 uuid:ca1c8fbf2d48cbb1c859b5ea7ce4ecf9 ip:192.168.5.102:41372 name:Stalking Horse seq_no:41 model:baby modelname:Squeezebox Radio power:1 isplaying:1 displaytype:none isplayer:1 canpoweroff:1 connected:1 firmware:8.0.1-r16924\nplayerindex:2 playerid:00:04:20:2a:e0:74 uuid:7147ee259b66f5c9c39c0eb14cfefb5c ip:192.168.5.101:40890 name:Runcible Red seq_no:2 model:baby modelname:Squeezebox Radio power:1 isplaying:0 displaytype:none isplayer:1 canpoweroff:1 connected:1 firmware:8.0.1-r16924\nplayerindex:3 playerid:00:04:20:12:ae:f5 uuid: ip:192.168.5.103:28931 name:Dittography seq_no:0 model:squeezebox3 modelname:Squeezebox Classic power:1 isplaying:1 displaytype:graphic-320x32 isplayer:1 canpoweroff:1 connected:1 firmware:137&lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/playlist/","title":"CLI - Playlists commands and queries","text":""},{"location":"reference/cli/playlist/#playlist-commands-and-queries","title":"Playlist commands and queries","text":""},{"location":"reference/cli/playlist/#play","title":"play","text":"<p><code>&lt;playerid&gt; play &lt;fadeInSecs&gt;</code></p> <p>The <code>play</code> command allows to start playing the current playlist. The <code>fadeInSecs</code> parameter may be passed to specify a fade-in period.</p> <p>Example: <pre><code>Request: \"04:20:00:12:23:45 play&lt;LF&gt;\"\nResponse: \"04:20:00:12:23:45 play&lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/playlist/#stop","title":"stop","text":"<p><code>&lt;playerid&gt; stop</code></p> <p>The <code>stop</code> command allows to stop playing the current playlist.</p> <p>Example: <pre><code>Request: \"04:20:00:12:23:45 stop&lt;LF&gt;\"\nResponse: \"04:20:00:12:23:45 stop&lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/playlist/#pause","title":"pause","text":"<p><code>&lt;playerid&gt; pause &lt;0|1|&gt; &lt;fadeInSecs&gt; &lt;suppressShowBriefly&gt;</code></p> <p>You may use <code>pause 1</code> to force the player to pause, <code>pause 0</code> to force the player to unpause and <code>pause</code> to toggle the pause state. The <code>fadeInSecs</code> parameter may be passed to specify a fade-in period when unpausing.</p> <p>The <code>suppressShowBriefly</code> parameter may be passed to specify not to show a pause icon on squeezeplay-based devices (as is the case with hitting 'power off' on the SBController, which pauses play but should not display an icon, see bug 13521). The popup on squeezeplay-based devices which shows the pause icon is referred  to as the <code>showBriefly</code> popup.</p> <p>Example <pre><code>Request: \"04:20:00:12:23:45 pause&lt;LF&gt;\"\nResponse: \"04:20:00:12:23:45 pause&lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/playlist/#mode","title":"mode","text":"<p><code>&lt;playerid&gt; mode ?</code></p> <p>The <code>mode</code> command allows to query the player state and returns one of <code>play</code>, <code>stop</code> or <code>pause</code>.</p> <p>If the player is off, <code>mode ?</code> returned value is undefined.</p> <p>Example: <pre><code>Request: \"04:20:00:12:23:45 mode ?&lt;LF&gt;\"\nResponse: \"04:20:00:12:23:45 mode stop&lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/playlist/#time","title":"time","text":"<p><code>&lt;playerid&gt; time &lt;number|-number|+number|?&gt;</code></p> <p>The <code>time</code> command allows you to query the current number of seconds that the current song has been playing by passing in a <code>?</code>. You may jump to a particular position in a song by specifying a number of seconds to seek to. You may also jump to a relative position within a song by putting an explicit <code>-</code> or <code>+</code> character before a number of seconds you would like to seek.</p> <p>Examples: <pre><code>Request: \"04:20:00:12:23:45 time ?&lt;LF&gt;\"\nResponse: \"04:20:00:12:23:45 time 12.55&lt;LF&gt;\"\n\nRequest: \"04:20:00:12:23:45 time 5&lt;LF&gt;\"\nResponse: \"04:20:00:12:23:45 time 5&lt;LF&gt;\"\n\nRequest: \"04:20:00:12:23:45 time -5&lt;LF&gt;\"\nResponse: \"04:20:00:12:23:45 time -5&lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/playlist/#querying-the-song-playing","title":"Querying the Song Playing","text":"<p>The <code>remote</code>, <code>current_title</code>, <code>genre</code>, <code>artist</code>, <code>album</code>, <code>title</code> <code>duration</code>, and <code>path</code> commands allow for querying information about the song currently playing.</p> <p>See also a similar set of queries for a Song on a given playlist at Querying a Song on a Playlist (tho that set of queries does not have a <code>current_title</code> query).</p>"},{"location":"reference/cli/playlist/#current_title","title":"current_title","text":"<p><code>&lt;playerid&gt; current_title ?</code></p> <p><code>current_title</code> returns the current title for remote streams or the song title as formatted for the player.</p> <pre><code>Request: \"04:20:00:12:23:45 current_title ?&lt;LF&gt;\"\nResponse: \"04:20:00:12:23:45 current_title 1-Voulez%20vous%20(ABBA)&lt;LF&gt;\"\n</code></pre>"},{"location":"reference/cli/playlist/#remote","title":"remote","text":"<p>` remote ?' <p>The <code>remote</code> command allows for querying information about the song currently playing. Command <code>remote</code> returns <code>1</code> if the current song is a remote stream.</p> <pre><code>Request: \"04:20:00:12:23:45 remote ?&lt;LF&gt;\"\nResponse: \"04:20:00:12:23:45 remote 0&lt;LF&gt;\"\n</code></pre>"},{"location":"reference/cli/playlist/#genre","title":"genre","text":"<p><code>&lt;playerid&gt; genre ?</code></p> <p>Example <pre><code>Request: \"04:20:00:12:23:45 genre ?&lt;LF&gt;\"\nResponse: \"04:20:00:12:23:45 genre Rock&lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/playlist/#artist","title":"artist","text":"<p><code>&lt;playerid&gt; artist ?</code></p> <p>Example <pre><code>Request: \"04:20:00:12:23:45 artist ?&lt;LF&gt;\"\nResponse: \"04:20:00:12:23:45 artist Abba&lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/playlist/#album","title":"album","text":"<p><code>&lt;playerid&gt; album ?</code></p> <p>Example <pre><code>Request: \"04:20:00:12:23:45 album ?&lt;LF&gt;\"\nResponse: \"04:20:00:12:23:45 album Greatest%20Hits&lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/playlist/#title","title":"title","text":"<p><code>&lt;playerid&gt; title ?</code></p> <p>Example <pre><code>Request: \"04:20:00:12:23:45 title ?&lt;LF&gt;\"\nResponse: \"04:20:00:12:23:45 title Voulez%20vous&lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/playlist/#duration","title":"duration","text":"<p><code>&lt;playerid&gt; duration ?</code></p> <p>Example <pre><code>Request: \"04:20:00:12:23:45 duration ?&lt;LF&gt;\"\nResponse: \"04:20:00:12:23:45 duration 103.2&lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/playlist/#path","title":"path","text":"<p><code>&lt;playerid&gt; path ?</code></p> <p>Example <pre><code>Request: \"04:20:00:12:23:45 path ?&lt;LF&gt;\"\nResponse: \"04:20:00:12:23:45 path pathtofile&lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/playlist/#playlist-play","title":"playlist play","text":"<p><code>&lt;playerid&gt; playlist play &lt;item&gt; &lt;title&gt; &lt;fadeInSecs&gt;</code></p> <p>The <code>playlist play</code> command puts the specified song URL, playlist or directory contents into the current playlist and plays starting at the first item. Any songs previously in the playlist are discarded. An optional title value may be passed to set a title. This can be useful for remote URLs. The <code>fadeInSecs</code> parameter may be passed to specify a fade-in period.</p> <p>Examples: <pre><code>Request: \"04:20:00:12:23:45 playlist play /music/abba/01_Voulez_Vous.mp3&lt;LF&gt;\"\nResponse: \"04:20:00:12:23:45 playlist play /music/abba/01_Voulez_Vous.mp3&lt;LF&gt;\"\n\nRequest: \"04:20:00:12:23:45 playlist play http://someserver/02_Sledgehammer.flac Peter%20Gabriel%20-%20Sledgehammer&lt;LF&gt;\"\nResponse: \"04:20:00:12:23:45 playlist play http://someserver/02_Sledgehammer.flac Peter%20Gabriel%20-%20Sledgehammer&lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/playlist/#playlist-add","title":"playlist add","text":"<p><code>&lt;playerid&gt; playlist add &lt;item&gt; &lt;title&gt;</code></p> <p>The <code>playlist add</code> command adds the specified song URL, playlist or directory contents to the end of the current playlist. Songs currently playing or already on the playlist are not affected. An optional title value may be passed to set a title. This can be useful for remote URLs.</p> <p>Examples: <pre><code>Request: \"04:20:00:12:23:45 playlist add /music/abba/01_Voulez_Vous.mp3&lt;LF&gt;\"\nResponse: \"04:20:00:12:23:45 playlist add /music/abba/01_Voulez_Vous.mp3&lt;LF&gt;\"\n\nRequest: \"04:20:00:12:23:45 playlist add /playlists/abba.m3u&lt;LF&gt;\"\nResponse: \"04:20:00:12:23:45 playlist add /playlists/abba.m3u&lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/playlist/#playlist-insert","title":"playlist insert","text":"<p><code>&lt;playerid&gt; playlist insert &lt;item&gt; &lt;title&gt;</code></p> <p>The <code>playlist insert</code> command inserts the specified song URL, playlist or directory contents to be played immediately after the current song in the current playlist. Any songs currently playing or already on the playlist are not affected. An optional title value may be passed to set a title. This can be useful for remote URLs.</p> <p>Examples: <pre><code>Request: \"04:20:00:12:23:45 playlist insert /music/abba/01_Voulez_Vous.mp3&lt;LF&gt;\"\nResponse: \"04:20:00:12:23:45 playlist insert /music/abba/01_Voulez_Vous.mp3&lt;LF&gt;\"\n\nRequest: \"04:20:00:12:23:45 playlist insert /playlists/abba.m3u&lt;LF&gt;\"\nResponse: \"04:20:00:12:23:45 playlist insert /playlists/abba.m3u&lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/playlist/#playlist-deleteitem","title":"playlist deleteitem","text":"<p><code>&lt;playerid&gt; playlist deleteitem &lt;item&gt;</code></p> <p>The <code>playlist deleteitem</code> command removes the specified song URL, playlist or directory contents from the current playlist.</p> <p>Examples: <pre><code>Request: \"04:20:00:12:23:45 playlist deleteitem /music/abba/01_Voulez_Vous.mp3&lt;LF&gt;\"\nResponse: \"04:20:00:12:23:45 playlist deleteitem /music/abba/01_Voulez_Vous.mp3&lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/playlist/#playlist-move","title":"playlist move","text":"<p><code>&lt;playerid&gt; playlist move &lt;fromindex&gt; &lt;toindex&gt;</code></p> <p>The <code>playlist move</code> command moves the song at the specified index to a new index in the playlist. An offset of zero is the first song in the playlist.</p> <p>Examples: <pre><code>Request: \"04:20:00:12:23:45 playlist move 0 5&lt;LF&gt;\"\nResponse: \"04:20:00:12:23:45 playlist move 0 5&lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/playlist/#playlist-delete","title":"playlist delete","text":"<p><code>&lt;playerid&gt; playlist delete &lt;songindex&gt;</code></p> <p>The <code>playlist delete</code> command deletes the song at the specified index from the current playlist.</p> <p>Examples: <pre><code>Request: \"04:20:00:12:23:45 playlist delete 5&lt;LF&gt;\"\nResponse: \"04:20:00:12:23:45 playlist delete 5&lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/playlist/#playlist-preview","title":"playlist preview","text":"<p><code>&lt;playerid&gt; playlist preview &lt;taggedParameters&gt;</code></p> <p>When called without a cmd param of <code>stop</code>, replace the current playlist with the playlist specified by url, but save the current playlist to tempplaylist_.m3u for later retrieval. <p>When called with the cmd param of <code>stop</code>, stops the currently playing playlist and loads (if possible) the previous playlist. Restored playlist jumps to beginning of CURTRACK when present in m3u file, and does not autoplay restored playlist.</p> <p>Examples: <pre><code>Request: \"04:20:00:12:23:45 playlist preview url:db:album.titlesearch=A%20FEAST%20OF%20WIRE title:A%20Feast%20Of%20Wire&lt;LF&gt;\"\nResponse: \"04:20:00:12:23:45 playlist preview url:db:album.titlesearch=A%20FEAST%20OF%20WIRE title:A%20Feast%20Of%20Wire&lt;LF&gt;\"\n\nRequest: \"04:20:00:12:23:45 playlist preview cmd:stop&lt;LF&gt;\"\nResponse: \"04:20:00:12:23:45 playlist preview cmd:stop&lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/playlist/#playlist-resume","title":"playlist resume","text":"<p><code>&lt;playerid&gt; playlist resume &lt;playlist&gt; &lt;taggedParameters&gt;</code></p> <p>Replace the current playlist with the playlist specified by <code>&lt;playlist&gt;</code> (p2), starting at the song that was playing when the file was saved. (Resuming works only with M3U files saved with the <code>playlist save</code> command below.)</p> <p>Shortcut: use a bare playlist name (without leading directories or trailing .m3u suffix) to load a playlist in the saved playlists folder.</p> <p>Optional tagged parameters: <code>noplay</code> which when non-zero will not auto-start the track, and <code>wipePlaylist</code>, which will destroy the saved playlist from both the filesystem and from the DB (these tagged params are typically used for resuming a temporarily cached playlist, e.g. after exiting alarm sound preview on squeezeplay devices).</p> <p>Examples: <pre><code>Request: \"04:20:00:12:23:45 playlist resume abba&lt;LF&gt;\"\nResponse: \"04:20:00:12:23:45 playlist resume abba&lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/playlist/#playlist-save","title":"playlist save","text":"<p><code>&lt;playerid&gt; playlist save &lt;filename&gt; &lt;taggedParameters&gt;</code></p> <p>Saves a playlist file in the saved playlists directory. Accepts a playlist filename (without .m3u suffix) and saves in the top level of the playlists directory.</p> <p>Optional tagged parameter: <code>silent</code> When non-zero, suppresses any <code>showBriefly</code> displayed.</p> <p>Examples: <pre><code>Request: \"04:20:00:12:23:45 playlist save abba&lt;LF&gt;\"\nResponse: \"04:20:00:12:23:45 playlist save abba&lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/playlist/#playlist-loadalbum","title":"playlist loadalbum","text":"<p><code>&lt;playerid&gt; playlist loadalbum &lt;genre&gt; &lt;artist&gt; &lt;album&gt;</code></p> <p>The <code>playlist loadalbum</code> command puts songs matching the specified genre artist and album criteria on the playlist. Songs previously in the playlist are discarded.</p> <p>Examples: <pre><code>Request: \"04:20:00:12:23:45 playlist loadalbum Rock Abba *&lt;LF&gt;\"\nResponse: \"04:20:00:12:23:45 playlist loadalbum Rock Abba *&lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/playlist/#playlist-addalbum","title":"playlist addalbum","text":"<p><code>&lt;playerid&gt; playlist addalbum &lt;genre&gt; &lt;artist&gt; &lt;album&gt;</code></p> <p>The <code>playlist addalbum</code> command appends all songs matching the specified criteria onto the end of the playlist. Songs currently playing or already on the playlist are not affected.</p> <p>Examples: <pre><code>Request: \"04:20:00:12:23:45 playlist addalbum Rock Abba *&lt;LF&gt;\"\nResponse: \"04:20:00:12:23:45 playlist addalbum Rock Abba *&lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/playlist/#playlist-loadtracks","title":"playlist loadtracks","text":"<p><code>&lt;playerid&gt; playlist loadtracks &lt;searchparam&gt;</code></p> <p>The <code>playlist loadtracks</code> command puts tracks matching the specified query on the playlist. Songs previously in the playlist are discarded. Note: you must provide a particular form to the searchparam (see examples)</p> <p>Examples: <pre><code>Request: \"04:20:00:12:23:45 playlist loadtracks track.titlesearch=purple &lt;LF&gt;\"\nResponse: \"04:20:00:12:23:45 playlist loadtracks track.titleseach=purple &lt;LF&gt;\"\n\nRequest: \"04:20:00:12:23:45 playlist loadtracks album.titlesearch=3121 &lt;LF&gt;\"\nResponse: \"04:20:00:12:23:45 playlist loadtracks album.titlesearch=3121 &lt;LF&gt;\"\n\nRequest: \"04:20:00:12:23:45 playlist loadtracks contributor.namesearch=prince &lt;LF&gt;\"\nResponse: \"04:20:00:12:23:45 playlist loadtracks contributor.namesearch=prince &lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/playlist/#playlist-addtracks","title":"playlist addtracks","text":"<p><code>&lt;playerid&gt; playlist addtracks &lt;searchparam&gt;</code></p> <p>The <code>playlist addtracks</code> command appends all songs matching the specified criteria onto the end of the playlist. Songs currently playing or already on the playlist are not affected.</p> <p>Note: you must provide a particular form to the searchparam (see examples)</p> <p>Examples: <pre><code>Request: \"04:20:00:12:23:45 playlist addtracks track.titlesearch=purple &lt;LF&gt;\"\nResponse: \"04:20:00:12:23:45 playlist addtracks track.titleseach=purple &lt;LF&gt;\"\n\nRequest: \"04:20:00:12:23:45 playlist addtracks album.titlesearch=3121 &lt;LF&gt;\"\nResponse: \"04:20:00:12:23:45 playlist addtracks album.titlesearch=3121 &lt;LF&gt;\"\n\nRequest: \"04:20:00:12:23:45 playlist addtracks contributor.namesearch=prince &lt;LF&gt;\"\nResponse: \"04:20:00:12:23:45 playlist addtracks contributor.namesearch=prince &lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/playlist/#playlist-insertalbum","title":"playlist insertalbum","text":"<p><code>&lt;playerid&gt; playlist insertalbum &lt;genre&gt; &lt;artist&gt; &lt;album&gt;</code></p> <p>The <code>playlist insertalbum</code> command inserts all songs matching the specified criteria at the top of the playlist. Songs already on the playlist are not affected.</p> <p>Examples: <pre><code>Request: \"04:20:00:12:23:45 playlist addalbum Rock Abba *&lt;LF&gt;\"\nResponse: \"04:20:00:12:23:45 playlist addalbum Rock Abba *&lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/playlist/#playlist-deletealbum","title":"playlist deletealbum","text":"<p><code>&lt;playerid&gt; playlist deletealbum &lt;genre&gt; &lt;artist&gt; &lt;album&gt;</code></p> <p>The <code>playlist deletealbum</code> command removes songs matching the specified genre artist and album criteria from the playlist.</p> <p>Examples: <pre><code>Request: \"04:20:00:12:23:45 playlist deletealbum Rock Abba *&lt;LF&gt;\"\nResponse: \"04:20:00:12:23:45 playlist deletealbum Rock Abba *&lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/playlist/#playlist-clear","title":"playlist clear","text":"<p><code>&lt;playerid&gt; playlist clear</code></p> <p>The <code>playlist clear</code> command removes any song that is on the playlist. The player is stopped.</p> <p>Examples: <pre><code>Request: \"04:20:00:12:23:45 playlist clear&lt;LF&gt;\"\nResponse: \"04:20:00:12:23:45 playlist clear&lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/playlist/#playlist-zap","title":"playlist zap","text":"<p><code>&lt;playerid&gt; playlist zap &lt;songindex&gt;</code></p> <p>The <code>playlist zap</code> command adds the song at index songindex into the zapped song playlist.</p> <p>Examples: <pre><code>Request: \"04:20:00:12:23:45 playlist zap 3&lt;LF&gt;\"\nResponse: \"04:20:00:12:23:45 playlist zap 3&lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/playlist/#playlist-name","title":"playlist name","text":"<p><code>&lt;playerid&gt; playlist name ?</code></p> <p>The <code>playlist name</code> command returns the name of the saved playlist last loaded into the Now Playing playlist, if any.</p> <p>Examples: <pre><code>Request: \"04:20:00:12:23:45 playlist name ?&lt;LF&gt;\"\nResponse: \"04:20:00:12:23:45 playlist name Jazz%20Favorites &lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/playlist/#playlist-url","title":"playlist url","text":"<p><code>&lt;playerid&gt; playlist url ?</code></p> <p>The <code>playlist url</code> command returns the URL of the saved playlist last loaded into the Now Playing playlist, if any.</p> <p>Examples: <pre><code>Request: \"04:20:00:12:23:45 playlist url ?&lt;LF&gt;\"\nResponse: \"04:20:00:12:23:45 playlist url file:///Users/dean/Music/testmusic/Zapped%20Songs.m3u&lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/playlist/#playlist-modified","title":"playlist modified","text":"<p><code>&lt;playerid&gt; playlist modified ?</code></p> <p>The <code>playlist modified</code> returns the modification state of the saved playlist last loaded into the Now Playing playlist, if any. If <code>1</code>, the playlist has been modified since it was loaded.</p> <p>Examples: <pre><code>Request: \"04:20:00:12:23:45 playlist modified ?&lt;LF&gt;\"\nResponse: \"04:20:00:12:23:45 playlist modified 0&lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/playlist/#playlist-playslistsinfo","title":"playlist playslistsinfo","text":"<p><code>&lt;playerid&gt; playlist playlistsinfo &lt;taggedParameters&gt;</code></p> <p>The <code>playlist playlistsinfo</code> query returns information on the saved playlist last loaded into the Now Playing playlist, if any.</p> <p>Accepted tagged parameters:</p> Tag Description <code>id</code> Playlist id. <code>name</code> Playlist name. Equivalent to <code>playlist name ?</code>. <code>modified</code> Modification state of the saved playlist. Equivalent to <code>playlist modified ?</code>. <code>url</code> Playlist url. Equivalent to <code>playlist url ?</code>. <p>Returned tagged parameters:</p> Tag Description <code>id</code> Playlist id. <code>name</code> Playlist name. Equivalent to <code>playlist name ?</code>. <code>modified</code> Modification state of the saved playlist. Equivalent to <code>playlist modified ?</code>. <code>url</code> Playlist url. Equivalent to <code>playlist url ?</code>. <p>Example: <pre><code>Request: \"a5:41:d2:cd:cd:05 playlist playlistsinfo &lt;LF&gt;\"\nResponse: \"a5:41:d2:cd:cd:05 playlist playlistsinfo id:267 name:A98 modified:0 url:file://Volumes/... &lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/playlist/#playlist-index","title":"playlist index","text":"<p><code>&lt;playerid&gt; playlist index &lt;index|+index|-index|?&gt; &lt;fadeInSecs&gt;</code></p> <p>The <code>playlist index</code> command sets or queries the song that is currently playing by index. When setting, a zero-based value may be used to indicate which song to play.</p> <p>An explicitly positive or negative number may be used to jump to a song relative to the currently playing song. The index can only be set if the playlist is not empty.</p> <p>If an index parameter is set then <code>fadeInSecs</code> may be passed to specify a fade-in period. The value of the current song index may be obtained by passing in <code>?</code> as a parameter.</p> <p>Examples: <pre><code>Request: \"04:20:00:12:23:45 playlist index +1&lt;LF&gt;\"\nResponse: \"04:20:00:12:23:45 playlist index +1&lt;LF&gt;\"\n\nRequest: \"04:20:00:12:23:45 playlist index 5&lt;LF&gt;\"\nResponse: \"04:20:00:12:23:45 playlist index 5&lt;LF&gt;\"\n\nRequest: \"04:20:00:12:23:45 playlist index ?&lt;LF&gt;\"\nResponse: \"04:20:00:12:23:45 playlist index 5&lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/playlist/#querying-a-song-on-a-playlist","title":"Querying a Song on a Playlist","text":"<p>The <code>playlist genre</code>, <code>playlist artist</code>, <code>playlist album</code>, <code>playlist title</code>, <code>playlist path</code>, <code>playlist remote</code> and <code>playlist duration</code> queries return the requested information for a given song at an index position in the current playlist.</p> <p>See also the commands under Querying the Song Playing which provided similar information for the song currently playing (plus an additional query, <code>current_title</code>)</p>"},{"location":"reference/cli/playlist/#playlist-remote","title":"playlist remote","text":"<p> playlist remote  ? <code>playlist remote</code> returns 1 if the <code>song</code> is a remote stream. <p>Example <pre><code>Request: \"04:20:00:12:23:45 playlist remote 3 ?&lt;LF&gt;\"\nResponse: \"04:20:00:12:23:45 playlist remote 3 0&lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/playlist/#playlist-genre","title":"playlist genre","text":"<p><code>&lt;playerid&gt; playlist genre &lt;index&gt; ?</code></p> <p>Example <pre><code>Request: \"04:20:00:12:23:45 playlist genre 3 ?&lt;LF&gt;\"\nResponse: \"04:20:00:12:23:45 playlist genre 3 Rock&lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/playlist/#playlist-artist","title":"playlist artist","text":"<p><code>&lt;playerid&gt; playlist artist &lt;index&gt; ?</code></p> <p>Example <pre><code>Request: \"04:20:00:12:23:45 playlist artist 3 ?&lt;LF&gt;\"\nResponse: \"04:20:00:12:23:45 playlist artist 3 Abba&lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/playlist/#playlist-album","title":"playlist album","text":"<p><code>&lt;playerid&gt; playlist album &lt;index&gt; ?</code></p> <p>Example <pre><code>Request: \"04:20:00:12:23:45 playlist album 3 ?&lt;LF&gt;\"\nResponse: \"04:20:00:12:23:45 playlist album 3 Greatest Hits&lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/playlist/#playlist-title","title":"playlist title","text":"<p><code>&lt;playerid&gt; playlist title &lt;index&gt; ?</code></p> <p>Example <pre><code>Request: \"04:20:00:12:23:45 playlist title 3 ?&lt;LF&gt;\"\nResponse: \"04:20:00:12:23:45 playlist title 3 Voulez Vous&lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/playlist/#playlist-path","title":"playlist path","text":"<p><code>&lt;playerid&gt; playlist path &lt;index&gt; ?</code></p> <p>Example <pre><code>Request: \"04:20:00:12:23:45 playlist path 3 ?&lt;LF&gt;\"\nResponse: \"04:20:00:12:23:45 playlist path 3 file:///Volumes/Music/ABBA/...&lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/playlist/#playlist-duration","title":"playlist duration","text":"<p><code>&lt;playerid&gt; playlist duration &lt;index&gt; ?</code></p> <p>Example <pre><code>Request: \"04:20:00:12:23:45 playlist duration 3 ?&lt;LF&gt;\"\nResponse: \"04:20:00:12:23:45 playlist duration 3 103.2&lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/playlist/#playlist-tracks","title":"playlist tracks","text":"<p><code>&lt;playerid&gt; playlist tracks ?1</code></p> <p>The <code>playlist tracks</code> command returns the the total number of tracks in the current playlist</p> <p>Example: <pre><code>Request: \"04:20:00:12:23:45 playlist tracks ?&lt;LF&gt;\"\nResponse: \"04:20:00:12:23:45 playlist tracks 7&lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/playlist/#playlist-shuffle","title":"playlist shuffle","text":"<p><code>&lt;playerid&gt; playlist shuffle &lt;0|1|2|?|&gt;</code></p> <p>The <code>playlist shuffle</code> command is used to shuffle, unshuffle or query the shuffle state for the current playlist.</p> <p>Meaning of the <code>shuffle</code> parameters:-</p> <ul> <li><code>0</code> indicates that the playlist is not shuffled,</li> <li><code>1</code> indicates that the playlist is shuffled by song,</li> <li><code>2</code> indicates that the playlist is shuffled by album.</li> <li>Used with no parameter, the command toggles the shuffling state.</li> </ul> <p>Example: <pre><code>Request: \"04:20:00:12:23:45 playlist shuffle ?&lt;LF&gt;\"\nResponse: \"04:20:00:12:23:45 playlist shuffle 1&lt;LF&gt;\"\n\nRequest: \"04:20:00:12:23:45 playlist shuffle 0&lt;LF&gt;\"\nResponse: \"04:20:00:12:23:45 playlist shuffle 0&lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/playlist/#playlist-repeat","title":"playlist repeat","text":"<p><code>&lt;playerid&gt; playlist repeat &lt;0|1|2|?|&gt;</code></p> <p>The <code>playlist repeat</code> command is used to indicate or query if the player will stop playing at the end of the playlist, repeat the current song indefinitely, or repeat the current playlist indefinitely.</p> <p>Meaning of the <code>repeat</code> parameters</p> <ul> <li><code>0</code> indicates that the player will stop at the end of the playlist,</li> <li><code>1</code> indicates that the player will repeat the current song indefinitely</li> <li><code>2</code> indicates that the player will repeat the entire playlist indefinitely.</li> <li>Used with no parameter, the command toggles the repeat state.</li> </ul> <p>Example: <pre><code>Request: \"04:20:00:12:23:45 playlist repeat ?&lt;LF&gt;\"\nResponse: \"04:20:00:12:23:45 playlist repeat 2&lt;LF&gt;\"\n\nRequest: \"04:20:00:12:23:45 playlist repeat 0&lt;LF&gt;\"\nResponse: \"04:20:00:12:23:45 playlist repeat 0&lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/playlist/#playlistcontrol","title":"playlistcontrol","text":"<p><code>&lt;playerid&gt; playlistcontrol &lt;taggedParameters&gt;</code></p> <p>The<code>playlistcontrol</code> command enables playlist operations using IDs as returned by extended CLI queries (titles, artists, playlists, etc).</p> <p>Accepted tagged parameters:</p> Tag Description <code>cmd</code> Command to perform on the playlist, one of <code>load</code>, <code>add</code>, <code>insert</code> or <code>delete</code>. This parameter is mandatory. If no additional parameter is provided, the entire DB is loaded/added/inserted/deleted. <code>genre_id</code> Genre ID, to restrict the results to the titles of that genre. <code>artist_id</code> Artist ID, to restrict the results to the titles of that artist. <code>album_id</code> Album ID, to restrict the results to the titles of that album. <code>track_id</code> Comma-separated list of track IDs, to restrict the results to these track_ids. If this parameter is provided, then any <code>genre_id</code>, <code>artist_id</code> and/or <code>album_id</code> parameter is ignored. The tracks are added to the playlist in the given order. <code>year</code> Year, to restrict the results to the given year. The form <code>year_id</code> is accepted for backwards compatibility but is deprecated. <code>playlist_id</code> Playlist ID, to restrict the results to this playlist_id. If this parameter is provided, then any <code>genre_id</code>, <code>artist_id</code>, <code>album_id</code> and/or <code>track_id</code> parameter is ignored. <code>folder_id</code> Folder ID, to restrict the results to files in this folder_id. If this parameter is provided, then all the others are ignored. Note that <code>cmd:delete</code> is not supported for folders. <code>playlist_name</code> Playlist name, to restrict the results to this playlist_name. If this parameter is provided, then any <code>genre_id</code>, <code>artist_id</code>, <code>album_id</code>, <code>track_id</code> and/or <code>playlist_id</code> parameter is ignored. <code>play_index</code> If this parameter is provided along with <code>cmd:load</code> then playback will start with the indicated track. <code>sort</code> Album sort order. One of<code>album</code>, (the default), <code>new</code> (sort by change date in descending order), <code>artflow</code> which sorts by artist, year, album for use with artwork-centric interfaces, <code>artistalbum</code>, <code>yearalbum</code>, <code>yearartistalbum</code>, <code>random</code>Only of relevance if <code>genre_id</code>, <code>artist_id</code>, <code>year</code> or <code>year_id</code> is supplied. <p>Returned tagged parameters:</p> Tag Description <code>rescan</code> Returned with value 1 if the server is still scanning the database. The command may therefore have missed items. Not returned if no scan is in progress. <code>count</code> Number of elements loaded/added/inserted or max number of elements deleted. For folders, only 1 is returned. <p>Example: <pre><code>Request: \"a5:41:d2:cd:cd:05 playlistcontrol cmd:add genre_id:9&lt;LF&gt;\"\nResponse: \"a5:41:d2:cd:cd:05 playlistcontrol cmd:add genre_id:9 count:33&lt;LF&gt;\"\n\nRequest: \"a5:41:d2:cd:cd:05 playlistcontrol cmd:load album_id:22&lt;LF&gt;\"\nResponse: \"a5:41:d2:cd:cd:05 playlistcontrol cmd:load album_id:22 count:12&lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/randomplay/","title":"CLI - RandomPlay commands and queries","text":""},{"location":"reference/cli/randomplay/#randomplay-commands-and-queries","title":"Randomplay commands and queries","text":""},{"location":"reference/cli/randomplay/#randomplay","title":"randomplay","text":"<p><code>&lt;playerid&gt; randomplay &lt;tracks|albums|contributors|year|disable&gt;</code></p> <p>The <code>randomplay</code> command starts a random mix of the given type. The <code>disable</code> type would disable continuation of the currently playing mix. It would cause the current playlist to play to the end and no new tracks be added.</p> <p>Example: <pre><code>Request: \"04:20:00:12:23:45 randomplay albums&lt;LF&gt;\"\nResponse: \"04:20:00:12:23:45 randomplay albums&lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/randomplay/#randomplaygenrelist","title":"randomplaygenrelist","text":"<p><code>&lt;playerid&gt; randomplaygenrelist</code></p> <p>This returns a formatted list of genres which is for use on the Jive platform.</p> <p>Example: <pre><code>Request: \"04:20:00:12:23:45 randomplaygenrelist&lt;LF&gt;\"\nResponse: \"04:20:00:12:23:45 randomplaygenrelist count%3A103\noffset%3A0 actions%3AHASH(0xb804350) checkbox%3A1 text%3A80s\nactions%3AHASH(0xb8042a8) checkbox%3A1 text%3AAcid%20Jazz\nactions%3AHASH(0xb80438c) checkbox%3A1 text%3AAcoustic\nactions%3AHASH(0xb804494) checkbox%3A0 text%3AAdvertisement\nactions%3AHASH(0xb8cdcc0) checkbox%3A1 text%3AAfropop\nactions%3AHASH(0xb8cdf9c) checkbox%3A1 &lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/randomplay/#randomplaychoosegenre","title":"randomplaychoosegenre","text":"<p><code>&lt;playerid&gt; randomplaychoosegenre &lt;0|1&gt;</code></p> <p>Turn a particular genre on/off in random mix.</p> <p>Example: <pre><code>Request: \"04:20:00:12:23:45 randomplaychoosegenre Afropop 1&lt;LF&gt;\"\nResponse: \"04:20:00:12:23:45 randomplaychoosegenre Afropop 1&lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/randomplay/#randomplaygenreselectall","title":"randomplaygenreselectall","text":"<p><code>&lt;playerid&gt; randomplaygenreselectall &lt;0|1&gt;</code></p> <p>Turn all genres on/off in random mix.</p> <p>Example: <pre><code>Request: \"04:20:00:12:23:45 randomplaygenreselectall 1&lt;LF&gt;\"\nResponse: \"04:20:00:12:23:45 randomplaychoosegenre 1&lt;LF&gt;\"\n</code></pre></p>"},{"location":"reference/cli/randomplay/#randomplayisactive","title":"randomplayisactive","text":"<p><code>&lt;playerid&gt; randomplayisactive</code></p> <p>Get to know whether RandomPlay is active for a given player, and what kind of mix it's playing.</p> <p>Example: <pre><code>Request: \"04:20:00:12:23:45 randomplaygisactive\"\nResponse: \"04:20:00:12:23:45 randomplayisactive album\"\n</code></pre></p>"},{"location":"reference/cli/using-the-cli/","title":"Using the command-line interface","text":"<p>There are two ways to use the CLI commands: using a raw socket Telnet style connection, or using the JSON/RPC interface over the HTTP protocol.</p>"},{"location":"reference/cli/using-the-cli/#telnet","title":"Telnet","text":"<p>LMS provides a command-line interface to the players via TCP/IP. After starting the server, commands and queries may be sent by connecting to a specific TCP/IP port. The server will reply echoing the request (for commands) or by returning the requested data (for queries). By default, the server will listen for connections on TCP/IP port 9090. This format is designed for ease of integration into AMX, Crestron and other automation systems.</p> <p>The end of line separator is line feed (&lt;LF&gt; ASCII decimal 10, hexadecimal 0x0A). The server accepts LF, CR or 0x00 (or any combination thereof) as end of line, and replies with whatever was used for the command. For strings, LMS uses the UTF-8 character-set encoding.</p> <p>To use the command line interface interactively, use the telnet command from your system's command prompt: <code>telnet localhost 9090</code> and when it connects, you can start typing commands. Beware that the server expects parameters to be encoded using percent-style escaping (the same method as is used in URLs); <code>\"</code> and <code>\\\\</code> are not supported as in shell-like environments.</p> <p>A limited subset of the CometD functionality supported over HTTP is also available to CLI clients. This allows for an alternate command/query and response syntax using JSON structured data instead of the space delimited positional parameters and percent-style escaping format.</p> <p>For debugging purposes, CLI formatted commands can be sent using standard in and out. This support is only available on Unix platforms (MacOS X included), and must be enabled by launching the server with the <code>--stdio</code> command line option.</p>"},{"location":"reference/cli/using-the-cli/#practice-with-a-few-cli-commands","title":"Practice with a few CLI commands","text":"<p>Log in using telnet on port 9090. Use CLI commands to get the version of LMS, find a player id, and use that player id to mute the player. After each command you should get a response.</p> <pre><code>telnet localhost 9090\nversion ?\nplayer id 0 ?\u200b\n00:04:20:ab:cd:ef\u200b mute\n</code></pre>"},{"location":"reference/cli/using-the-cli/#jsonrpcjs","title":"jsonrpc.js","text":"<p>You can alternatively use a JSON-RPC 1.0 API over HTTP to interact with the CLI. This employs POST requests sent to <code>http://&lt;server&gt;:&lt;port&gt;/jsonrpc.js</code>, where port is the normal 9000 http port instead of the 9090 CLI port. There's no need to create a connection as with telnet.</p> <p>The Content-Type header should be \"application/json\" and the body of the request should include a JSON-encoded object which includes an array containing the extended query format parameters (see section Command format) as follows:</p> <p><code>{\"id\": 1, \"method\": \"slim.request\", \"params\": [ &lt;playerid&gt;, [&lt;command&gt;, &lt;start&gt;, &lt;itemsPerResponse&gt;, &lt;p3&gt;, ... &lt;pN&gt; ]]}</code></p> <p>The response will be a JSON-encoded object which echoes the params/id/method parameters from the request, with the requested data present in the \"result\" object.</p> <p>Example:</p> <p><code>curl -g -X POST -d '{\"id\":1,\"method\":\"slim.request\",\"params\":[\"00:04:20:ab:cd:ef\",[\"playlist\",\"name\",\"?\"]]}' http://192.168.1.1:9000/jsonrpc.js</code></p> <p>Response:</p> <p><code>{ \"params\":[\"00:04:20:ab:cd:ef\",[\"playlist\",\"name\",\"?\"]],\"result\":{\"_name\":\"Daily Mix\"},\"id\":\"1\",\"method\":\"slim.request\"}</code></p> <p>For commands that are global to the server and do not require a <code>&lt;playerid&gt;</code>, you can substitute 0. There is no error handling when malformed or invalid requests are attempted \u2014 there will either be an empty response {} or you'll observe an ECONNRESET error.</p> <p>Note that percent-style encoding of parameters is not needed when using jsonrpc.js.</p>"},{"location":"reference/cli/using-the-cli/#examples","title":"Examples","text":""},{"location":"reference/cli/using-the-cli/#mute-a-player","title":"Mute a player","text":"<p>The <code>mixer muting</code> command mutes or unmutes the player. Use <code>0</code> to unmute, <code>1</code> to mute, <code>?</code> to query and no parameter (or <code>toggle</code>) to toggle the muting state of the player.</p> <p>Mute player <code>00:04:20:ab:cd:ef</code></p> curlwgetnc / ncat <pre><code>curl -g -X POST -d '{\"id\":1,\"method\":\"slim.request\",\"params\":[\"00:04:20:ab:cd:ef\",[\"mixer\",\"muting\",\"1\"]]}' http://192.168.1.1:9000/jsonrpc.js\n</code></pre> <pre><code>wget -q -O- --post-data='{\"id\":1,\"method\":\"slim.request\",\"params\":[\"00:04:20:ab:cd:ef\",[\"mixer\",\"muting\",\"1\"]]}' http://192.168.1.1:9000/jsonrpc.js\n</code></pre> <pre><code>printf \"00:04:20:ab:cd:ef mixer muting 1\\n\" | nc 192.168.1.1 9090\n</code></pre> <p>The response you will get looks like <code>{\"id\":1,\"method\":\"slim.request\",\"result\":{\"_muting\":\"1\"},\"params\":[\"00:04:20:ab:cd:ef\",[\"mixer\",\"muting\",\"?\"]]}</code> in the case of curl or wget or <code>00:04:20:ab:cd:ef mixer muting 1</code> in the case of ncat.</p>"},{"location":"reference/cli/using-the-cli/#skip-to-the-next-track","title":"Skip to the next track","text":"<p>The <code>playlist index</code> command sets or queries the song that is currently playing by index. When setting, a zero-based value may be used to indicate which song to play. An explicitly positive or negative number may be used to jump to a song relative to the currently playing song.</p> <p>Skip to the next track on player <code>00:04:20:ab:cd:ef</code>:</p> curlwgetnc / ncat <pre><code>curl -g -X POST -d '{\"id\":1,\"method\":\"slim.request\",\"params\":[\"00:04:20:ab:cd:ef\",[\"playlist\",\"index\",\"+1\"]]}' http://192.168.1.1:9000/jsonrpc.js\n</code></pre> <pre><code>wget -q -O- --post-data='{\"id\":1,\"method\":\"slim.request\",\"params\":[\"00:04:20:ab:cd:ef\",[\"playlist\",\"index\",\"+1\"]]}' http://192.168.1.1:9000/jsonrpc.js\n</code></pre> <pre><code>printf \"00:04:20:ab:cd:ef playlist index +1\\n\" | nc 192.168.1.1 9090\n</code></pre>"},{"location":"reference/cli/using-the-cli/#command-format","title":"Command format","text":"<p>General command and query format The format of the commands, queries and server replies is as follows:</p> <p><code>[&lt;playerid&gt;] &lt;p0&gt; &lt;p1&gt; ... &lt;pN&gt; &lt;LF&gt;</code></p> <p>where:</p> <p><code>&lt;playerid&gt;</code> is the unique identifier for the player, usually (but not guaranteed to be) the MAC address of the player. Some commands are global to the server and do not require a <code>&lt;playerid&gt;</code>. For commands requiring it, a random player will be selected by the server if the <code>&lt;playerid&gt;</code> is omitted, and returned in the server reply. <code>&lt;playerid&gt;</code> may be obtained by using the <code>player id</code> or <code>players</code> queries.</p> <p><code>&lt;p0&gt;</code> through <code>&lt;pN&gt;</code> are positional parameters. Pass a <code>?</code> to obtain a value for that parameter in the server response (i.e. send a query). Details of the parameters vary for each command as described below.</p> <p>Each parameter needs to be encoded using percent-style escaping, the same method as is used in URLs; for example, <code>The Clash?</code> would be encoded as <code>The%20Clash%3F</code>. This also applies to <code>&lt;playerid&gt;</code>. In the examples below, the escaping is not shown for readability (except <code>%20</code> for space).</p>"},{"location":"reference/cli/using-the-cli/#extended-query-format","title":"Extended query format","text":"<p>A few extended queries are defined, to regroup multiple queries and allow browsing the server database. These queries return multiple items. Overall however, their format is compliant with the general command format above:</p> <p><code>[&lt;playerid&gt;] &lt;command&gt; &lt;start&gt; &lt;itemsPerResponse&gt; &lt;p3&gt; ... &lt;pN&gt; &lt;LF&gt;</code></p> <p>where:</p> <p><code>&lt;playerid&gt;</code> is the unique identifier for the player, as above.</p> <p><code>&lt;command&gt;</code> is the query name.</p> <p><code>&lt;start&gt;</code> and <code>&lt;itemsPerResponse&gt;</code> are positional parameters that control the response chunking. <code>&lt;start&gt;</code> is a zero-based index of the first item to return, and <code>&lt;itemsPerResponse&gt;</code> is the number of items to return, if possible.</p> <p><code>&lt;p3&gt;</code> through <code>&lt;pN&gt;</code> are tagged parameters. Tags consist of a name followed by <code>:</code>. For example, <code>artist:Abba</code>. The tag and the <code>:</code> are URL escaped with the field value. Tag names cannot contain <code>:</code> but the data can.</p> <p>to which the server replies:</p> <p><code>[&lt;playerid&gt;] &lt;command&gt; &lt;start&gt; &lt;itemsPerResponse&gt; &lt;p3&gt; ... &lt;pN&gt; &lt;pN+1&gt; ... &lt;pM&gt; &lt;LF&gt;</code></p> <p>where:</p> <p>The entire query is repeated.</p> <p><code>&lt;pN+1&gt;</code> through <code>&lt;pM&gt;</code> is the tagged returned data. A special tag value is defined in each command to separate the multiple returned items. Data is only returned when applicable, that is, all possible tags are not always returned.</p> <p>If the <code>&lt;itemsPerResponse&gt;</code> positional parameter and all tagged parameters are omitted then all possible items are returned.</p> <p>Example:</p> <p>The <code>players</code> command returns data on all players known by the server. It is a shortcut call compared to the general CLI API <code>player count ?</code> followed by a number of calls to get the players name, ID, etc. The command must be called with the chunking parameters. For example, the following returns information on the first 2 players known by the server (if so many exist), starting from the first one:</p> <pre><code>Request: \"players 0 2&lt;LF&gt;\"\nResponse: \"players 0 2 count:2 playerindex:0 playerid:a5:41:d2:cd:cd:05 ip:127.0.0.1:60488 name:127.0.0.1 model:softsqueeze displaytype:graphic-280x16 connected:1 playerindex:1 playerid:00:04:20:02:00:c8 ip:192.168.1.22:3483 name:Movy model:slimp3 displaytype:noritake-katakana connected:1&lt;LF&gt;\"\n</code></pre>"},{"location":"reference/cli/using-the-cli/#extended-command-format","title":"Extended command format","text":"<p>Extended commands are commands that reuse the general principle of tagged parameters as introduced by extended queries:</p> <p><code>[&lt;playerid&gt;] &lt;command&gt; &lt;p1&gt; ... &lt;pN&gt; &lt;LF&gt;</code></p> <p>where:</p> <p><code>&lt;playerid&gt;</code> is the unique identifier for the player, as above.</p> <p><code>&lt;command&gt;</code> is the command name.</p> <p><code>&lt;p1&gt;</code> through <code>&lt;pN&gt;</code> are tagged parameters as defined above.</p> <p>The server performs the command and returns:</p> <p><code>[&lt;playerid&gt;] &lt;command&gt; &lt;p1&gt; ... &lt;pN&gt; &lt;pN+1&gt; ... &lt;pM&gt; &lt;LF&gt;</code></p> <p>where:</p> <p>The entire query is repeated.</p> <p><code>&lt;pN+1&gt;</code> through <code>&lt;pM&gt;</code> is the tagged returned data. See the command description for definitions. In general commands do return some information about the command performed.</p>"},{"location":"reference/cli/using-the-cli/#cometdjson-format","title":"CometD/JSON format","text":"<p>To use the limited CometD/JSON format over the CLI, first request a <code>clientId</code> by sending a handshake to the <code>/meta/handshake</code> channel and then include that <code>clientId</code> in all subsequent commands and queries for the duration of the CLI session. Note that the requests and responses are encapsulated in a JSON encoded array. The beginning <code>[</code> and ending <code>]</code>square brackets are required.</p> <p>Example:</p> <p>Send a handshake and receive a response that includes a new <code>clientId</code>:</p> <pre><code>Request: [{\"channel\":\"/meta/handshake\"}]\nResponse: [{\"clientId\":\"3a6772d3\",\"supportedConnectionTypes\":[\"long-polling\",\"streaming\"],\"successful\":true,\"advice\":{\"timeout\":60000,\"reconnect\":\"retry\",\"interval\":0},\"version\":\"1.0\",\"channel\":\"/meta/handshake\",\"id\":\"\"}]\n</code></pre> <p>Send a query to the server using the <code>/slim/request</code> channel. Note that the <code>clientId</code> is used in two places:</p> <pre><code>Request: [{\"id\":\"1\",\"clientId\":\"3a6772d3\",\"channel\":\"/slim/request\",\"data\":{\"response\":\"/slim/3a6772d3/request\",\"request\":[\"00:04:20:02:00:c8\",[\"status\",\"-\",\"1\",\"tags:aclKN\"]]}}]\nResponse: [{\"channel\":\"/slim/request\",\"id\":\"1\",\"successful\":true,\"clientId\":\"3a6772d3\"},{\"channel\":\"/slim/3a6772d3/request\",\"id\":\"1\",\"ext\":{\"priority\":\"\"},\"data\":{\"mode\":\"stop\",\"playlist repeat\":0,\"playlist_cur_index\":\"8\",\"rate\":1,\"player_connected\":1,\"player_name\":\"sodco\",\"player_ip\":\"10.0.0.33:47924\",\"seq_no\":0,\"time\":0,\"duration\":299.417,\"playlist_timestamp\":1723945752.73756,\"playlist mode\":\"off\",\"power\":1,\"digital_volume_control\":1,\"mixer volume\":90,\"playlist_loop\":[{\"playlist index\":8,\"id\":29926,\"title\":\"Dark Hours\",\"artist\":\"Shadwick Wilde\",\"coverid\":\"5466de2c\",\"album\":\"Forever Home\"}],\"signalstrength\":0,\"can_seek\":1,\"playlist_tracks\":10,\"playlist shuffle\":0}}]\n</code></pre>"},{"location":"reference/cli/using-the-cli/#notes","title":"Notes","text":""},{"location":"reference/cli/using-the-cli/#security-settings","title":"Security Settings","text":"<p>The Security settings of the server preferences apply to CLI connections when they are established. A change in security settings does not affect established connections. The connection is only accepted from allowed hosts. If password protection is enabled, the <code>login</code> command must be the first command sent after the connection. Any error in the user and/or password, or using any other command as the first one, results in the server disconnecting.</p>"},{"location":"reference/cli/using-the-cli/#lms-preferences-apply-to-cli","title":"LMS Preferences apply to CLI","text":"<p>All LMS preferences apply to the CLI data. For examples, the preference about composers appearing in the artists list applies to the data returned by the <code>artists</code> query.</p>"},{"location":"reference/cli/using-the-cli/#reative-paths-for-songs-or-playlists","title":"Reative Paths for Songs or Playlists","text":"<p>Commands that use paths to songs or playlists ( parameters below) can use relative paths from the root of the Music Library folder to specify songs. For example, if the Music Library is specified as <code>D:\\mymusic</code> and you'd like to refer to a song in that folder named <code>foo.mp3</code> you can specify just <code>foo.mp3</code> in the command parameter. Likewise, to refer to items in the Saved Playlist folder, you can use a prefix of <code>__playlists/</code> before the path. For example, to refer to the saved playlist <code>bar.m3u</code> in the Saved Playlists folder, you can specify a path of <code>__playlists/bar.m3u</code>."},{"location":"reference/cli/using-the-cli/#cover-art","title":"Cover Art","text":"<p>The HTTP server can return cover art for songs using the track ID as returned by the CLI functions. If no cover art exists for the given song, the server returns a special \"no artwork\" image. Please refer to the Artwork Setup documentation for more details on artwork management in LMS.</p> <p>Use the following URL: <code>http://&lt;server&gt;:&lt;port&gt;/music/&lt;track_id&gt;/cover.jpg</code></p> <p>where:</p> <p><code>&lt;server&gt;</code> is the ip address or name of the server.</p> <p><code>&lt;port&gt;</code> is the HTTP port of the server (not the same as the CLI port).</p> <p><code>&lt;track_id&gt;</code> is the track ID as returned by the CLI functions.</p> <p>In addition, there is a shortcut URL to return the artwork of the currently playing song for a player:</p> <p><code>http://&lt;server&gt;:&lt;port&gt;/music/current/cover.jpg?player=&lt;playerid&gt;</code></p> <p>where:</p> <p><code>&lt;server&gt;</code> is the ip address or name of the server.</p> <p><code>&lt;port&gt;</code> is the HTTP port of the server (not the same as the CLI port).</p> <p><code>&lt;playerid&gt;</code> is the unique identifier for the player, as above. If omitted, the server will use a random player.</p>"},{"location":"reference/cli/using-the-cli/#positional-parameters","title":"Positional Parameters","text":"<p>For commands using positional parameters, any extra parameters (after all required ones) will be returned. For commands using tagged parameters, parameters using unknown tags will be returned as well. This allows the client to add to commands and queries some context information.</p> <p>For example: <pre><code>Request: \"04:20:00:12:23:45 mixer bass ? context&lt;LF&gt;\"\nResponse: \"04:20:00:12:23:45 mixer bass 98 context&lt;LF&gt;\"\n\nRequest: \"players 0 2 context:1&lt;LF&gt;\"\nResponse: \"players 0 2 context:1 count:2 id:00:04:20:02:00:c8 ...(same as above)\"\n</code></pre></p>"},{"location":"reference/cli/using-the-cli/#returned-urls-escaping","title":"Returned URLs, escaping","text":"<p>All paths returned as URLs, for example the ones returned by the query <code>songinfo</code> are double URL escaped. To get a useable path (that you can use with your file system), you will need to unescape the field twice. Also note the URLs are not translated or re-encoded: they use the encoding of the underlying filesystem API, typically (but not necessarily) the current locale.</p>"},{"location":"reference/cli/using-the-cli/#transporter-digital-inputs","title":"Transporter Digital Inputs","text":"<p>Transporter Digital Inputs are handled as remote streams, with a URL starting with source: followed by <code>aes-ebu</code>, <code>bnc-spdif</code>, <code>toslink</code> or <code>rca-spdif</code>.</p> <p>To set Transporter to the TOSLINK input, use <code>&lt;playerid&gt; playlist play source:toslink&lt;LF&gt;</code>.</p> <p>When set to a digital input, Transporter reports the URL scheme above to the various path, url or status queries.</p>"}]}